{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Button, ButtonGroup, Text, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport { storage, db, auth } from \"../firebase\";\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport Dropdown from \"../components/dropdown\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function CreatePostScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      imagepath = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      downloadURL = _useState4[0],\n      setDownloadURL = _useState4[1];\n\n  var _useState5 = useState(\"Male\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      petGender = _useState6[0],\n      setGenderValue = _useState6[1];\n\n  var _useState7 = useState(\"Kid\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      petStage = _useState8[0],\n      setStageValue = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      petName = _useState10[0],\n      setPetName = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      petAge = _useState12[0],\n      setPetAge = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      petDescription = _useState14[0],\n      setPetDescription = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      uploading = _useState16[0],\n      setUploading = _useState16[1];\n\n  var _useState17 = useState(0),\n      _useState18 = _slicedToArray(_useState17, 2),\n      transferred = _useState18[0],\n      setTransferred = _useState18[1];\n\n  var _useState19 = useState(2),\n      _useState20 = _slicedToArray(_useState19, 2),\n      selectedButtonIndex = _useState20[0],\n      setSelectedButtonIndex = _useState20[1];\n\n  var pickImageByLibrary = function pickImageByLibrary() {\n    var result;\n    return _regeneratorRuntime.async(function pickImageByLibrary$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickImageByCamera = function pickImageByCamera() {\n    var result;\n    return _regeneratorRuntime.async(function pickImageByCamera$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n            console.log(Platform.OS);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadImage = function uploadImage() {\n    var _auth$currentUser;\n\n    var userId, imagename, storageRef, blob, snapshot, snapshotDownloadURL, docRef;\n    return _regeneratorRuntime.async(function uploadImage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setUploading(true);\n            userId = (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid;\n            console.log('userId: ', userId);\n            imagename = Date.now() + '-' + getRandomString(5) + '-' + userId;\n            storageRef = storage_ref(storage, 'petImages/' + imagename + '.png');\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n              var xhr = new XMLHttpRequest();\n\n              xhr.onload = function () {\n                resolve(xhr.response);\n              };\n\n              xhr.onerror = function () {\n                reject(new TypeError(\"Network request failed\"));\n              };\n\n              xhr.responseType = \"blob\";\n              xhr.open(\"GET\", imagepath, true);\n              xhr.send(null);\n            }));\n\n          case 7:\n            blob = _context3.sent;\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(uploadBytes(storageRef, blob));\n\n          case 10:\n            snapshot = _context3.sent;\n            _context3.next = 13;\n            return _regeneratorRuntime.awrap(getDownloadURL(snapshot.ref));\n\n          case 13:\n            snapshotDownloadURL = _context3.sent;\n            setDownloadURL(snapshotDownloadURL);\n            console.log('File available at', snapshotDownloadURL);\n            _context3.prev = 16;\n            _context3.next = 19;\n            return _regeneratorRuntime.awrap(addDoc(collection(db, \"PetPost\"), {\n              imagepath: snapshotDownloadURL,\n              petname: petName,\n              petgender: petGender,\n              petstages: petStage,\n              desc: petDescription,\n              createdate: new Date()\n            }));\n\n          case 19:\n            docRef = _context3.sent;\n            console.log(\"Document written with ID: \", docRef.id);\n            _context3.next = 26;\n            break;\n\n          case 23:\n            _context3.prev = 23;\n            _context3.t0 = _context3[\"catch\"](16);\n            console.error(\"Error adding document:  \", _context3.t0);\n\n          case 26:\n            setUploading(false);\n\n          case 27:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[16, 23]], Promise);\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        showsHorizontalScrollIndicator: false,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: [_jsx(Input, {\n          style: styles.input,\n          placeholder: \"Charlie\",\n          label: \"Pet Name:\",\n          onChangeText: function onChangeText(text) {\n            return setPetName(text);\n          }\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"0-100\",\n          label: \"Pet Age:\",\n          onChangeText: function onChangeText(text) {\n            return setPetAge(text);\n          }\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Pet Stages:\"\n          }), _jsx(Dropdown, {\n            data: pet_stage_drop_down_data\n          })]\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"Descript your pet here\",\n          label: \"Pet Description:\",\n          onChangeText: function onChangeText(text) {\n            return setPetDescription(text);\n          }\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Pet Gender:\"\n          }), _jsx(Dropdown, {\n            data: gender_drop_down_data\n          })]\n        }), _jsxs(View, {\n          style: styles.imagePickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Pet Image: \"\n          }), _jsx(View, {\n            style: styles.paddingView\n          }), _jsx(ButtonGroup, {\n            buttons: ['Select an image', 'Open camera'],\n            selectedIndex: selectedButtonIndex,\n            onPress: function onPress(value) {\n              setSelectedButtonIndex(value);\n\n              if (value == 0) {\n                pickImageByLibrary();\n              }\n\n              if (value == 1) {\n                pickImageByCamera();\n              }\n            },\n            containerStyle: {\n              marginBottom: 20\n            }\n          }), _jsx(_Fragment, {}), imagepath != \"\" && _jsx(TouchableOpacity, {\n            onPress: pickImageByLibrary,\n            children: _jsx(Image, {\n              style: styles.imageitem,\n              source: {\n                uri: imagepath\n              }\n            })\n          })]\n        }), _jsx(Button, {\n          title: \"Submit\",\n          onPress: uploadImage,\n          loading: uploading,\n          buttonStyle: {\n            backgroundColor: 'rgba(111, 202, 186, 1)',\n            borderRadius: 5,\n            margin: 10,\n            marginTop: 30\n          },\n          titleStyle: {\n            fontSize: 12\n          }\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 20,\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  input: {\n    marginTop: 10,\n    fontSize: 12\n  },\n  pickerContainer: {\n    paddingHorizontal: 10,\n    paddingBottom: 20\n  },\n  pickerLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'rgb(134, 147, 158)'\n  },\n  CardContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: 200,\n    borderRadius: 25,\n    fontSize: 12\n  },\n  contentContainer: {\n    width: '50%',\n    height: '100%',\n    paddingLeft: 10,\n    flex: 1\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  petgender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  desc: {\n    fontSize: 10,\n    color: '#999999'\n  },\n  askbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  askbuttonContainer: {\n    position: 'absolute',\n    left: 10,\n    bottom: 0\n  },\n  imagePickerContainer: {\n    flexDirection: 'column',\n    paddingHorizontal: 10\n  },\n  paddingView: {\n    paddingTop: 10\n  }\n});\nvar gender_drop_down_data = [{\n  label: 'Male',\n  value: 'male'\n}, {\n  label: 'Female',\n  value: 'female'\n}];\nvar pet_stage_drop_down_data = [{\n  label: 'Bady',\n  value: 'bady'\n}, {\n  label: 'Kid',\n  value: 'kid'\n}, {\n  label: 'Adult',\n  value: 'adult'\n}];\n\nfunction getRandomString(length) {\n  var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var result = '';\n\n  for (var i = 0; i < length; i++) {\n    result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\n  }\n\n  return result;\n}","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/CreatePostScreen.tsx"],"names":["React","useState","Button","ButtonGroup","Text","Input","ImagePicker","storage","db","auth","ref","storage_ref","getDownloadURL","uploadBytes","collection","addDoc","Dropdown","CreatePostScreen","imagepath","setImage","downloadURL","setDownloadURL","petGender","setGenderValue","petStage","setStageValue","petName","setPetName","petAge","setPetAge","petDescription","setPetDescription","uploading","setUploading","transferred","setTransferred","selectedButtonIndex","setSelectedButtonIndex","pickImageByLibrary","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","pickImageByCamera","launchCameraAsync","console","log","Platform","OS","uploadImage","userId","currentUser","uid","imagename","Date","now","getRandomString","storageRef","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","TypeError","responseType","open","send","blob","snapshot","snapshotDownloadURL","petname","petgender","petstages","desc","createdate","docRef","id","error","styles","container","height","width","input","text","pickerContainer","pickerLabel","pet_stage_drop_down_data","gender_drop_down_data","imagePickerContainer","paddingView","value","marginBottom","imageitem","backgroundColor","borderRadius","margin","marginTop","fontSize","StyleSheet","create","flex","alignItems","justifyContent","padding","title","fontWeight","separator","marginVertical","paddingHorizontal","paddingBottom","color","CardContainer","flexDirection","flexWrap","borderWidth","borderColor","aspectRatio","contentContainer","paddingLeft","askbutton","askbuttonContainer","position","left","bottom","paddingTop","label","length","randomChars","i","charAt","Math","floor","random"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState, useContext } from 'react';\nimport { StyleSheet, View, Image, TouchableOpacity, ScrollView, Platform } from 'react-native';\nimport { Button, ButtonGroup, withTheme, Text, Input, Divider } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\n\nimport { storage, db, auth } from \"../firebase\";\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { collection, query, where, onSnapshot, getDocs, addDoc } from \"firebase/firestore\";\n\nimport { SettingStackProps, petPostDataProps } from '../types';\nimport Dropdown from '../components/dropdown'\n\nexport default function CreatePostScreen() {\n  const [imagepath, setImage] = useState(\"\");\n  const [downloadURL, setDownloadURL] = useState(\"\");\n  const [petGender, setGenderValue] = useState<number | string>(\"Male\");\n  const [petStage, setStageValue] = useState<number | string>(\"Kid\");\n  const [petName, setPetName] = useState('');\n  const [petAge, setPetAge] = useState<number | string>('');\n  const [petDescription, setPetDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [transferred, setTransferred] = useState(0);\n  const [selectedButtonIndex, setSelectedButtonIndex] = useState(2);\n\n  const pickImageByLibrary = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  };\n\n  const pickImageByCamera = async () => {\n    let result = await ImagePicker.launchCameraAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n    console.log(Platform.OS)\n  };\n\n  const uploadImage = async () => {\n    setUploading(true)\n\n    const userId = auth.currentUser?.uid;\n    console.log('userId: ', userId);\n    const imagename = Date.now() + '-' + getRandomString(5) + '-' + userId\n    const storageRef = storage_ref(storage, 'petImages/' + imagename + '.png');\n\n    const blob: Blob = await new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.onload = function () {\n        resolve(xhr.response);\n      };\n      xhr.onerror = function () {\n        reject(new TypeError(\"Network request failed\"));\n      };\n      xhr.responseType = \"blob\";\n      xhr.open(\"GET\", imagepath, true);\n      xhr.send(null);\n    });\n    const snapshot = await uploadBytes(storageRef, blob);\n    const snapshotDownloadURL = await getDownloadURL(snapshot.ref);\n    setDownloadURL(snapshotDownloadURL);\n    console.log('File available at', snapshotDownloadURL);\n\n    try {\n      const docRef = await addDoc(collection(db, \"PetPost\"), {\n        imagepath: snapshotDownloadURL,\n        petname: petName,\n        petgender: petGender,\n        petstages: petStage,\n        desc: petDescription,\n        createdate: new Date()\n      });\n      console.log(\"Document written with ID: \", docRef.id);\n    } catch (e) {\n      console.error(\"Error adding document:  \", e);\n    }\n\n    setUploading(false)\n  }\n\n  return (\n    <>\n      <View style={styles.container}>\n        <ScrollView showsVerticalScrollIndicator={false}\n          showsHorizontalScrollIndicator={false}\n          style={{ height: \"100%\", width: \"100%\" }}>\n          <Input style={styles.input} placeholder=\"Charlie\" label='Pet Name:' onChangeText={text => setPetName(text)} />\n          <Input style={styles.input} placeholder=\"0-100\" label='Pet Age:' onChangeText={text => setPetAge(text)} />\n          <View style={styles.pickerContainer}>\n            <Text style={styles.pickerLabel} >Pet Stages:</Text>\n            <Dropdown data={pet_stage_drop_down_data} />\n          </View>\n          <Input style={styles.input} placeholder=\"Descript your pet here\" label='Pet Description:' onChangeText={text => setPetDescription(text)} />\n          <View style={styles.pickerContainer}>\n            <Text style={styles.pickerLabel} >Pet Gender:</Text>\n            <Dropdown data={gender_drop_down_data} />\n          </View>\n          <View style={styles.imagePickerContainer}>\n            <Text style={styles.pickerLabel} >Pet Image: </Text>\n            <View style={styles.paddingView} />\n            <ButtonGroup\n              buttons={['Select an image', 'Open camera']}\n              selectedIndex={selectedButtonIndex}\n              onPress={(value) => {\n                setSelectedButtonIndex(value);\n                if (value == 0) {\n                  pickImageByLibrary()\n                }\n                if (value == 1) {\n                  pickImageByCamera()\n                }\n              }}\n              containerStyle={{ marginBottom: 20 }}\n            />\n            <></>\n            {imagepath != \"\" &&\n              <TouchableOpacity onPress={pickImageByLibrary}>\n                <Image style={styles.imageitem}\n                  source={{ uri: imagepath }}\n                />\n              </TouchableOpacity>\n            }\n          </View>\n          <Button title=\"Submit\" onPress={uploadImage}\n            loading={uploading}\n            buttonStyle={{\n              backgroundColor: 'rgba(111, 202, 186, 1)',\n              borderRadius: 5,\n              margin: 10, marginTop: 30\n            }}\n\n            titleStyle={{ fontSize: 12 }} />\n        </ScrollView>\n      </View >\n    </>\n    //imagepath={imagepath} petname={petName} petgender={petGender} petstages={petStage} desc={petDescription} \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 20,\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  input: {\n    marginTop: 10,\n    fontSize: 12\n  },\n  pickerContainer: {\n    paddingHorizontal: 10,\n    paddingBottom: 20\n\n  },\n  pickerLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'rgb(134, 147, 158)'\n  },\n  CardContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start', // if you want to fill rows left to right\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15,\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: 200,\n    borderRadius: 25,\n    fontSize: 12\n  },\n  contentContainer: {\n    width: '50%',\n    height: '100%',\n    paddingLeft: 10,\n    flex: 1,\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  petgender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  desc: {\n    fontSize: 10,\n    color: '#999999'\n  },\n  askbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  askbuttonContainer: {\n    position: 'absolute',\n    left: 10,\n    bottom: 0,\n  },\n  imagePickerContainer: {\n    flexDirection: 'column',\n    paddingHorizontal: 10\n  },\n  paddingView: {\n    paddingTop: 10\n  }\n});\n\nconst gender_drop_down_data = [\n  { label: 'Male', value: 'male' },\n  { label: 'Female', value: 'female' }\n];\n\nconst pet_stage_drop_down_data = [\n  { label: 'Bady', value: 'bady' },\n  { label: 'Kid', value: 'kid' },\n  { label: 'Adult', value: 'adult' }\n];\n\nfunction getRandomString(length: number) {\n  var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var result = '';\n  for (var i = 0; i < length; i++) {\n    result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\n  }\n  return result;\n}"]},"metadata":{},"sourceType":"module"}