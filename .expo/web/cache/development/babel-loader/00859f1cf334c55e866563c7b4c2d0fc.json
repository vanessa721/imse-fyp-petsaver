{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, ListItem, Icon } from 'react-native-elements';\nimport { db, auth } from \"../firebase\";\nimport { onSnapshot, doc, setDoc } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function PetRequestDetailScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var petItem = route.params.petItem;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      ownerName = _useState2[0],\n      setOwnerName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ownerImagepath = _useState4[0],\n      setOwnerImage = _useState4[1];\n\n  var getOwnerDetail = function getOwnerDetail() {\n    var unsub;\n    return _regeneratorRuntime.async(function getOwnerDetail$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"Get data: \", petItem.postcreator);\n\n            if (petItem.postcreator) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 3:\n            unsub = onSnapshot(doc(db, \"Users\", petItem.postcreator), function (doc) {\n              var _doc$data, _doc$data2;\n\n              console.log(\"Current data: \", doc.data());\n              if (doc == undefined) return false;\n              if (!doc.data()) return false;\n              setOwnerName((_doc$data = doc.data()) == null ? void 0 : _doc$data.username);\n              setOwnerImage((_doc$data2 = doc.data()) == null ? void 0 : _doc$data2.imagepath);\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var sendContactRequest = function sendContactRequest() {\n    var _auth$currentUser;\n\n    var userId, postRef, requestRef, unsub;\n    return _regeneratorRuntime.async(function sendContactRequest$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            userId = (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid;\n            _context2.prev = 1;\n\n            if (userId) {\n              _context2.next = 5;\n              break;\n            }\n\n            console.error(\"userId not found:  \", auth.currentUser);\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            postRef = doc(db, \"PetPost\", petItem.id);\n            requestRef = doc(postRef, \"contactRequest\", userId);\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(setDoc(requestRef, {\n              status: 'New request',\n              requestTime: new Date()\n            }, {\n              merge: true\n            }));\n\n          case 9:\n            unsub = _context2.sent;\n            console.log(\"Document written with ID: \", petItem.id);\n            _context2.next = 16;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.error(\"Error adding document:  \", _context2.t0);\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 13]], Promise);\n  };\n\n  useEffect(function () {}, []);\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(ListItem.Swipeable, {\n        leftContent: _jsx(Button, {\n          title: \"Info\",\n          icon: {\n            name: 'info',\n            color: 'white'\n          },\n          buttonStyle: {\n            minHeight: '100%'\n          }\n        }),\n        rightContent: _jsx(Button, {\n          title: \"Delete\",\n          icon: {\n            name: 'delete',\n            color: 'white'\n          },\n          buttonStyle: {\n            minHeight: '100%',\n            backgroundColor: 'red'\n          }\n        }),\n        children: [_jsx(Icon, {\n          name: \"My Icon\",\n          tvParallaxProperties: undefined\n        }), _jsx(ListItem.Content, {\n          children: _jsx(ListItem.Title, {\n            children: \"Hello Swiper\"\n          })\n        }), _jsx(ListItem.Chevron, {\n          tvParallaxProperties: undefined\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  iconContainer: {\n    padding: 20,\n    alignSelf: 'flex-start',\n    zIndex: 1,\n    position: 'absolute'\n  },\n  iconContainer2: {\n    padding: 20,\n    alignSelf: 'flex-end',\n    zIndex: 1,\n    position: 'absolute'\n  },\n  imageitem: {\n    zIndex: 0,\n    aspectRatio: 1.1,\n    width: '100%'\n  },\n  contentContainer: {\n    width: '100%',\n    height: '100%',\n    padding: 30,\n    flex: 1,\n    borderRadius: 25,\n    backgroundColor: 'white',\n    top: -30\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 30\n  },\n  petgender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  desc: {\n    fontSize: 10,\n    color: '#999999'\n  },\n  contactbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15,\n    marginRight: 30\n  },\n  contactbuttonContainer: {\n    marginHorizontal: 30\n  },\n  footerContainer: {\n    position: 'absolute',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    bottom: 0,\n    width: '100%',\n    height: '10%'\n  },\n  ownerContainer: {\n    marginLeft: 30,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  ownerDetailContainer: {\n    marginLeft: 10,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/PetRequestDetailScreen.tsx"],"names":["React","useEffect","useState","Button","ListItem","Icon","db","auth","onSnapshot","doc","setDoc","PetRequestDetailScreen","route","navigation","petItem","params","ownerName","setOwnerName","ownerImagepath","setOwnerImage","getOwnerDetail","console","log","postcreator","unsub","data","undefined","username","imagepath","sendContactRequest","userId","currentUser","uid","error","postRef","id","requestRef","status","requestTime","Date","merge","styles","container","name","color","minHeight","backgroundColor","StyleSheet","create","flex","alignItems","justifyContent","height","iconContainer","padding","alignSelf","zIndex","position","iconContainer2","imageitem","aspectRatio","width","contentContainer","borderRadius","top","petname","fontWeight","fontSize","petgender","marginBottom","desc","contactbutton","paddingHorizontal","marginRight","contactbuttonContainer","marginHorizontal","footerContainer","flexDirection","bottom","ownerContainer","marginLeft","ownerDetailContainer"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState, useContext } from 'react';\nimport { StyleSheet, View, Image, TouchableOpacity, ScrollView, Platform, Pressable } from 'react-native';\nimport { Button, ButtonGroup, withTheme, Text, Input, Divider, Avatar, ListItem, Icon } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { storage, db, auth } from \"../firebase\";\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { collection, query, where, onSnapshot, getDocs, addDoc, doc, setDoc } from \"firebase/firestore\";\n\nimport { SettingStackProps, petPostDataProps } from '../types';\nimport Dropdown from '../components/dropdown'\n\nexport default function PetRequestDetailScreen({ route, navigation }: { route: any, navigation: any }) {\n  const { petItem } = route.params;\n  const [ownerName, setOwnerName] = useState<string | undefined>('');\n  const [ownerImagepath, setOwnerImage] = useState(\"\");\n\n  const getOwnerDetail = async () => {\n    console.log(\"Get data: \", petItem.postcreator);\n    if (!petItem.postcreator) return false;\n    const unsub = onSnapshot(doc(db, \"Users\", petItem.postcreator), (doc) => {\n      console.log(\"Current data: \", doc.data());\n      if (doc == undefined) return false;\n      if (!doc.data()) return false;\n      setOwnerName(doc.data()?.username)\n      setOwnerImage(doc.data()?.imagepath)\n    });\n  }\n\n  const sendContactRequest = async () => {\n    var userId = auth.currentUser?.uid;\n\n    try {\n      if (!userId) {\n        console.error(\"userId not found:  \", auth.currentUser);\n        return\n      }\n\n      var postRef = doc(db, \"PetPost\", petItem.id);\n      var requestRef = doc(postRef, \"contactRequest\", userId);\n\n      const unsub = await setDoc(requestRef, {\n        status: 'New request',\n        requestTime: new Date(),\n      }, { merge: true });\n\n      console.log(\"Document written with ID: \", petItem.id);\n\n    } catch (e) {\n      console.error(\"Error adding document:  \", e);\n    }\n\n  }\n\n\n  useEffect(() => {\n    //getOwnerDetail()\n  }, []);\n\n  return (\n    <>\n      <View style={styles.container}>\n        <ListItem.Swipeable\n          leftContent={\n            <Button\n              title=\"Info\"\n              icon={{ name: 'info', color: 'white' }}\n              buttonStyle={{ minHeight: '100%' }}\n            />\n          }\n          rightContent={\n            <Button\n              title=\"Delete\"\n              icon={{ name: 'delete', color: 'white' }}\n              buttonStyle={{ minHeight: '100%', backgroundColor: 'red' }}\n            />\n          }\n        >\n          <Icon name=\"My Icon\" tvParallaxProperties={undefined} />\n          <ListItem.Content>\n            <ListItem.Title>Hello Swiper</ListItem.Title>\n          </ListItem.Content>\n          <ListItem.Chevron tvParallaxProperties={undefined} />\n        </ListItem.Swipeable>\n      </View >\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  iconContainer: {\n    padding: 20,\n    alignSelf: 'flex-start',\n    zIndex: 1,\n    position: 'absolute'\n  },\n  iconContainer2: {\n    padding: 20,\n    alignSelf: 'flex-end',\n    zIndex: 1,\n    position: 'absolute'\n  },\n  imageitem: {\n    zIndex: 0,\n    aspectRatio: 1.1,\n    width: '100%',\n  },\n  contentContainer: {\n    width: '100%',\n    height: '100%',\n    padding: 30,\n    flex: 1,\n    borderRadius: 25,\n    backgroundColor: 'white',\n    top: -30\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 30\n  },\n  petgender: {\n    fontSize: 10, marginBottom: 12, fontWeight: 'bold', color: '#888888'\n  },\n  desc: {\n    fontSize: 10, color: '#999999'\n  },\n  contactbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15,\n    marginRight: 30\n  },\n  contactbuttonContainer: {\n    marginHorizontal: 30\n  },\n  footerContainer: {\n    position: 'absolute',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    bottom: 0,\n    width: '100%',\n    height: '10%',\n  },\n  ownerContainer: {\n    marginLeft: 30,\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n  },\n  ownerDetailContainer: {\n    marginLeft: 10,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n\n\n});\n\n"]},"metadata":{},"sourceType":"module"}