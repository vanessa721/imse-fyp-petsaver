{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"actions\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport UIMenuView from \"./UIMenuView\";\n\nfunction processAction(action) {\n  var _action$subactions;\n\n  return _objectSpread(_objectSpread({}, action), {}, {\n    imageColor: processColor(action.imageColor),\n    titleColor: processColor(action.titleColor),\n    subactions: (_action$subactions = action.subactions) === null || _action$subactions === void 0 ? void 0 : _action$subactions.map(function (subAction) {\n      return processAction(subAction);\n    })\n  });\n}\n\nvar MenuView = function MenuView(_ref) {\n  var actions = _ref.actions,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var processedActions = actions.map(function (action) {\n    return processAction(action);\n  });\n  return React.createElement(UIMenuView, _extends({}, props, {\n    actions: processedActions\n  }));\n};\n\nexport { MenuView };","map":{"version":3,"sources":["index.tsx"],"names":["imageColor","processColor","action","titleColor","subactions","subAction","processAction","MenuView","props","processedActions","actions"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;;AAGA,OAAA,UAAA;;AAOA,SAAA,aAAA,CAAA,MAAA,EAAgE;AAAA,MAAA,kBAAA;;AAC9D,yCAAO,MAAP;AAEEA,IAAAA,UAAU,EAAEC,YAAY,CAACC,MAAM,CAF1B,UAEmB,CAF1B;AAGEC,IAAAA,UAAU,EAAEF,YAAY,CAACC,MAAM,CAH1B,UAGmB,CAH1B;AAIEE,IAAAA,UAAU,EAAA,CAAA,kBAAA,GAAEF,MAAM,CAAR,UAAA,MAAA,IAAA,IAAA,kBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAEA,kBAAAA,CAAAA,GAAAA,CAAwBG,UAAAA,SAAD;AAAA,aAAeC,aAAa,CAAnDJ,SAAmD,CAA5B;AAAA,KAAvBA;AAJd;AAMD;;AAED,IAAMK,QAAsC,GAAG,SAAzCA,QAAyC,OAA2B;AAAA,MAA1B,OAA0B,QAA1B,OAA0B;AAAA,MAAZC,KAAY;;AACxE,MAAMC,gBAAgB,GAAGC,OAAO,CAAPA,GAAAA,CAAkCR,UAAAA,MAAD;AAAA,WACxDI,aAAa,CADf,MACe,CAD2C;AAAA,GAAjCI,CAAzB;AAGA,SAAO,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAuB,IAAA,OAAO,EAAED;AAAhC,GAAA,CAAA,CAAP;AAJF,CAAA;;AAOA,SAAA,QAAA","sourcesContent":["import React from 'react';\nimport { processColor } from 'react-native';\n\nimport UIMenuView from './UIMenuView';\nimport type {\n  MenuComponentProps,\n  MenuAction,\n  ProcessedMenuAction,\n} from './types';\n\nfunction processAction(action: MenuAction): ProcessedMenuAction {\n  return {\n    ...action,\n    imageColor: processColor(action.imageColor),\n    titleColor: processColor(action.titleColor),\n    subactions: action.subactions?.map((subAction) => processAction(subAction)),\n  };\n}\n\nconst MenuView: React.FC<MenuComponentProps> = ({ actions, ...props }) => {\n  const processedActions = actions.map<ProcessedMenuAction>((action) =>\n    processAction(action)\n  );\n  return <UIMenuView {...props} actions={processedActions} />;\n};\n\nexport { MenuView };\nexport type { MenuComponentProps, MenuAction };\n"]},"metadata":{},"sourceType":"module"}