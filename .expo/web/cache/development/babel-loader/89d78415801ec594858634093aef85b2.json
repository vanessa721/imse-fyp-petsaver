{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text, Avatar } from 'react-native-elements';\nimport { db } from \"../firebase\";\nimport { onSnapshot, doc } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function PetSocialMediaScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      ownerName = _useState2[0],\n      setOwnerName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ownerImagepath = _useState4[0],\n      setOwnerImage = _useState4[1];\n\n  var _useState5 = useState(route.params.petPostDataItem.item),\n      _useState6 = _slicedToArray(_useState5, 2),\n      petPostDataItem = _useState6[0],\n      setPetPostDataItem = _useState6[1];\n\n  var getOwnerDetail = function getOwnerDetail() {\n    var unsub;\n    return _regeneratorRuntime.async(function getOwnerDetail$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (petPostDataItem.postcreator) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 2:\n            unsub = onSnapshot(doc(db, \"Users\", petPostDataItem.postcreator), function (doc) {\n              var _doc$data, _doc$data2;\n\n              if (doc == undefined) return false;\n              if (!doc.data()) return false;\n              setOwnerName((_doc$data = doc.data()) == null ? void 0 : _doc$data.username);\n              setOwnerImage((_doc$data2 = doc.data()) == null ? void 0 : _doc$data2.userIconUri);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getOwnerDetail();\n  }, []);\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.iconContainer,\n        children: [petPostDataItem.imagepath != \"\" && petPostDataItem.imagepath != undefined ? _jsx(Avatar, {\n          size: 100,\n          rounded: true,\n          source: {\n            uri: petPostDataItem.imagepath\n          }\n        }) : _jsx(Avatar, {\n          size: 100,\n          rounded: true,\n          title: petPostDataItem.petname ? petPostDataItem.petname[0] : \"\",\n          containerStyle: {\n            backgroundColor: '#aaaaaa'\n          }\n        }), _jsxs(View, {\n          style: styles.iconDescriptionContainer,\n          children: [_jsx(Text, {\n            style: styles.petname,\n            children: petPostDataItem.petname\n          }), _jsxs(Text, {\n            style: styles.petgender,\n            children: [petPostDataItem.petgender, \"  -  \", petPostDataItem.petstages, \" \"]\n          })]\n        })]\n      }), _jsx(View, {\n        style: styles.contentContainer,\n        children: _jsx(Text, {\n          style: {\n            fontSize: 14,\n            marginTop: 12,\n            fontWeight: 'bold'\n          },\n          children: \"Post\"\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    height: \"100%\",\n    flexDirection: 'column'\n  },\n  iconContainer: {\n    padding: 20,\n    alignSelf: 'flex-start',\n    zIndex: 1,\n    flexDirection: 'row'\n  },\n  iconDescriptionContainer: {\n    marginLeft: 20,\n    alignSelf: 'flex-start'\n  },\n  contentContainer: {\n    width: '100%',\n    height: '100%',\n    padding: 30,\n    flex: 1,\n    borderRadius: 25,\n    backgroundColor: 'white',\n    top: -30\n  },\n  iconContainer2: {\n    marginTop: 40,\n    padding: 20,\n    alignSelf: 'flex-end',\n    zIndex: 1,\n    position: 'absolute'\n  },\n  imageitem: {\n    zIndex: 0,\n    aspectRatio: 1.1,\n    width: '100%'\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 30\n  },\n  petgender: {\n    fontSize: 12,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  paragraph: {\n    fontSize: 12,\n    color: '#999999'\n  },\n  required: {\n    fontSize: 12,\n    color: 'red'\n  },\n  fulfilled: {\n    fontSize: 12,\n    color: 'green'\n  },\n  paragraphTitle: {\n    fontSize: 12,\n    color: '#999999',\n    fontWeight: 'bold'\n  },\n  contactbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15,\n    marginRight: 30\n  },\n  contactbuttonContainer: {\n    marginHorizontal: 30\n  },\n  footerContainer: {\n    position: 'absolute',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    bottom: 0,\n    width: '100%',\n    height: '10%'\n  },\n  ownerContainer: {\n    marginLeft: 30,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  ownerDetailContainer: {\n    marginLeft: 10,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/PetSocialMediaScreen.tsx"],"names":["React","useEffect","useState","Text","Avatar","db","onSnapshot","doc","PetSocialMediaScreen","route","navigation","ownerName","setOwnerName","ownerImagepath","setOwnerImage","params","petPostDataItem","item","setPetPostDataItem","getOwnerDetail","postcreator","unsub","undefined","data","username","userIconUri","styles","container","iconContainer","imagepath","uri","petname","backgroundColor","iconDescriptionContainer","petgender","petstages","contentContainer","fontSize","marginTop","fontWeight","StyleSheet","create","flex","height","flexDirection","padding","alignSelf","zIndex","marginLeft","width","borderRadius","top","iconContainer2","position","imageitem","aspectRatio","marginBottom","color","paragraph","required","fulfilled","paragraphTitle","contactbutton","paddingHorizontal","marginRight","contactbuttonContainer","marginHorizontal","footerContainer","justifyContent","alignItems","bottom","ownerContainer","ownerDetailContainer"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAAuD,OAAvD;;;AAEA,SAAyCC,IAAzC,EAA+DC,MAA/D,QAA6E,uBAA7E;AAIA,SAAkBC,EAAlB;AAEA,SAAmCC,UAAnC,EAAgEC,GAAhE,QAAmF,oBAAnF;;;;AAKA,eAAe,SAASC,oBAAT,OAAsF;AAAA,MAAtDC,KAAsD,QAAtDA,KAAsD;AAAA,MAA/CC,UAA+C,QAA/CA,UAA+C;;AACnG,kBAAkCR,QAAQ,CAAqB,EAArB,CAA1C;AAAA;AAAA,MAAOS,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAwCV,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAOW,cAAP;AAAA,MAAuBC,aAAvB;;AAEA,mBAA8CZ,QAAQ,CAACO,KAAK,CAACM,MAAN,CAAaC,eAAb,CAA6BC,IAA9B,CAAtD;AAAA;AAAA,MAAOD,eAAP;AAAA,MAAwBE,kBAAxB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAChBH,eAAe,CAACI,WADA;AAAA;AAAA;AAAA;;AAAA,6CACoB,KADpB;;AAAA;AAGfC,YAAAA,KAHe,GAGPf,UAAU,CAACC,GAAG,CAACF,EAAD,EAAK,OAAL,EAAcW,eAAe,CAACI,WAA9B,CAAJ,EAAgD,UAACb,GAAD,EAAS;AAAA;;AAC/E,kBAAIA,GAAG,IAAIe,SAAX,EAAsB,OAAO,KAAP;AACtB,kBAAI,CAACf,GAAG,CAACgB,IAAJ,EAAL,EAAiB,OAAO,KAAP;AACjBX,cAAAA,YAAY,cAACL,GAAG,CAACgB,IAAJ,EAAD,qBAAC,UAAYC,QAAb,CAAZ;AACAV,cAAAA,aAAa,eAACP,GAAG,CAACgB,IAAJ,EAAD,qBAAC,WAAYE,WAAb,CAAb;AACD,aALuB,CAHH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAWAxB,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAA,cACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA,iBACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,aAApB;AAAA,mBACIZ,eAAe,CAACa,SAAhB,IAA6B,EAA7B,IAAmCb,eAAe,CAACa,SAAhB,IAA6BP,SAAjE,GAEC,KAAC,MAAD;AACE,UAAA,IAAI,EAAE,GADR;AAEE,UAAA,OAAO,MAFT;AAGE,UAAA,MAAM,EAAE;AAAEQ,YAAAA,GAAG,EAAEd,eAAe,CAACa;AAAvB;AAHV,UAFD,GAOG,KAAC,MAAD;AACA,UAAA,IAAI,EAAE,GADN;AAEA,UAAA,OAAO,MAFP;AAGA,UAAA,KAAK,EAAEb,eAAe,CAACe,OAAhB,GAA0Bf,eAAe,CAACe,OAAhB,CAAwB,CAAxB,CAA1B,GAAuD,EAH9D;AAIA,UAAA,cAAc,EAAE;AAAEC,YAAAA,eAAe,EAAE;AAAnB;AAJhB,UARN,EAgBE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEN,MAAM,CAACO,wBAApB;AAAA,qBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEP,MAAM,CAACK,OAApB;AAAA,sBAA8Bf,eAAe,CAACe;AAA9C,YADF,EAEE,MAAC,IAAD;AAAM,YAAA,KAAK,EAAEL,MAAM,CAACQ,SAApB;AAAA,uBAAgClB,eAAe,CAACkB,SAAhD,WAAgElB,eAAe,CAACmB,SAAhF;AAAA,YAFF;AAAA,UAhBF;AAAA,QADF,EAyBE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAET,MAAM,CAACU,gBAApB;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE,EAAZ;AAAgBC,YAAAA,SAAS,EAAE,EAA3B;AAA+BC,YAAAA,UAAU,EAAE;AAA3C,WAAb;AAAA;AAAA;AADF,QAzBF;AAAA;AADF,IADF;AAoCD;AAED,IAAMb,MAAM,GAAGc,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,IAAI,EAAE,CADG;AAETV,IAAAA,eAAe,EAAE,OAFR;AAGTW,IAAAA,MAAM,EAAE,MAHC;AAITC,IAAAA,aAAa,EAAE;AAJN,GADoB;AAO/BhB,EAAAA,aAAa,EAAE;AACbiB,IAAAA,OAAO,EAAE,EADI;AAEbC,IAAAA,SAAS,EAAE,YAFE;AAGbC,IAAAA,MAAM,EAAE,CAHK;AAIbH,IAAAA,aAAa,EAAE;AAJF,GAPgB;AAa/BX,EAAAA,wBAAwB,EAAE;AACxBe,IAAAA,UAAU,EAAE,EADY;AAExBF,IAAAA,SAAS,EAAE;AAFa,GAbK;AAkB/BV,EAAAA,gBAAgB,EAAE;AAChBa,IAAAA,KAAK,EAAE,MADS;AAEhBN,IAAAA,MAAM,EAAE,MAFQ;AAGhBE,IAAAA,OAAO,EAAE,EAHO;AAKhBH,IAAAA,IAAI,EAAE,CALU;AAMhBQ,IAAAA,YAAY,EAAE,EANE;AAOhBlB,IAAAA,eAAe,EAAE,OAPD;AAQhBmB,IAAAA,GAAG,EAAE,CAAC;AARU,GAlBa;AA4B/BC,EAAAA,cAAc,EAAE;AACdd,IAAAA,SAAS,EAAE,EADG;AAEdO,IAAAA,OAAO,EAAE,EAFK;AAGdC,IAAAA,SAAS,EAAE,UAHG;AAIdC,IAAAA,MAAM,EAAE,CAJM;AAKdM,IAAAA,QAAQ,EAAE;AALI,GA5Be;AAmC/BC,EAAAA,SAAS,EAAE;AACTP,IAAAA,MAAM,EAAE,CADC;AAETQ,IAAAA,WAAW,EAAE,GAFJ;AAGTN,IAAAA,KAAK,EAAE;AAHE,GAnCoB;AAyC/BlB,EAAAA,OAAO,EAAE;AACPQ,IAAAA,UAAU,EAAE,MADL;AAEPF,IAAAA,QAAQ,EAAE;AAFH,GAzCsB;AA6C/BH,EAAAA,SAAS,EAAE;AACTG,IAAAA,QAAQ,EAAE,EADD;AACKmB,IAAAA,YAAY,EAAE,EADnB;AACuBjB,IAAAA,UAAU,EAAE,MADnC;AAC2CkB,IAAAA,KAAK,EAAE;AADlD,GA7CoB;AAgD/BC,EAAAA,SAAS,EAAE;AACTrB,IAAAA,QAAQ,EAAE,EADD;AACKoB,IAAAA,KAAK,EAAE;AADZ,GAhDoB;AAmD/BE,EAAAA,QAAQ,EAAE;AACRtB,IAAAA,QAAQ,EAAE,EADF;AACMoB,IAAAA,KAAK,EAAE;AADb,GAnDqB;AAsD/BG,EAAAA,SAAS,EAAE;AACTvB,IAAAA,QAAQ,EAAE,EADD;AACKoB,IAAAA,KAAK,EAAE;AADZ,GAtDoB;AAyD/BI,EAAAA,cAAc,EAAE;AACdxB,IAAAA,QAAQ,EAAE,EADI;AACAoB,IAAAA,KAAK,EAAE,SADP;AACkBlB,IAAAA,UAAU,EAAE;AAD9B,GAzDe;AA4D/BuB,EAAAA,aAAa,EAAE;AACb9B,IAAAA,eAAe,EAAE,SADJ;AAEbkB,IAAAA,YAAY,EAAE,CAFD;AAGba,IAAAA,iBAAiB,EAAE,EAHN;AAIbC,IAAAA,WAAW,EAAE;AAJA,GA5DgB;AAkE/BC,EAAAA,sBAAsB,EAAE;AACtBC,IAAAA,gBAAgB,EAAE;AADI,GAlEO;AAqE/BC,EAAAA,eAAe,EAAE;AACfd,IAAAA,QAAQ,EAAE,UADK;AAEfT,IAAAA,aAAa,EAAE,KAFA;AAGfwB,IAAAA,cAAc,EAAE,eAHD;AAIfC,IAAAA,UAAU,EAAE,QAJG;AAKfC,IAAAA,MAAM,EAAE,CALO;AAMfrB,IAAAA,KAAK,EAAE,MANQ;AAOfN,IAAAA,MAAM,EAAE;AAPO,GArEc;AA8E/B4B,EAAAA,cAAc,EAAE;AACdvB,IAAAA,UAAU,EAAE,EADE;AAEdJ,IAAAA,aAAa,EAAE,KAFD;AAGdwB,IAAAA,cAAc,EAAE;AAHF,GA9Ee;AAmF/BI,EAAAA,oBAAoB,EAAE;AACpBxB,IAAAA,UAAU,EAAE,EADQ;AAEpBJ,IAAAA,aAAa,EAAE,QAFK;AAGpBwB,IAAAA,cAAc,EAAE,QAHI;AAIpBC,IAAAA,UAAU,EAAE;AAJQ;AAnFS,CAAlB,CAAf","sourcesContent":["\nimport React, { useEffect, useState, useContext } from 'react';\nimport { StyleSheet, View, Image, Alert, ScrollView } from 'react-native';\nimport { Button, ButtonGroup, withTheme, Text, Input, Divider, Avatar } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { storage, db, auth } from \"../firebase\";\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { collection, query, where, onSnapshot, getDocs, addDoc, doc, setDoc } from \"firebase/firestore\";\n\nimport { SettingStackProps, petPostDataProps } from '../types';\nimport Dropdown from '../components/dropdown'\n\nexport default function PetSocialMediaScreen({ route, navigation }: { route: any, navigation: any }) {\n  const [ownerName, setOwnerName] = useState<string | undefined>('');\n  const [ownerImagepath, setOwnerImage] = useState(\"\");\n\n  const [petPostDataItem, setPetPostDataItem] = useState(route.params.petPostDataItem.item)\n\n  const getOwnerDetail = async () => {\n    if (!petPostDataItem.postcreator) return false;\n\n    const unsub = onSnapshot(doc(db, \"Users\", petPostDataItem.postcreator), (doc) => {\n      if (doc == undefined) return false;\n      if (!doc.data()) return false;\n      setOwnerName(doc.data()?.username)\n      setOwnerImage(doc.data()?.userIconUri)\n    });\n  }\n\n  useEffect(() => {\n    getOwnerDetail();\n  }, []);\n\n  return (\n    <>\n      <View style={styles.container}>\n        <View style={styles.iconContainer}>\n          {(petPostDataItem.imagepath != \"\" && petPostDataItem.imagepath != undefined) ?\n\n            <Avatar\n              size={100}\n              rounded\n              source={{ uri: petPostDataItem.imagepath }}\n            />\n            : <Avatar\n              size={100}\n              rounded\n              title={petPostDataItem.petname ? petPostDataItem.petname[0] : \"\"}\n              containerStyle={{ backgroundColor: '#aaaaaa' }}\n            />\n          }\n\n          <View style={styles.iconDescriptionContainer}>\n            <Text style={styles.petname}>{petPostDataItem.petname}</Text>\n            <Text style={styles.petgender}>{petPostDataItem.petgender}  -  {petPostDataItem.petstages} </Text>\n          </View>\n\n\n        </View>\n\n        <View style={styles.contentContainer}>\n          <Text style={{ fontSize: 14, marginTop: 12, fontWeight: 'bold' }}>Post</Text>\n\n\n        </View>\n\n      </View >\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    height: \"100%\",\n    flexDirection: 'column'\n  },\n  iconContainer: {\n    padding: 20,\n    alignSelf: 'flex-start',\n    zIndex: 1,\n    flexDirection: 'row'\n  },\n  iconDescriptionContainer: {\n    marginLeft: 20,\n    alignSelf: 'flex-start'\n  },\n\n  contentContainer: {\n    width: '100%',\n    height: '100%',\n    padding: 30,\n\n    flex: 1,\n    borderRadius: 25,\n    backgroundColor: 'white',\n    top: -30\n  },\n  iconContainer2: {\n    marginTop: 40,\n    padding: 20,\n    alignSelf: 'flex-end',\n    zIndex: 1,\n    position: 'absolute'\n  },\n  imageitem: {\n    zIndex: 0,\n    aspectRatio: 1.1,\n    width: '100%',\n  },\n\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 30\n  },\n  petgender: {\n    fontSize: 12, marginBottom: 12, fontWeight: 'bold', color: '#888888'\n  },\n  paragraph: {\n    fontSize: 12, color: '#999999'\n  },\n  required: {\n    fontSize: 12, color: 'red'\n  },\n  fulfilled: {\n    fontSize: 12, color: 'green'\n  },\n  paragraphTitle: {\n    fontSize: 12, color: '#999999', fontWeight: 'bold'\n  },\n  contactbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15,\n    marginRight: 30\n  },\n  contactbuttonContainer: {\n    marginHorizontal: 30\n  },\n  footerContainer: {\n    position: 'absolute',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    bottom: 0,\n    width: '100%',\n    height: '10%',\n  },\n  ownerContainer: {\n    marginLeft: 30,\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n  },\n  ownerDetailContainer: {\n    marginLeft: 10,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n\n\n});\n\n\n\n"]},"metadata":{},"sourceType":"module"}