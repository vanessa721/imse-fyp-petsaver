{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { collection, query, getDocs, orderBy, doc } from \"firebase/firestore\";\nimport React, { useEffect, useState } from 'react';\nimport { db } from \"../firebase\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function SocialMediaFlatList(route) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      socialMediaDataArray = _useState2[0],\n      setpetPostDataArray = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(route.params.petPostDataItem.item),\n      _useState6 = _slicedToArray(_useState5, 2),\n      petPostDataItem = _useState6[0],\n      setPetPostDataItem = _useState6[1];\n\n  var getData = function getData() {\n    var postRef, socialMediaPostRef, q, querySnapshot;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            postRef = doc(db, \"PetPost\", petPostDataItem.id);\n            socialMediaPostRef = collection(postRef, \"socialMediaPost\");\n            q = query(socialMediaPostRef, orderBy('createDate', 'desc'));\n            setpetPostDataArray([]);\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(getDocs(q));\n\n          case 6:\n            querySnapshot = _context.sent;\n            querySnapshot.forEach(function (docSnap) {\n              var newjson = {\n                id: docSnap.id,\n                imagepath: docSnap.data()['imagepath'],\n                caption: docSnap.data()['caption'],\n                createDate: docSnap.data()['createDate']\n              };\n              setpetPostDataArray(function (oldArray) {\n                return [].concat(_toConsumableArray(oldArray), [newjson]);\n              });\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getData();\n    setIsLoading(false);\n  }, []);\n  return _jsxs(_Fragment, {\n    children: [isLoading && _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#298e96\"\n    }), _jsx(View, {\n      style: styles.uppergadient,\n      children: _jsx(LinearGradient, {\n        colors: ['white', 'rgba(255,255,255,0)'],\n        style: {\n          height: 40\n        }\n      })\n    }), _jsx(FlatList, {\n      showsVerticalScrollIndicator: true,\n      showsHorizontalScrollIndicator: false,\n      data: socialMediaDataArray,\n      renderItem: function renderItem(item) {\n        return _jsx(_Fragment, {});\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    }), _jsx(View, {\n      style: styles.lowergadient,\n      children: _jsx(LinearGradient, {\n        colors: ['rgba(255,255,255,0)', 'rgba(255,255,255,1)'],\n        style: {\n          height: 40\n        }\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  uppergadient: {\n    flex: 1,\n    top: 20,\n    width: '100%',\n    height: 40,\n    zIndex: 10,\n    position: 'absolute'\n  },\n  lowergadient: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    height: 40\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/components/SocialMediaFlatList.tsx"],"names":["collection","query","getDocs","orderBy","doc","React","useEffect","useState","db","LinearGradient","SocialMediaFlatList","route","socialMediaDataArray","setpetPostDataArray","isLoading","setIsLoading","params","petPostDataItem","item","setPetPostDataItem","getData","postRef","id","socialMediaPostRef","q","querySnapshot","forEach","docSnap","newjson","imagepath","data","caption","createDate","oldArray","styles","uppergadient","height","lowergadient","StyleSheet","create","flex","top","width","zIndex","position","backgroundColor","bottom"],"mappings":"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","sourcesContent":["\r\nimport { StyleSheet, FlatList, ActivityIndicator, View } from 'react-native';\r\nimport { ref, getDownloadURL } from \"firebase/storage\";\r\nimport { auth } from \"../firebase\";\r\nimport { collection, query, where, onSnapshot, getDocs, orderBy, limit, doc } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { SettingStackParamList, HomeStackProps, socialMediaDataProps } from '../types';\r\nimport { storage, db } from \"../firebase\";\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { PetRequestStatusCard } from './PetRequestStatusCard';\r\n\r\n\r\nexport function SocialMediaFlatList(route: any) {\r\n    const [socialMediaDataArray, setpetPostDataArray] = useState<socialMediaDataProps[]>([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [petPostDataItem, setPetPostDataItem] = useState(route.params.petPostDataItem.item)\r\n\r\n    const getData = async () => {\r\n\r\n        var postRef = doc(db, \"PetPost\", petPostDataItem.id);\r\n        var socialMediaPostRef = collection(postRef, \"socialMediaPost\");\r\n        const q = query(socialMediaPostRef, orderBy('createDate', 'desc'));\r\n        setpetPostDataArray([])\r\n        const querySnapshot = await getDocs(q);\r\n        querySnapshot.forEach((docSnap) => {\r\n            const newjson = {\r\n                id: docSnap.id,\r\n                imagepath: docSnap.data()['imagepath'],\r\n                caption: docSnap.data()['caption'],\r\n                createDate: docSnap.data()['createDate'],\r\n            }\r\n\r\n            setpetPostDataArray(oldArray => [...oldArray, newjson]);\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n        setIsLoading(false)\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <ActivityIndicator size=\"large\" color='#298e96' />}\r\n            <View style={styles.uppergadient}>\r\n                <LinearGradient\r\n                    colors={['white', 'rgba(255,255,255,0)']}\r\n                    style={{ height: 40 }}\r\n                />\r\n            </View>\r\n            <FlatList\r\n                // contentContainerStyle={{ justifyContent: 'flex-start', flexDirection: 'column' }}\r\n                showsVerticalScrollIndicator={true}\r\n                showsHorizontalScrollIndicator={false}\r\n                data={socialMediaDataArray}\r\n                renderItem={(item) => <></>}\r\n                keyExtractor={item => item.id}\r\n            />\r\n            <View style={styles.lowergadient}>\r\n                <LinearGradient\r\n                    colors={['rgba(255,255,255,0)', 'rgba(255,255,255,1)']}\r\n                    style={{ height: 40 }}\r\n                />\r\n            </View>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    uppergadient: {\r\n        flex: 1,\r\n        //backgroundColor: 'white',\r\n        top: 20,\r\n        width: '100%',\r\n        height: 40,\r\n        zIndex: 10,\r\n        position: 'absolute'\r\n    },\r\n    lowergadient: {\r\n        flex: 1,\r\n        backgroundColor: 'transparent',\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        width: '100%',\r\n        height: 40\r\n    }\r\n});\r\n\r\ninterface PetRequestStatusFlatList {\r\n    navigation: NativeStackNavigationProp<SettingStackParamList, \"ViewMyPost\">\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}