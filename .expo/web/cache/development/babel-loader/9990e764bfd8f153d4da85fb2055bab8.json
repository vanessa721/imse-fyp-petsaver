{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"../firebase\";\nimport { collection, query, where, onSnapshot, getDocs, orderBy, doc } from \"firebase/firestore\";\nimport React, { useEffect, useState } from 'react';\nimport { db } from \"../firebase\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { MyAdoptedPetCard } from \"../components/MyAdoptedPetCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function ViewMyPostScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      petPostDataArray = _useState2[0],\n      setpetPostDataArray = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var getData = function getData() {\n    var _auth$currentUser;\n\n    var q, unsubscribe;\n    return _regeneratorRuntime.async(function getData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            q = query(collection(db, \"PetPost\"), orderBy('createdate', \"desc\"), where(\"postcreator\", \"==\", (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid));\n            unsubscribe = onSnapshot(q, function (querySnapshot) {\n              setpetPostDataArray([]);\n              querySnapshot.forEach(function _callee(docSnap) {\n                var postRef, requestRef, q2, requestUsers, querySnapshot2, newjson;\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        postRef = doc(db, \"PetPost\", docSnap.id);\n                        requestRef = collection(postRef, \"contactRequest\");\n                        q2 = query(requestRef, where(\"status\", \"==\", \"New request\"));\n                        requestUsers = [];\n                        _context.next = 6;\n                        return _regeneratorRuntime.awrap(getDocs(q2));\n\n                      case 6:\n                        querySnapshot2 = _context.sent;\n                        querySnapshot2.forEach(function (docSnap2) {\n                          requestUsers.push(docSnap2.id);\n                        });\n                        newjson = {\n                          id: docSnap.id,\n                          imagepath: docSnap.data()['imagepath'],\n                          petname: docSnap.data()['petname'],\n                          petgender: docSnap.data()['petgender'],\n                          petstages: docSnap.data()['petstages'],\n                          desc: docSnap.data()['desc'],\n                          postcreator: docSnap.data()['postcreator'],\n                          requestUsers: requestUsers,\n                          adopterID: docSnap.data()['adopterID']\n                        };\n                        setpetPostDataArray(function (oldArray) {\n                          return [].concat(_toConsumableArray(oldArray), [newjson]);\n                        });\n\n                      case 10:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getData();\n    setIsLoading(false);\n  }, []);\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.uppergadient,\n        children: _jsx(LinearGradient, {\n          colors: ['white', 'rgba(255,255,255,0)'],\n          style: {\n            height: 40\n          }\n        })\n      }), _jsx(FlatList, {\n        showsVerticalScrollIndicator: true,\n        showsHorizontalScrollIndicator: false,\n        data: petPostDataArray,\n        renderItem: function renderItem(item) {\n          return MyAdoptedPetCard(item, navigation);\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      }), _jsx(View, {\n        style: styles.lowergadient,\n        children: _jsx(LinearGradient, {\n          colors: ['rgba(255,255,255,0)', 'rgba(255,255,255,1)'],\n          style: {\n            height: 40\n          }\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    paddingBottom: 0,\n    backgroundColor: 'white',\n    justifyContent: 'flex-start'\n  },\n  PetCatagoryContainer: {},\n  inputContainerStyle: {\n    backgroundColor: 'white',\n    borderColor: '#dddddd',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    height: 30\n  },\n  containerStyle: {\n    backgroundColor: 'white',\n    borderTopWidth: 0,\n    borderBottomWidth: 0,\n    padding: 0,\n    height: 30\n  },\n  headContainer: {\n    overflow: 'hidden',\n    justifyContent: 'space-between',\n    paddingTop: 15,\n    paddingBottom: 15\n  },\n  SearchBarContainer: {\n    paddingBottom: 15\n  },\n  header: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#298e96'\n  },\n  headerDesc: {\n    fontSize: 15,\n    color: '#aaaaaa'\n  },\n  recent: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  uppergadient: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    top: 0,\n    width: '100%',\n    height: 40,\n    zIndex: 10\n  },\n  lowergadient: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    height: 40\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/ViewMyAdoptedPetScreen.tsx"],"names":["auth","collection","query","where","onSnapshot","getDocs","orderBy","doc","React","useEffect","useState","db","LinearGradient","MyAdoptedPetCard","ViewMyPostScreen","navigation","petPostDataArray","setpetPostDataArray","isLoading","setIsLoading","getData","q","currentUser","uid","unsubscribe","querySnapshot","forEach","docSnap","postRef","id","requestRef","q2","requestUsers","querySnapshot2","docSnap2","push","newjson","imagepath","data","petname","petgender","petstages","desc","postcreator","adopterID","oldArray","styles","container","uppergadient","height","item","lowergadient","StyleSheet","create","flex","padding","paddingBottom","backgroundColor","justifyContent","PetCatagoryContainer","inputContainerStyle","borderColor","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","containerStyle","headContainer","overflow","paddingTop","SearchBarContainer","header","fontSize","fontWeight","color","headerDesc","recent","top","width","zIndex","position","bottom"],"mappings":"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","sourcesContent":["import { StyleSheet, FlatList, ActivityIndicator, View } from 'react-native';\nimport { ref, getDownloadURL } from \"firebase/storage\";\nimport { auth } from \"../firebase\";\nimport { collection, query, where, onSnapshot, getDocs, orderBy, limit, doc } from \"firebase/firestore\";\nimport React, { useEffect, useState } from 'react';\nimport { SettingStackParamList, HomeStackProps, petPostDataProps, SettingStackProps } from '../types';\nimport { storage, db } from \"../firebase\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { MyAdoptedPetCard } from '../components/MyAdoptedPetCard';\n\nexport default function ViewMyPostScreen({ navigation }: SettingStackProps<'ViewMyAdpotedPet'>) {\n  const [petPostDataArray, setpetPostDataArray] = useState<petPostDataProps[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const getData = async () => {\n    var q = query(collection(db, \"PetPost\"), orderBy('createdate', \"desc\"), where(\"postcreator\", \"==\", auth.currentUser?.uid));\n\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      setpetPostDataArray([])\n\n      querySnapshot.forEach(async (docSnap) => {\n\n        var postRef = doc(db, \"PetPost\", docSnap.id);\n        var requestRef = collection(postRef, \"contactRequest\");\n        const q2 = query(requestRef, where(\"status\", \"==\", \"New request\"));\n        const requestUsers: string[] = [];\n\n        const querySnapshot2 = await getDocs(q2);\n        querySnapshot2.forEach((docSnap2) => {\n          requestUsers.push(docSnap2.id);\n\n        });\n\n        const newjson = {\n          id: docSnap.id,\n          imagepath: docSnap.data()['imagepath'],\n          petname: docSnap.data()['petname'],\n          petgender: docSnap.data()['petgender'],\n          petstages: docSnap.data()['petstages'],\n          desc: docSnap.data()['desc'],\n          postcreator: docSnap.data()['postcreator'],\n          requestUsers: requestUsers,\n          adopterID: docSnap.data()['adopterID'],\n        }\n        //console.log(doc.data()['createdate'], newjson);\n        setpetPostDataArray(oldArray => [...oldArray, newjson]);\n      });\n    });\n\n  }\n\n  useEffect(() => {\n    getData()\n    setIsLoading(false)\n  }, []);\n  return (<>\n    <View style={styles.container}>\n      <View style={styles.uppergadient}>\n        <LinearGradient\n          colors={['white', 'rgba(255,255,255,0)']}\n          style={{ height: 40 }}\n        />\n      </View>\n      <FlatList\n        // contentContainerStyle={{ justifyContent: 'flex-start', flexDirection: 'column' }}\n        showsVerticalScrollIndicator={true}\n        showsHorizontalScrollIndicator={false}\n        data={petPostDataArray}\n        renderItem={(item) => MyAdoptedPetCard(item, navigation)}\n        keyExtractor={item => item.id}\n      />\n      <View style={styles.lowergadient}>\n        <LinearGradient\n          colors={['rgba(255,255,255,0)', 'rgba(255,255,255,1)']}\n          style={{ height: 40 }}\n        />\n      </View>\n    </View>\n  </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    paddingBottom: 0,\n    backgroundColor: 'white',\n    justifyContent: 'flex-start'\n\n  },\n  PetCatagoryContainer: {\n  },\n  inputContainerStyle: {\n    backgroundColor: 'white',\n    borderColor: '#dddddd',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    height: 30\n  },\n  containerStyle: {\n    backgroundColor: 'white',\n    borderTopWidth: 0,\n    borderBottomWidth: 0,\n    padding: 0,\n    height: 30\n\n  },\n  headContainer: {\n    overflow: 'hidden',\n    justifyContent: 'space-between',\n    paddingTop: 15,\n    paddingBottom: 15\n  },\n  SearchBarContainer: {\n    paddingBottom: 15\n  },\n  header: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#298e96'\n  },\n  headerDesc: {\n    fontSize: 15,\n    color: '#aaaaaa'\n  },\n  recent: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  uppergadient: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    top: 0,\n    width: '100%',\n    height: 40,\n    zIndex: 10\n  },\n  lowergadient: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    height: 40\n  }\n});\n"]},"metadata":{},"sourceType":"module"}