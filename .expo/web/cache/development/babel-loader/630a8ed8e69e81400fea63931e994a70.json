{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Text, Input } from 'react-native-elements';\nimport { auth } from \"../firebase\";\nimport React, { useEffect, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.replace(\"Home\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var handleRegister = function handleRegister() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('Registered with:', user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  var handleLogin = function handleLogin() {\n    auth.signInWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log('Logged in with:', user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Login Screen\"\n    }), _jsxs(View, {\n      style: styles.inputcontainer,\n      children: [_jsx(Input, {\n        style: styles.input,\n        placeholder: \"Email\",\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(Input, {\n        style: styles.input,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      })]\n    }), _jsx(Button, {\n      loading: false,\n      loadingProps: {\n        size: 'small',\n        color: 'white'\n      },\n      buttonStyle: {\n        backgroundColor: '#0a9396',\n        borderRadius: 5\n      },\n      containerStyle: {\n        marginHorizontal: 50,\n        height: 50,\n        width: 200,\n        marginVertical: 10\n      },\n      onPress: handleLogin,\n      title: \"Login\"\n    }), _jsx(Button, {\n      loading: false,\n      loadingProps: {\n        size: 'small',\n        color: 'white'\n      },\n      buttonStyle: {\n        backgroundColor: '#0a9396',\n        borderRadius: 5\n      },\n      containerStyle: {\n        marginHorizontal: 50,\n        height: 50,\n        width: 200,\n        marginVertical: 10\n      },\n      onPress: handleRegister,\n      title: \"Register\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputcontainer: {\n    width: '80%'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  input: {\n    fontSize: 12\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/LoginScreen.tsx"],"names":["Button","Text","Input","auth","React","useEffect","useState","LoginScreen","navigation","email","setEmail","password","setPassword","unsubscribe","onAuthStateChanged","user","replace","handleRegister","createUserWithEmailAndPassword","then","userCredentials","console","log","catch","error","alert","message","handleLogin","signInWithEmailAndPassword","styles","container","title","inputcontainer","input","text","size","color","backgroundColor","borderRadius","marginHorizontal","height","width","marginVertical","StyleSheet","create","flex","alignItems","justifyContent","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import { KeyboardAvoidingView, StyleSheet, TextInput, Alert, View } from 'react-native';\r\nimport { Button, ButtonGroup, withTheme, Text, Input } from 'react-native-elements';\r\nimport { auth } from '../firebase';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\nexport default function LoginScreen({ navigation }: { navigation: any }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user: any) => {\r\n      if (user) {\r\n        navigation.replace(\"Home\")\r\n      }\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const handleRegister = () => {\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((userCredentials: { user: any; }) => {\r\n        const user = userCredentials.user;\r\n        console.log('Registered with:', user.email);\r\n      })\r\n      .catch((error: { message: any; }) => alert(error.message))\r\n  }\r\n\r\n  const handleLogin = () => {\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((userCredentials: { user: any; }) => {\r\n        const user = userCredentials.user;\r\n        console.log('Logged in with:', user.email);\r\n      })\r\n      .catch((error: { message: any; }) => alert(error.message))\r\n  }\r\n\r\n  return (\r\n    <KeyboardAvoidingView style={styles.container} behavior='padding'>\r\n      <Text style={styles.title}>Login Screen</Text>\r\n      <View style={styles.inputcontainer}>\r\n        <Input style={styles.input} placeholder='Email' onChangeText={text => setEmail(text)} />\r\n        <Input style={styles.input} placeholder='Password' secureTextEntry onChangeText={text => setPassword(text)} />\r\n      </View>\r\n      <Button\r\n        loading={false}\r\n        loadingProps={{ size: 'small', color: 'white' }}\r\n        buttonStyle={{\r\n          backgroundColor: '#0a9396',\r\n          borderRadius: 5,\r\n        }}\r\n        containerStyle={{\r\n          marginHorizontal: 50,\r\n          height: 50,\r\n          width: 200,\r\n          marginVertical: 10,\r\n        }}\r\n        onPress={handleLogin}\r\n        title=\"Login\"\r\n      />\r\n      <Button\r\n        loading={false}\r\n        loadingProps={{ size: 'small', color: 'white' }}\r\n        buttonStyle={{\r\n          backgroundColor: '#0a9396',\r\n          borderRadius: 5,\r\n        }}\r\n        containerStyle={{\r\n          marginHorizontal: 50,\r\n          height: 50,\r\n          width: 200,\r\n          marginVertical: 10,\r\n        }}\r\n        onPress={handleRegister}\r\n        title=\"Register\" />\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputcontainer: {\r\n    width: '80%'\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  input: {\r\n    fontSize: 12\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}