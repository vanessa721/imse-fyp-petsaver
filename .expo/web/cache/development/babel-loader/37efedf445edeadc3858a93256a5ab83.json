{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Button, ButtonGroup, Text, Input } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CreatePostScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      imagepath = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      downloadURL = _useState4[0],\n      setDownloadURL = _useState4[1];\n\n  var _useState5 = useState(\"Male\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      petGender = _useState6[0],\n      setGenderValue = _useState6[1];\n\n  var _useState7 = useState(\"Kid\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      petStage = _useState8[0],\n      setStageValue = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      petName = _useState10[0],\n      setPetName = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      petAge = _useState12[0],\n      setPetAge = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      petDescription = _useState14[0],\n      setPetDescription = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      uploading = _useState16[0],\n      setUploading = _useState16[1];\n\n  var _useState17 = useState(0),\n      _useState18 = _slicedToArray(_useState17, 2),\n      transferred = _useState18[0],\n      setTransferred = _useState18[1];\n\n  var _useState19 = useState(2),\n      _useState20 = _slicedToArray(_useState19, 2),\n      selectedButtonIndex = _useState20[0],\n      setSelectedButtonIndex = _useState20[1];\n\n  var pickImageByLibrary = function pickImageByLibrary() {\n    return _regeneratorRuntime.async(function pickImageByLibrary$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickImageByCamera = function pickImageByCamera() {\n    return _regeneratorRuntime.async(function pickImageByCamera$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadImage = function uploadImage() {\n    return _regeneratorRuntime.async(function uploadImage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Input, {\n        style: styles.input,\n        placeholder: \"Charlie\",\n        label: \"Pet Name:\",\n        onChangeText: function onChangeText(text) {\n          return setPetName(text);\n        }\n      }), _jsx(Input, {\n        style: styles.input,\n        placeholder: \"0-100\",\n        label: \"Pet Age:\",\n        onChangeText: function onChangeText(text) {\n          return setPetAge(text);\n        }\n      }), _jsx(View, {\n        style: styles.pickerContainer,\n        children: _jsx(Text, {\n          style: styles.pickerLabel,\n          children: \"Pet Stages:\"\n        })\n      }), _jsx(Input, {\n        style: styles.input,\n        placeholder: \"Descript your pet here\",\n        label: \"Pet Description:\",\n        onChangeText: function onChangeText(text) {\n          return setPetDescription(text);\n        }\n      }), _jsx(View, {\n        style: styles.pickerContainer,\n        children: _jsx(Text, {\n          style: styles.pickerLabel,\n          children: \"Pet Gender:\"\n        })\n      }), _jsxs(View, {\n        style: styles.imagePickerContainer,\n        children: [_jsx(Text, {\n          style: styles.pickerLabel,\n          children: \"Pet Image: \"\n        }), _jsx(View, {\n          style: styles.paddingView\n        }), _jsx(ButtonGroup, {\n          buttons: ['Select an image', 'Open camera'],\n          selectedIndex: selectedButtonIndex,\n          onPress: function onPress(value) {\n            setSelectedButtonIndex(value);\n\n            if (value == 0) {\n              pickImageByLibrary();\n            }\n\n            if (value == 1) {\n              pickImageByCamera();\n            }\n          },\n          containerStyle: {\n            marginBottom: 20\n          }\n        }), _jsx(_Fragment, {}), imagepath != \"\" && _jsx(TouchableOpacity, {\n          onPress: pickImageByLibrary,\n          children: _jsx(Image, {\n            style: styles.imageitem,\n            source: {\n              uri: imagepath\n            }\n          })\n        })]\n      }), _jsx(Button, {\n        title: \"Submit\",\n        onPress: uploadImage,\n        loading: uploading,\n        buttonStyle: {\n          backgroundColor: 'rgba(111, 202, 186, 1)',\n          borderRadius: 5,\n          margin: 10,\n          marginTop: 30\n        },\n        titleStyle: {\n          fontSize: 12\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 20,\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  input: {\n    fontSize: 12\n  },\n  pickerContainer: {\n    paddingHorizontal: 10\n  },\n  pickerLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'rgb(134, 147, 158)'\n  },\n  CardContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: 200,\n    borderRadius: 25,\n    fontSize: 12\n  },\n  contentContainer: {\n    width: '50%',\n    height: '100%',\n    paddingLeft: 10,\n    flex: 1\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  petgender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  desc: {\n    fontSize: 10,\n    color: '#999999'\n  },\n  askbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  askbuttonContainer: {\n    position: 'absolute',\n    left: 10,\n    bottom: 0\n  },\n  imagePickerContainer: {\n    flexDirection: 'column',\n    paddingHorizontal: 10\n  },\n  paddingView: {\n    paddingTop: 10\n  }\n});\n\nfunction getRandomString(length) {\n  var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var result = '';\n\n  for (var i = 0; i < length; i++) {\n    result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\n  }\n\n  return result;\n}","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/CreatePostScreen.tsx"],"names":["React","useState","Button","ButtonGroup","Text","Input","CreatePostScreen","imagepath","setImage","downloadURL","setDownloadURL","petGender","setGenderValue","petStage","setStageValue","petName","setPetName","petAge","setPetAge","petDescription","setPetDescription","uploading","setUploading","transferred","setTransferred","selectedButtonIndex","setSelectedButtonIndex","pickImageByLibrary","pickImageByCamera","uploadImage","styles","container","input","text","pickerContainer","pickerLabel","imagePickerContainer","paddingView","value","marginBottom","imageitem","uri","backgroundColor","borderRadius","margin","marginTop","fontSize","StyleSheet","create","flex","alignItems","justifyContent","padding","height","title","fontWeight","separator","marginVertical","width","paddingHorizontal","color","CardContainer","flexDirection","flexWrap","borderWidth","borderColor","aspectRatio","contentContainer","paddingLeft","petname","petgender","desc","askbutton","askbuttonContainer","position","left","bottom","paddingTop","getRandomString","length","randomChars","result","i","charAt","Math","floor","random"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState, useContext } from 'react';\nimport { StyleSheet, View, Image, TouchableOpacity, ScrollView, Platform } from 'react-native';\nimport { Picker } from '@react-native-community/picker';\nimport { Button, ButtonGroup, withTheme, Text, Input, Divider } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\n\nimport { storage, db, auth } from \"../firebase\";\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { collection, query, where, onSnapshot, getDocs, addDoc } from \"firebase/firestore\";\n\nimport { SettingStackProps, petPostDataProps } from '../types';\n\nexport default function CreatePostScreen() {\n  const [imagepath, setImage] = useState(\"\");\n  const [downloadURL, setDownloadURL] = useState(\"\");\n  const [petGender, setGenderValue] = useState<number | string>(\"Male\");\n  const [petStage, setStageValue] = useState<number | string>(\"Kid\");\n  const [petName, setPetName] = useState('');\n  const [petAge, setPetAge] = useState<number | string>('');\n  const [petDescription, setPetDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [transferred, setTransferred] = useState(0);\n  const [selectedButtonIndex, setSelectedButtonIndex] = useState(2);\n\n  const pickImageByLibrary = async () => {\n  };\n  const pickImageByCamera = async () => {\n\n  };\n\n  const uploadImage = async () => {\n  }\n\n  return (\n    <>\n      <View style={styles.container}>\n        <Input style={styles.input} placeholder=\"Charlie\" label='Pet Name:' onChangeText={text => setPetName(text)} />\n        <Input style={styles.input} placeholder=\"0-100\" label='Pet Age:' onChangeText={text => setPetAge(text)} />\n        <View style={styles.pickerContainer}>\n          <Text style={styles.pickerLabel} >Pet Stages:</Text>\n        </View>\n        <Input style={styles.input} placeholder=\"Descript your pet here\" label='Pet Description:' onChangeText={text => setPetDescription(text)} />\n        <View style={styles.pickerContainer}>\n          <Text style={styles.pickerLabel} >Pet Gender:</Text>\n\n        </View>\n        <View style={styles.imagePickerContainer}>\n          <Text style={styles.pickerLabel} >Pet Image: </Text>\n          <View style={styles.paddingView} />\n          <ButtonGroup\n            buttons={['Select an image', 'Open camera']}\n            selectedIndex={selectedButtonIndex}\n            onPress={(value) => {\n              setSelectedButtonIndex(value);\n              if (value == 0) {\n                pickImageByLibrary()\n              }\n              if (value == 1) {\n                pickImageByCamera()\n              }\n            }}\n            containerStyle={{ marginBottom: 20 }}\n          />\n          <></>\n          {imagepath != \"\" &&\n            <TouchableOpacity onPress={pickImageByLibrary}>\n              <Image style={styles.imageitem}\n                source={{ uri: imagepath }}\n              />\n            </TouchableOpacity>\n          }\n        </View>\n        <Button title=\"Submit\" onPress={uploadImage}\n          loading={uploading}\n          buttonStyle={{\n            backgroundColor: 'rgba(111, 202, 186, 1)',\n            borderRadius: 5,\n            margin: 10, marginTop: 30\n          }}\n\n          titleStyle={{ fontSize: 12 }} />\n\n      </View >\n    </>\n    //imagepath={imagepath} petname={petName} petgender={petGender} petstages={petStage} desc={petDescription} \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 20,\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  input: {\n    fontSize: 12\n  },\n  pickerContainer: {\n    paddingHorizontal: 10,\n\n  },\n  pickerLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'rgb(134, 147, 158)'\n  },\n  CardContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start', // if you want to fill rows left to right\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15,\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: 200,\n    borderRadius: 25,\n    fontSize: 12\n  },\n  contentContainer: {\n    width: '50%',\n    height: '100%',\n    paddingLeft: 10,\n    flex: 1,\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  petgender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  desc: {\n    fontSize: 10,\n    color: '#999999'\n  },\n  askbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  askbuttonContainer: {\n    position: 'absolute',\n    left: 10,\n    bottom: 0,\n  },\n  imagePickerContainer: {\n    flexDirection: 'column',\n    paddingHorizontal: 10\n  },\n  paddingView: {\n    paddingTop: 10\n  }\n});\n\n\nfunction getRandomString(length: number) {\n  var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var result = '';\n  for (var i = 0; i < length; i++) {\n    result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\n  }\n  return result;\n}"]},"metadata":{},"sourceType":"module"}