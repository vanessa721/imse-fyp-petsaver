{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Dropdown } from 'react-native-element-dropdown';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DropdownScreen = function DropdownScreen(props) {\n  var _useState = useState(props.initvalue),\n      _useState2 = _slicedToArray(_useState, 2),\n      dropdown = _useState2[0],\n      setDropdown = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  useEffect(function () {\n    setDropdown(props.initvalue);\n    console.log('props.initvalue', props.initvalue);\n  }, []);\n\n  var _renderItem = function _renderItem(item) {\n    return _jsxs(View, {\n      style: styles.item,\n      children: [_jsx(Text, {\n        style: styles.textItem,\n        children: item.label\n      }), _jsx(Image, {\n        style: styles.icon,\n        source: require(\"../assets/images/icon.png\")\n      })]\n    });\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Dropdown, {\n      style: styles.dropdown,\n      containerStyle: styles.shadow,\n      data: props.data,\n      labelField: \"label\",\n      valueField: \"value\",\n      placeholder: \"Select item\",\n      value: dropdown,\n      maxHeight: 150,\n      onChange: function onChange(item) {\n        setDropdown(item.value);\n        console.log('selected', item);\n      },\n      renderItem: function renderItem(item) {\n        return _renderItem(item);\n      },\n      renderLeftIcon: function renderLeftIcon() {\n        return _jsx(Image, {\n          style: styles.icon,\n          source: require(\"../assets/images/icon.png\")\n        });\n      }\n    })\n  });\n};\n\nexport default DropdownScreen;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    padding: 16\n  },\n  shadow: {\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.41,\n    elevation: 2\n  },\n  item: {\n    paddingVertical: 17,\n    paddingHorizontal: 4,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  textItem: {\n    flex: 1,\n    fontSize: 16\n  },\n  dropdown: {\n    height: 50,\n    borderColor: 'gray',\n    borderWidth: 0.5,\n    borderRadius: 8,\n    paddingHorizontal: 8\n  },\n  icon: {\n    marginRight: 5\n  },\n  label: {\n    position: 'absolute',\n    backgroundColor: 'white',\n    left: 22,\n    top: 8,\n    zIndex: 999,\n    paddingHorizontal: 8,\n    fontSize: 14\n  },\n  placeholderStyle: {\n    fontSize: 16\n  },\n  selectedTextStyle: {\n    fontSize: 16\n  },\n  iconStyle: {\n    width: 20,\n    height: 20\n  },\n  inputSearchStyle: {\n    height: 40,\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/components/dropdown.tsx"],"names":["React","useState","useEffect","Dropdown","DropdownScreen","props","initvalue","dropdown","setDropdown","selected","setSelected","console","log","_renderItem","item","styles","textItem","label","icon","require","container","shadow","data","value","StyleSheet","create","backgroundColor","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","paddingVertical","paddingHorizontal","flexDirection","justifyContent","alignItems","flex","fontSize","borderColor","borderWidth","borderRadius","marginRight","position","left","top","zIndex","placeholderStyle","selectedTextStyle","iconStyle","inputSearchStyle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, View, Text, Image } from 'react-native';\r\nimport { Dropdown, MultiSelect } from 'react-native-element-dropdown';\r\n\r\n\r\nconst DropdownScreen = (props: any) => {\r\n    const [dropdown, setDropdown] = useState(props.initvalue);\r\n    const [selected, setSelected] = useState([]);\r\n    useEffect(() => {\r\n        setDropdown(props.initvalue)\r\n        console.log('props.initvalue', props.initvalue)\r\n    }, []);\r\n    const _renderItem = (item: { label: boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined; }) => {\r\n        return (\r\n            <View style={styles.item}>\r\n                <Text style={styles.textItem}>{item.label}</Text>\r\n                <Image style={styles.icon} source={require('../assets/images/icon.png')} />\r\n            </View>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Dropdown\r\n                style={styles.dropdown}\r\n                containerStyle={styles.shadow}\r\n                data={props.data}\r\n                labelField=\"label\"\r\n                valueField=\"value\"\r\n                placeholder=\"Select item\"\r\n                value={dropdown}\r\n                maxHeight={150}\r\n                onChange={item => {\r\n                    setDropdown(item.value);\r\n                    console.log('selected', item);\r\n                }}\r\n                renderItem={item => _renderItem(item)}\r\n                renderLeftIcon={() => (\r\n                    <Image style={styles.icon} source={require('../assets/images/icon.png')} />\r\n                )}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default DropdownScreen;\r\n\r\n// const styles = StyleSheet.create({\r\n//     container: {\r\n//         flex: 1,\r\n//         backgroundColor: 'white',\r\n//     },\r\n//     dropdown: {\r\n//         backgroundColor: 'white',\r\n//         borderBottomColor: 'gray',\r\n//         borderBottomWidth: 0.5,\r\n\r\n//     },\r\n//     icon: {\r\n//         marginRight: 5,\r\n//         width: 18,\r\n//         height: 18,\r\n//     },\r\n//     item: {\r\n//         paddingVertical: 17,\r\n//         paddingHorizontal: 4,\r\n//         flexDirection: 'row',\r\n//         justifyContent: 'space-between',\r\n//         alignItems: 'center',\r\n//     },\r\n//     textItem: {\r\n//         flex: 1,\r\n//         fontSize: 16,\r\n//     },\r\n//     shadow: {\r\n//         shadowColor: '#000',\r\n//         shadowOffset: {\r\n//             width: 0,\r\n//             height: 1,\r\n//         },\r\n//         shadowOpacity: 0.2,\r\n//         shadowRadius: 1.41,\r\n//         elevation: 2,\r\n//     },\r\n// });\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: 'white',\r\n        padding: 16,\r\n    },\r\n    shadow: {\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 1,\r\n        },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 1.41,\r\n        elevation: 2,\r\n    },\r\n    item: {\r\n        paddingVertical: 17,\r\n        paddingHorizontal: 4,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    },\r\n    textItem: {\r\n        flex: 1,\r\n        fontSize: 16,\r\n    },\r\n    dropdown: {\r\n        height: 50,\r\n        borderColor: 'gray',\r\n        borderWidth: 0.5,\r\n        borderRadius: 8,\r\n        paddingHorizontal: 8,\r\n    },\r\n    icon: {\r\n        marginRight: 5,\r\n    },\r\n    label: {\r\n        position: 'absolute',\r\n        backgroundColor: 'white',\r\n        left: 22,\r\n        top: 8,\r\n        zIndex: 999,\r\n        paddingHorizontal: 8,\r\n        fontSize: 14,\r\n    },\r\n    placeholderStyle: {\r\n        fontSize: 16,\r\n    },\r\n    selectedTextStyle: {\r\n        fontSize: 16,\r\n    },\r\n    iconStyle: {\r\n        width: 20,\r\n        height: 20,\r\n    },\r\n    inputSearchStyle: {\r\n        height: 40,\r\n        fontSize: 16,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}