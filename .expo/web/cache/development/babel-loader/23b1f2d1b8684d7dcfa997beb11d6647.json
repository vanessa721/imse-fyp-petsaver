{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Dropdown } from 'react-native-element-dropdown';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar data = [{\n  label: 'Item 1',\n  value: '1'\n}, {\n  label: 'Item 2',\n  value: '2'\n}, {\n  label: 'Item 3',\n  value: '3'\n}, {\n  label: 'Item 4',\n  value: '4'\n}, {\n  label: 'Item 5',\n  value: '5'\n}, {\n  label: 'Item 6',\n  value: '6'\n}, {\n  label: 'Item 7',\n  value: '7'\n}, {\n  label: 'Item 8',\n  value: '8'\n}];\n\nvar DropdownScreen = function DropdownScreen(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      dropdown = _useState2[0],\n      setDropdown = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  useEffect(function () {\n    console.log(props.data);\n  }, []);\n\n  var _renderItem = function _renderItem(item) {\n    return _jsxs(View, {\n      style: styles.item,\n      children: [_jsx(Text, {\n        style: styles.textItem,\n        children: item.label\n      }), _jsx(Image, {\n        style: styles.icon,\n        source: require(\"../assets/images/icon.png\")\n      })]\n    });\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Dropdown, {\n      style: styles.dropdown,\n      containerStyle: styles.shadow,\n      data: props.data,\n      search: true,\n      searchPlaceholder: \"Search\",\n      labelField: \"label\",\n      valueField: \"value\",\n      placeholder: \"Select item\",\n      value: dropdown,\n      onChange: function onChange(item) {\n        setDropdown(item.value);\n        console.log('selected', item);\n      },\n      renderItem: function renderItem(item) {\n        return _renderItem(item);\n      },\n      renderLeftIcon: function renderLeftIcon() {\n        return _jsx(Image, {\n          style: styles.icon,\n          source: require(\"../assets/images/icon.png\")\n        });\n      }\n    })\n  });\n};\n\nexport default DropdownScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  dropdown: {\n    backgroundColor: 'white',\n    borderBottomColor: 'gray',\n    borderBottomWidth: 0.5,\n    marginTop: 10,\n    marginButton: 20\n  },\n  icon: {\n    marginRight: 5,\n    width: 18,\n    height: 18\n  },\n  item: {\n    paddingVertical: 17,\n    paddingHorizontal: 4,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  textItem: {\n    flex: 1,\n    fontSize: 16\n  },\n  shadow: {\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.41,\n    elevation: 2\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/components/dropdown.tsx"],"names":["React","useState","useEffect","Dropdown","data","label","value","DropdownScreen","props","dropdown","setDropdown","selected","setSelected","console","log","_renderItem","item","styles","textItem","icon","require","container","shadow","StyleSheet","create","flex","backgroundColor","borderBottomColor","borderBottomWidth","marginTop","marginButton","marginRight","width","height","paddingVertical","paddingHorizontal","flexDirection","justifyContent","alignItems","fontSize","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, View, Text, Image } from 'react-native';\r\nimport { Dropdown, MultiSelect } from 'react-native-element-dropdown';\r\n\r\nconst data = [\r\n    { label: 'Item 1', value: '1' },\r\n    { label: 'Item 2', value: '2' },\r\n    { label: 'Item 3', value: '3' },\r\n    { label: 'Item 4', value: '4' },\r\n    { label: 'Item 5', value: '5' },\r\n    { label: 'Item 6', value: '6' },\r\n    { label: 'Item 7', value: '7' },\r\n    { label: 'Item 8', value: '8' },\r\n];\r\n\r\nconst DropdownScreen = (props: any) => {\r\n    const [dropdown, setDropdown] = useState(null);\r\n    const [selected, setSelected] = useState([]);\r\n    useEffect(() => {\r\n        console.log(props.data)\r\n    }, []);\r\n    const _renderItem = (item: { label: boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined; }) => {\r\n        return (\r\n            <View style={styles.item}>\r\n                <Text style={styles.textItem}>{item.label}</Text>\r\n                <Image style={styles.icon} source={require('../assets/images/icon.png')} />\r\n            </View>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Dropdown\r\n                style={styles.dropdown}\r\n                containerStyle={styles.shadow}\r\n                data={props.data}\r\n                search\r\n                searchPlaceholder=\"Search\"\r\n                labelField=\"label\"\r\n                valueField=\"value\"\r\n                placeholder=\"Select item\"\r\n                value={dropdown}\r\n                onChange={item => {\r\n                    setDropdown(item.value);\r\n                    console.log('selected', item);\r\n                }}\r\n                renderItem={item => _renderItem(item)}\r\n                renderLeftIcon={() => (\r\n                    <Image style={styles.icon} source={require('../assets/images/icon.png')} />\r\n                )}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default DropdownScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    dropdown: {\r\n        backgroundColor: 'white',\r\n        borderBottomColor: 'gray',\r\n        borderBottomWidth: 0.5,\r\n        marginTop: 10,\r\n        marginButton: 20\r\n    },\r\n    icon: {\r\n        marginRight: 5,\r\n        width: 18,\r\n        height: 18,\r\n    },\r\n    item: {\r\n        paddingVertical: 17,\r\n        paddingHorizontal: 4,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    },\r\n    textItem: {\r\n        flex: 1,\r\n        fontSize: 16,\r\n    },\r\n    shadow: {\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 1,\r\n        },\r\n        shadowOpacity: 0.2,\r\n        shadowRadius: 1.41,\r\n        elevation: 2,\r\n    },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}