{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { collection, doc, getDocs, onSnapshot, orderBy, query } from \"firebase/firestore\";\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Avatar, Dialog, Text } from 'react-native-elements';\nimport { db } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function PetSocialMediaScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      ownerName = _useState2[0],\n      setOwnerName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ownerImagepath = _useState4[0],\n      setOwnerImage = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showImageDialog = _useState6[0],\n      setShowImageDialog = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedId = _useState8[0],\n      setSelectedId = _useState8[1];\n\n  var _useState9 = useState(route.params.petPostDataItem),\n      _useState10 = _slicedToArray(_useState9, 2),\n      petPostDataItem = _useState10[0],\n      setPetPostDataItem = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      socialMediaDataArray = _useState12[0],\n      setSocialMediaDataArray = _useState12[1];\n\n  var getOwnerDetail = function getOwnerDetail() {\n    var unsub;\n    return _regeneratorRuntime.async(function getOwnerDetail$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (petPostDataItem.postcreator) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 2:\n            unsub = onSnapshot(doc(db, \"Users\", petPostDataItem.postcreator), function (doc) {\n              var _doc$data, _doc$data2;\n\n              if (doc == undefined) return false;\n              if (!doc.data()) return false;\n              setOwnerName((_doc$data = doc.data()) == null ? void 0 : _doc$data.username);\n              setOwnerImage((_doc$data2 = doc.data()) == null ? void 0 : _doc$data2.userIconUri);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getData = function getData() {\n    var socialMediaPostRef, q, querySnapshot;\n    return _regeneratorRuntime.async(function getData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            socialMediaPostRef = collection(db, \"PetPost/\" + petPostDataItem.id + '/socialMediaPost');\n            setSocialMediaDataArray([]);\n            q = query(socialMediaPostRef, orderBy('createdate', 'desc'));\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(getDocs(q));\n\n          case 5:\n            querySnapshot = _context2.sent;\n            querySnapshot.forEach(function (docSnap) {\n              var newjson = {\n                id: docSnap.id,\n                imagepath: docSnap.data()['imagepath'],\n                caption: docSnap.data()['caption'],\n                createdate: docSnap.data()['createdate']\n              };\n              console.log(\"newjson: \", newjson);\n              setSocialMediaDataArray(function (oldArray) {\n                return [].concat(_toConsumableArray(oldArray), [newjson]);\n              });\n            });\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getData();\n    getOwnerDetail();\n  }, []);\n\n  var _renderItem = function renderItem(petPostDataItem) {\n    return _jsx(View, {\n      style: styles.CardContainer,\n      children: petPostDataItem.item.imagepath != \"\" && _jsxs(View, {\n        children: [_jsx(TouchableHighlight, {\n          onPress: function onPress() {\n            console.log('item:', petPostDataItem);\n            setSelectedId(petPostDataItem.index);\n          },\n          underlayColor: \"white\",\n          children: _jsx(Image, {\n            style: styles.imageitem,\n            source: {\n              uri: petPostDataItem.item.imagepath\n            }\n          })\n        }), _jsxs(Dialog, {\n          isVisible: petPostDataItem.index === selectedId,\n          onBackdropPress: function onBackdropPress() {\n            setSelectedId(null);\n          },\n          children: [_jsx(Image, {\n            style: styles.imageitem,\n            source: {\n              uri: petPostDataItem.item.imagepath\n            }\n          }), _jsx(Text, {\n            children: petPostDataItem.item.caption\n          }), _jsx(Text, {\n            children: timestampToDate(petPostDataItem.item.createdate.seconds)\n          })]\n        })]\n      })\n    });\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.iconContainer,\n        children: [petPostDataItem.imagepath != \"\" && petPostDataItem.imagepath != undefined ? _jsx(Avatar, {\n          size: 100,\n          rounded: true,\n          source: {\n            uri: petPostDataItem.imagepath\n          }\n        }) : _jsx(Avatar, {\n          size: 100,\n          rounded: true,\n          title: petPostDataItem.petname ? petPostDataItem.petname[0] : \"\",\n          containerStyle: {\n            backgroundColor: '#aaaaaa'\n          }\n        }), _jsxs(View, {\n          style: styles.iconDescriptionContainer,\n          children: [_jsx(Text, {\n            style: styles.petname,\n            children: petPostDataItem.petname\n          }), _jsxs(Text, {\n            style: styles.petgender,\n            children: [petPostDataItem.petgender, \"  -  \", petPostDataItem.petstages, \" \"]\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.contentContainer,\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 14,\n            marginTop: 12,\n            fontWeight: 'bold'\n          },\n          children: \"Recent Post\"\n        }), _jsx(View, {\n          style: styles.uppergadient,\n          children: _jsx(LinearGradient, {\n            colors: ['white', 'rgba(255,255,255,0)'],\n            style: {\n              height: 40\n            }\n          })\n        }), _jsx(View, {\n          style: styles.flexContainer,\n          children: _jsx(FlatList, {\n            showsVerticalScrollIndicator: true,\n            showsHorizontalScrollIndicator: false,\n            data: socialMediaDataArray,\n            renderItem: function renderItem(item) {\n              return _renderItem(item);\n            },\n            keyExtractor: function keyExtractor(item) {\n              return item.id;\n            },\n            numColumns: 3,\n            extraData: selectedId\n          })\n        }), _jsx(View, {\n          style: styles.lowergadient,\n          children: _jsx(LinearGradient, {\n            colors: ['rgba(255,255,255,0)', 'rgba(255,255,255,1)'],\n            style: {\n              height: 40\n            }\n          })\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    height: \"100%\",\n    flexDirection: 'column'\n  },\n  iconContainer: {\n    padding: 20,\n    alignSelf: 'flex-start',\n    zIndex: 1,\n    flexDirection: 'row'\n  },\n  iconDescriptionContainer: {\n    marginLeft: 20,\n    alignSelf: 'flex-start'\n  },\n  flexContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    justifyContent: 'space-between'\n  },\n  contentContainer: {\n    width: '100%',\n    height: '100%',\n    padding: 30,\n    flex: 1,\n    borderRadius: 25,\n    backgroundColor: 'white',\n    top: -30\n  },\n  uppergadient: {\n    flex: 1,\n    top: 20,\n    width: '100%',\n    height: 40,\n    zIndex: 10,\n    position: 'absolute'\n  },\n  lowergadient: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    height: 40\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  petgender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  CardContainer: {\n    width: '33%',\n    borderColor: '#fefefe',\n    borderWidth: 1\n  },\n  imageitem: {\n    aspectRatio: 1\n  },\n  item: {\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: 32\n  }\n});\n\nfunction timestampToDate(t) {\n  var date = new Date(t * 1000);\n  var hours = date.getHours();\n  var minutes = \"0\" + date.getMinutes();\n  var seconds = \"0\" + date.getSeconds();\n  var formattedTime = date.getDate() + \"/\" + date.getMonth();\n  return formattedTime;\n}","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/PetSocialMediaScreen.tsx"],"names":["LinearGradient","collection","doc","getDocs","onSnapshot","orderBy","query","React","useEffect","useState","Avatar","Dialog","Text","db","PetSocialMediaScreen","route","navigation","ownerName","setOwnerName","ownerImagepath","setOwnerImage","showImageDialog","setShowImageDialog","selectedId","setSelectedId","params","petPostDataItem","setPetPostDataItem","socialMediaDataArray","setSocialMediaDataArray","getOwnerDetail","postcreator","unsub","undefined","data","username","userIconUri","getData","socialMediaPostRef","id","q","querySnapshot","forEach","docSnap","newjson","imagepath","caption","createdate","console","log","oldArray","renderItem","styles","CardContainer","item","index","imageitem","uri","timestampToDate","seconds","container","iconContainer","petname","backgroundColor","iconDescriptionContainer","petgender","petstages","contentContainer","fontSize","marginTop","fontWeight","uppergadient","height","flexContainer","lowergadient","StyleSheet","create","flex","flexDirection","padding","alignSelf","zIndex","marginLeft","flexWrap","alignItems","justifyContent","width","borderRadius","top","position","bottom","marginBottom","color","borderColor","borderWidth","aspectRatio","marginVertical","marginHorizontal","title","t","date","Date","hours","getHours","minutes","getMinutes","getSeconds","formattedTime","getDate","getMonth"],"mappings":"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","sourcesContent":["import { LinearGradient } from 'expo-linear-gradient';\nimport { collection, doc, getDocs, onSnapshot, orderBy, query } from \"firebase/firestore\";\nimport React, { useEffect, useState } from 'react';\nimport { FlatList, Image, ScrollView, StyleSheet, TouchableHighlight, View } from 'react-native';\nimport { Avatar, Dialog, Text } from 'react-native-elements';\nimport { db } from \"../firebase\";\nimport { socialMediaDataProps } from '../types';\n\nexport default function PetSocialMediaScreen({ route, navigation }: { route: any, navigation: any }) {\n  const [ownerName, setOwnerName] = useState<string | undefined>('');\n  const [ownerImagepath, setOwnerImage] = useState(\"\");\n\n  const [showImageDialog, setShowImageDialog] = useState(false)\n  const [selectedId, setSelectedId] = useState(null);\n\n\n  const [petPostDataItem, setPetPostDataItem] = useState(route.params.petPostDataItem)\n  const [socialMediaDataArray, setSocialMediaDataArray] = useState<socialMediaDataProps[]>([]);\n\n  const getOwnerDetail = async () => {\n    if (!petPostDataItem.postcreator) return false;\n\n    const unsub = onSnapshot(doc(db, \"Users\", petPostDataItem.postcreator), (doc) => {\n      if (doc == undefined) return false;\n      if (!doc.data()) return false;\n      setOwnerName(doc.data()?.username)\n      setOwnerImage(doc.data()?.userIconUri)\n    });\n  }\n\n  const getData = async () => {\n\n    var socialMediaPostRef = collection(db, \"PetPost/\" + petPostDataItem.id + '/socialMediaPost');\n    setSocialMediaDataArray([])\n\n    const q = query(socialMediaPostRef, orderBy('createdate', 'desc'));\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach((docSnap) => {\n      const newjson = {\n        id: docSnap.id,\n        imagepath: docSnap.data()['imagepath'],\n        caption: docSnap.data()['caption'],\n        createdate: docSnap.data()['createdate'],\n      }\n      console.log(\"newjson: \", newjson)\n      setSocialMediaDataArray(oldArray => [...oldArray, newjson]);\n    });\n\n  }\n\n  useEffect(() => {\n    getData()\n    getOwnerDetail();\n  }, []);\n\n  const renderItem = (petPostDataItem: any) => {\n    return (\n      <View style={styles.CardContainer}>\n        {\n          petPostDataItem.item.imagepath != \"\" &&\n          <View>\n            <TouchableHighlight\n              onPress={() => {\n                console.log('item:', petPostDataItem)\n                setSelectedId(petPostDataItem.index);\n              }}\n              underlayColor=\"white\">\n              <Image style={styles.imageitem}\n                source={{ uri: petPostDataItem.item.imagepath }}\n              />\n            </TouchableHighlight >\n\n            <Dialog isVisible={petPostDataItem.index === selectedId}\n              onBackdropPress={() => {\n                setSelectedId(null);\n              }}>\n              <Image style={styles.imageitem}\n                source={{ uri: petPostDataItem.item.imagepath }}\n              />\n              <Text>{petPostDataItem.item.caption}</Text>\n              <Text>{timestampToDate(petPostDataItem.item.createdate.seconds)}</Text>\n            </Dialog>\n          </View>\n\n        }\n      </View >\n    );\n  };\n\n\n  return (\n    <>\n      <View style={styles.container}>\n        <View style={styles.iconContainer}>\n          {(petPostDataItem.imagepath != \"\" && petPostDataItem.imagepath != undefined) ?\n\n            <Avatar\n              size={100}\n              rounded\n              source={{ uri: petPostDataItem.imagepath }}\n            />\n            : <Avatar\n              size={100}\n              rounded\n              title={petPostDataItem.petname ? petPostDataItem.petname[0] : \"\"}\n              containerStyle={{ backgroundColor: '#aaaaaa' }}\n            />\n          }\n          <View style={styles.iconDescriptionContainer}>\n            <Text style={styles.petname}>{petPostDataItem.petname}</Text>\n            <Text style={styles.petgender}>{petPostDataItem.petgender}  -  {petPostDataItem.petstages} </Text>\n          </View>\n        </View>\n\n        <View style={styles.contentContainer}>\n          <Text style={{ fontSize: 14, marginTop: 12, fontWeight: 'bold' }}>Recent Post</Text>\n          <View style={styles.uppergadient}>\n            <LinearGradient\n              colors={['white', 'rgba(255,255,255,0)']}\n              style={{ height: 40 }}\n            />\n          </View>\n          <View\n            style={styles.flexContainer}>\n            <FlatList\n              showsVerticalScrollIndicator={true}\n              showsHorizontalScrollIndicator={false}\n              data={socialMediaDataArray}\n              renderItem={(item) => renderItem(item)}\n              keyExtractor={item => item.id}\n              numColumns={3}\n              extraData={selectedId}\n\n            />\n          </View>\n          <View style={styles.lowergadient}>\n            <LinearGradient\n              colors={['rgba(255,255,255,0)', 'rgba(255,255,255,1)']}\n              style={{ height: 40 }}\n            />\n          </View>\n        </View>\n\n      </View >\n    </>\n  );\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    height: \"100%\",\n    flexDirection: 'column'\n  },\n  iconContainer: {\n    padding: 20,\n    alignSelf: 'flex-start',\n    zIndex: 1,\n    flexDirection: 'row'\n  },\n  iconDescriptionContainer: {\n    marginLeft: 20,\n    alignSelf: 'flex-start'\n  },\n  flexContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    justifyContent: 'space-between'\n  },\n  contentContainer: {\n    width: '100%',\n    height: '100%',\n    padding: 30,\n\n    flex: 1,\n    borderRadius: 25,\n    backgroundColor: 'white',\n    top: -30\n  },\n  uppergadient: {\n    flex: 1,\n    //backgroundColor: 'white',\n    top: 20,\n    width: '100%',\n    height: 40,\n    zIndex: 10,\n    position: 'absolute'\n  },\n  lowergadient: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    height: 40\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  petgender: {\n    fontSize: 10, marginBottom: 12, fontWeight: 'bold', color: '#888888'\n  },\n  CardContainer: {\n    width: '33%',\n    borderColor: '#fefefe',\n    borderWidth: 1\n  },\n  imageitem: {\n    aspectRatio: 1,\n  },\n  item: {\n    padding: 20,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n  title: {\n    fontSize: 32,\n  },\n\n\n});\n\nfunction timestampToDate(t: number) {\n  var date = new Date(t * 1000);\n\n  var hours = date.getHours();\n\n  var minutes = \"0\" + date.getMinutes();\n\n  var seconds = \"0\" + date.getSeconds();\n\n  var formattedTime = date.getDate() + \"/\" + date.getMonth();\n\n  return formattedTime;\n\n}\n\n\n"]},"metadata":{},"sourceType":"module"}