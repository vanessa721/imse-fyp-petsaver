{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"state\", \"descriptors\", \"dimensions\", \"insets\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { MissingIcon } from '@react-navigation/elements';\nimport { CommonActions, NavigationContext, NavigationRouteContext, useLinkBuilder, useTheme } from '@react-navigation/native';\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaFrame } from 'react-native-safe-area-context';\nimport BottomTabBarHeightCallbackContext from \"../utils/BottomTabBarHeightCallbackContext\";\nimport useIsKeyboardShown from \"../utils/useIsKeyboardShown\";\nimport BottomTabItem from \"./BottomTabItem\";\nvar DEFAULT_TABBAR_HEIGHT = 49;\nvar COMPACT_TABBAR_HEIGHT = 32;\nvar DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nvar useNativeDriver = Platform.OS !== 'web';\n\nvar shouldUseHorizontalLabels = function shouldUseHorizontalLabels(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors,\n      layout = _ref.layout,\n      dimensions = _ref.dimensions;\n  var tabBarLabelPosition = descriptors[state.routes[state.index].key].options.tabBarLabelPosition;\n\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n\n      case 'below-icon':\n        return false;\n    }\n  }\n\n  if (layout.width >= 768) {\n    var maxTabWidth = state.routes.reduce(function (acc, route) {\n      var tabBarItemStyle = descriptors[route.key].options.tabBarItemStyle;\n      var flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nvar getPaddingBottom = function getPaddingBottom(insets) {\n  return Math.max(insets.bottom - Platform.select({\n    ios: 4,\n    default: 0\n  }), 0);\n};\n\nexport var getTabBarHeight = function getTabBarHeight(_ref2) {\n  var _StyleSheet$flatten;\n\n  var state = _ref2.state,\n      descriptors = _ref2.descriptors,\n      dimensions = _ref2.dimensions,\n      insets = _ref2.insets,\n      style = _ref2.style,\n      rest = _objectWithoutProperties(_ref2, _excluded);\n\n  var customHeight = (_StyleSheet$flatten = StyleSheet.flatten(style)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  var isLandscape = dimensions.width > dimensions.height;\n  var horizontalLabels = shouldUseHorizontalLabels(_objectSpread({\n    state: state,\n    descriptors: descriptors,\n    dimensions: dimensions\n  }, rest));\n  var paddingBottom = getPaddingBottom(insets);\n\n  if (Platform.OS === 'ios' && !Platform.isPad && isLandscape && horizontalLabels) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\nexport default function BottomTabBar(_ref3) {\n  var state = _ref3.state,\n      navigation = _ref3.navigation,\n      descriptors = _ref3.descriptors,\n      insets = _ref3.insets,\n      style = _ref3.style;\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  var buildLink = useLinkBuilder();\n  var focusedRoute = state.routes[state.index];\n  var focusedDescriptor = descriptors[focusedRoute.key];\n  var focusedOptions = focusedDescriptor.options;\n  var tabBarShowLabel = focusedOptions.tabBarShowLabel,\n      _focusedOptions$tabBa = focusedOptions.tabBarHideOnKeyboard,\n      tabBarHideOnKeyboard = _focusedOptions$tabBa === void 0 ? false : _focusedOptions$tabBa,\n      tabBarVisibilityAnimationConfig = focusedOptions.tabBarVisibilityAnimationConfig,\n      tabBarStyle = focusedOptions.tabBarStyle,\n      tabBarBackground = focusedOptions.tabBarBackground,\n      tabBarActiveTintColor = focusedOptions.tabBarActiveTintColor,\n      tabBarInactiveTintColor = focusedOptions.tabBarInactiveTintColor,\n      tabBarActiveBackgroundColor = focusedOptions.tabBarActiveBackgroundColor,\n      tabBarInactiveBackgroundColor = focusedOptions.tabBarInactiveBackgroundColor;\n  var dimensions = useSafeAreaFrame();\n  var isKeyboardShown = useIsKeyboardShown();\n  var onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n  var shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n  var visibilityAnimationConfigRef = React.useRef(tabBarVisibilityAnimationConfig);\n  React.useEffect(function () {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n\n  var _React$useState = React.useState(!shouldShowTabBar),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isTabBarHidden = _React$useState2[0],\n      setIsTabBarHidden = _React$useState2[1];\n\n  var _React$useState3 = React.useState(function () {\n    return new Animated.Value(shouldShowTabBar ? 1 : 0);\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      visible = _React$useState4[0];\n\n  React.useEffect(function () {\n    var visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      var _visibilityAnimationC, _visibilityAnimationC2;\n\n      var animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC = visibilityAnimationConfig.show) === null || _visibilityAnimationC === void 0 ? void 0 : _visibilityAnimationC.animation) === 'spring' ? Animated.spring : Animated.timing;\n      animation(visible, _objectSpread({\n        toValue: 1,\n        useNativeDriver: useNativeDriver,\n        duration: 250\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC2 = visibilityAnimationConfig.show) === null || _visibilityAnimationC2 === void 0 ? void 0 : _visibilityAnimationC2.config)).start(function (_ref4) {\n        var finished = _ref4.finished;\n\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      var _visibilityAnimationC3, _visibilityAnimationC4;\n\n      setIsTabBarHidden(true);\n\n      var _animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC3 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC3 === void 0 ? void 0 : _visibilityAnimationC3.animation) === 'spring' ? Animated.spring : Animated.timing;\n\n      _animation(visible, _objectSpread({\n        toValue: 0,\n        useNativeDriver: useNativeDriver,\n        duration: 200\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC4 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC4 === void 0 ? void 0 : _visibilityAnimationC4.config)).start();\n    }\n\n    return function () {\n      return visible.stopAnimation();\n    };\n  }, [visible, shouldShowTabBar]);\n\n  var _React$useState5 = React.useState({\n    height: 0,\n    width: dimensions.width\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      layout = _React$useState6[0],\n      setLayout = _React$useState6[1];\n\n  var handleLayout = function handleLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n        height = _e$nativeEvent$layout.height,\n        width = _e$nativeEvent$layout.width;\n    onHeightChange === null || onHeightChange === void 0 ? void 0 : onHeightChange(height);\n    setLayout(function (layout) {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height: height,\n          width: width\n        };\n      }\n    });\n  };\n\n  var routes = state.routes;\n  var paddingBottom = getPaddingBottom(insets);\n  var tabBarHeight = getTabBarHeight({\n    state: state,\n    descriptors: descriptors,\n    insets: insets,\n    dimensions: dimensions,\n    layout: layout,\n    style: [tabBarStyle, style]\n  });\n  var hasHorizontalLabels = shouldUseHorizontalLabels({\n    state: state,\n    descriptors: descriptors,\n    dimensions: dimensions,\n    layout: layout\n  });\n  var tabBarBackgroundElement = tabBarBackground === null || tabBarBackground === void 0 ? void 0 : tabBarBackground();\n  return React.createElement(Animated.View, {\n    style: [styles.tabBar, {\n      backgroundColor: tabBarBackgroundElement != null ? 'transparent' : colors.card,\n      borderTopColor: colors.border\n    }, {\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height + paddingBottom + StyleSheet.hairlineWidth, 0]\n        })\n      }],\n      position: isTabBarHidden ? 'absolute' : null\n    }, {\n      height: tabBarHeight,\n      paddingBottom: paddingBottom,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }, tabBarStyle],\n    pointerEvents: isTabBarHidden ? 'none' : 'auto',\n    onLayout: handleLayout\n  }, React.createElement(View, {\n    pointerEvents: \"none\",\n    style: StyleSheet.absoluteFill\n  }, tabBarBackgroundElement), React.createElement(View, {\n    accessibilityRole: \"tablist\",\n    style: styles.content\n  }, routes.map(function (route, index) {\n    var _options$tabBarIcon;\n\n    var focused = index === state.index;\n    var options = descriptors[route.key].options;\n\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch(_objectSpread(_objectSpread({}, CommonActions.navigate({\n          name: route.name,\n          merge: true\n        })), {}, {\n          target: state.key\n        }));\n      }\n    };\n\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' && Platform.OS === 'ios' ? label + \", tab, \" + (index + 1) + \" of \" + routes.length : undefined;\n    return React.createElement(NavigationContext.Provider, {\n      key: route.key,\n      value: descriptors[route.key].navigation\n    }, React.createElement(NavigationRouteContext.Provider, {\n      value: route\n    }, React.createElement(BottomTabItem, {\n      route: route,\n      focused: focused,\n      horizontal: hasHorizontalLabels,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      accessibilityLabel: accessibilityLabel,\n      to: buildLink(route.name, route.params),\n      testID: options.tabBarTestID,\n      allowFontScaling: options.tabBarAllowFontScaling,\n      activeTintColor: tabBarActiveTintColor,\n      inactiveTintColor: tabBarInactiveTintColor,\n      activeBackgroundColor: tabBarActiveBackgroundColor,\n      inactiveBackgroundColor: tabBarInactiveBackgroundColor,\n      button: options.tabBarButton,\n      icon: (_options$tabBarIcon = options.tabBarIcon) !== null && _options$tabBarIcon !== void 0 ? _options$tabBarIcon : function (_ref5) {\n        var color = _ref5.color,\n            size = _ref5.size;\n        return React.createElement(MissingIcon, {\n          color: color,\n          size: size\n        });\n      },\n      badge: options.tabBarBadge,\n      badgeStyle: options.tabBarBadgeStyle,\n      label: label,\n      showLabel: tabBarShowLabel,\n      labelStyle: options.tabBarLabelStyle,\n      iconStyle: options.tabBarIconStyle,\n      style: options.tabBarItemStyle\n    })));\n  })));\n}\nvar styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"mappings":"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","names":["MissingIcon","CommonActions","NavigationContext","NavigationRouteContext","useLinkBuilder","useTheme","React","useSafeAreaFrame","BottomTabBarHeightCallbackContext","useIsKeyboardShown","BottomTabItem","DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","Platform","OS","shouldUseHorizontalLabels","state","descriptors","layout","dimensions","tabBarLabelPosition","routes","index","key","options","width","maxTabWidth","reduce","acc","route","tabBarItemStyle","flattenedStyle","StyleSheet","flatten","maxWidth","height","getPaddingBottom","insets","Math","max","bottom","select","ios","default","getTabBarHeight","style","rest","customHeight","_StyleSheet$flatten","isLandscape","horizontalLabels","paddingBottom","isPad","BottomTabBar","navigation","colors","buildLink","focusedRoute","focusedDescriptor","focusedOptions","tabBarShowLabel","tabBarHideOnKeyboard","tabBarVisibilityAnimationConfig","tabBarStyle","tabBarBackground","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","isKeyboardShown","onHeightChange","useContext","shouldShowTabBar","visibilityAnimationConfigRef","useRef","useEffect","current","useState","isTabBarHidden","setIsTabBarHidden","Animated","Value","visible","visibilityAnimationConfig","animation","show","spring","timing","toValue","duration","_visibilityAnimationC2","config","start","finished","hide","_visibilityAnimationC4","stopAnimation","setLayout","handleLayout","e","nativeEvent","tabBarHeight","hasHorizontalLabels","tabBarBackgroundElement","View","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","left","right","pointerEvents","onLayout","absoluteFill","accessibilityRole","content","map","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","navigate","name","merge","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","length","Provider","value","horizontal","to","params","testID","tabBarTestID","allowFontScaling","tabBarAllowFontScaling","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","button","tabBarButton","icon","tabBarIcon","color","size","badge","tabBarBadge","badgeStyle","tabBarBadgeStyle","showLabel","labelStyle","tabBarLabelStyle","iconStyle","tabBarIconStyle","create","borderTopWidth","elevation","flex","flexDirection"],"sources":["BottomTabBar.tsx"],"sourcesContent":["import { MissingIcon } from '@react-navigation/elements';\nimport {\n  CommonActions,\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  TabNavigationState,\n  useLinkBuilder,\n  useTheme,\n} from '@react-navigation/native';\nimport React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { EdgeInsets, useSafeAreaFrame } from 'react-native-safe-area-context';\n\nimport type { BottomTabBarProps, BottomTabDescriptorMap } from '../types';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport BottomTabItem from './BottomTabItem';\n\ntype Props = BottomTabBarProps & {\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  descriptors: BottomTabDescriptorMap;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  descriptors,\n  layout,\n  dimensions,\n}: Options) => {\n  const { tabBarLabelPosition } =\n    descriptors[state.routes[state.index].key].options;\n\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    const maxTabWidth = state.routes.reduce((acc, route) => {\n      const { tabBarItemStyle } = descriptors[route.key].options;\n      const flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  state,\n  descriptors,\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>> | undefined;\n}) => {\n  // @ts-ignore\n  const customHeight = StyleSheet.flatten(style)?.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    ...rest,\n  });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  insets,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const {\n    tabBarShowLabel,\n    tabBarHideOnKeyboard = false,\n    tabBarVisibilityAnimationConfig,\n    tabBarStyle,\n    tabBarBackground,\n    tabBarActiveTintColor,\n    tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor,\n    tabBarInactiveBackgroundColor,\n  } = focusedOptions;\n\n  const dimensions = useSafeAreaFrame();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n\n    return () => visible.stopAnimation();\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    onHeightChange?.(height);\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    descriptors,\n    insets,\n    dimensions,\n    layout,\n    style: [tabBarStyle, style],\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    layout,\n  });\n\n  const tabBarBackgroundElement = tabBarBackground?.();\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor:\n            tabBarBackgroundElement != null ? 'transparent' : colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: tabBarHeight,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        tabBarStyle,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n      onLayout={handleLayout}\n    >\n      <View pointerEvents=\"none\" style={StyleSheet.absoluteFill}>\n        {tabBarBackgroundElement}\n      </View>\n      <View accessibilityRole=\"tablist\" style={styles.content}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate({ name: route.name, merge: true }),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string' && Platform.OS === 'ios'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={options.tabBarAllowFontScaling}\n                  activeTintColor={tabBarActiveTintColor}\n                  inactiveTintColor={tabBarInactiveTintColor}\n                  activeBackgroundColor={tabBarActiveBackgroundColor}\n                  inactiveBackgroundColor={tabBarInactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={\n                    options.tabBarIcon ??\n                    (({ color, size }) => (\n                      <MissingIcon color={color} size={size} />\n                    ))\n                  }\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={tabBarShowLabel}\n                  labelStyle={options.tabBarLabelStyle}\n                  iconStyle={options.tabBarIconStyle}\n                  style={options.tabBarItemStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}