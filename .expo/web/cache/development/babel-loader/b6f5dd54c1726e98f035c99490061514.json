{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nimport { doc, setDoc } from \"firebase/firestore\";\nimport React, { useEffect, useState } from 'react';\nimport moblieAlert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Input, Avatar } from 'react-native-elements';\nimport { auth, db } from \"../firebase\";\nimport { assetsObject } from \"../assets/asset\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      registering = _useState6[0],\n      setRegistering = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      logining = _useState8[0],\n      setLogining = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showAlert = _useState10[0],\n      setShowAlert = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      alertMsg = _useState12[0],\n      setAlertMsg = _useState12[1];\n\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.replace(\"Root\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var handleRegister = function handleRegister() {\n    return _regeneratorRuntime.async(function handleRegister$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setRegistering(true);\n            createUserWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n              var user = userCredential.user;\n\n              try {\n                setDoc(doc(db, \"Users\", user.uid), {\n                  email: email\n                });\n              } catch (e) {\n                console.log(e);\n              }\n            }).catch(function (error) {\n              var errorCode = error.code;\n              var errorMessage = error.message;\n\n              if (checkIsWeb()) {\n                setShowAlert(true);\n                setAlertMsg('Register Unsuccess');\n              } else {\n                moblieAlert.alert(\"Register Unsuccess\", \"Error: \" + errorMessage, [{\n                  text: \"OK\",\n                  onPress: function onPress() {\n                    return console.log(\"OK Pressed\");\n                  }\n                }]);\n              }\n            });\n            setRegistering(false);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleLogin = function handleLogin() {\n    setLogining(true);\n    signInWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n      var user = userCredential.user;\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n\n      if (checkIsWeb()) {\n        setShowAlert(true);\n        setAlertMsg('Login Unsuccess');\n      } else {\n        moblieAlert.alert(\"Login Unsuccess\", \"Error: \" + errorMessage, [{\n          text: \"OK\",\n          onPress: function onPress() {\n            return console.log(\"OK Pressed\");\n          }\n        }]);\n      }\n\n      console.log(email, password);\n      console.log(errorMessage);\n    });\n    setLogining(false);\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n    children: [_jsx(Avatar, {\n      size: 100,\n      rounded: true,\n      source: assetsObject['appIcon'],\n      containerStyle: {\n        marginBottom: 0\n      }\n    }), _jsxs(View, {\n      style: styles.inputcontainer,\n      children: [_jsx(Input, {\n        style: styles.input,\n        placeholder: \"Email\",\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(Input, {\n        style: styles.input,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      })]\n    }), _jsx(Button, {\n      loading: logining,\n      loadingProps: {\n        size: 'small',\n        color: 'white'\n      },\n      buttonStyle: {\n        backgroundColor: '#0a9396',\n        borderRadius: 5\n      },\n      containerStyle: {\n        marginHorizontal: 50,\n        height: 50,\n        width: 200,\n        marginVertical: 10\n      },\n      onPress: handleLogin,\n      title: \"Login\"\n    }), _jsx(Button, {\n      loading: registering,\n      loadingProps: {\n        size: 'small',\n        color: 'white'\n      },\n      buttonStyle: {\n        backgroundColor: '#0a9396',\n        borderRadius: 5\n      },\n      containerStyle: {\n        marginHorizontal: 50,\n        height: 50,\n        width: 200,\n        marginVertical: 10\n      },\n      onPress: handleRegister,\n      title: \"Register\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputcontainer: {\n    width: '80%'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  input: {\n    fontSize: 12\n  }\n});\n\nfunction checkIsWeb() {\n  return Platform.OS === 'ios' || Platform.OS === 'android' ? false : true;\n}","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/LoginScreen.tsx"],"names":["createUserWithEmailAndPassword","signInWithEmailAndPassword","doc","setDoc","React","useEffect","useState","Button","Input","Avatar","auth","db","assetsObject","LoginScreen","navigation","email","setEmail","password","setPassword","registering","setRegistering","logining","setLogining","showAlert","setShowAlert","alertMsg","setAlertMsg","unsubscribe","onAuthStateChanged","user","replace","handleRegister","then","userCredential","uid","e","console","log","catch","error","errorCode","code","errorMessage","message","checkIsWeb","moblieAlert","alert","text","onPress","handleLogin","styles","container","Platform","OS","marginBottom","inputcontainer","input","size","color","backgroundColor","borderRadius","marginHorizontal","height","width","marginVertical","StyleSheet","create","flex","alignItems","justifyContent","title","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Alert as moblieAlert, KeyboardAvoidingView, Platform, StyleSheet, View } from 'react-native';\r\nimport { Button, Input, Text, Image, Avatar } from 'react-native-elements';\r\nimport { auth, db } from \"../firebase\";\r\n// import Alert from \"react-native-awesome-alerts\";\r\nimport { assetsObject } from '../assets/asset';\r\nexport default function LoginScreen({ navigation }: { navigation: any }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [registering, setRegistering] = useState(false);\r\n  const [logining, setLogining] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const [alertMsg, setAlertMsg] = useState('');\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user: any) => {\r\n      if (user) {\r\n        navigation.replace(\"Root\")\r\n      }\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const handleRegister = async () => {\r\n    setRegistering(true)\r\n    createUserWithEmailAndPassword(auth, email, password)\r\n      .then((userCredential) => {\r\n        const user = userCredential.user;\r\n        try {\r\n          setDoc(doc(db, \"Users\", user.uid), {\r\n            email: email,\r\n          });\r\n        } catch (e) {\r\n          console.log(e)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        if (checkIsWeb()) {\r\n          setShowAlert(true);\r\n          setAlertMsg('Register Unsuccess')\r\n        } else {\r\n          moblieAlert.alert(\r\n            \"Register Unsuccess\",\r\n            \"Error: \" + errorMessage,\r\n            [\r\n              { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n            ]\r\n          );\r\n        }\r\n\r\n      });\r\n\r\n    setRegistering(false)\r\n  }\r\n\r\n  const handleLogin = () => {\r\n    setLogining(true)\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then((userCredential) => {\r\n        const user = userCredential.user;\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        if (checkIsWeb()) {\r\n          setShowAlert(true);\r\n          setAlertMsg('Login Unsuccess')\r\n        } else {\r\n          moblieAlert.alert(\r\n            \"Login Unsuccess\",\r\n            \"Error: \" + errorMessage,\r\n            [\r\n              { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n            ]\r\n          );\r\n        }\r\n        console.log(email, password);\r\n        console.log(errorMessage);\r\n      });\r\n\r\n    setLogining(false)\r\n  }\r\n\r\n  return (\r\n    <KeyboardAvoidingView style={styles.container} behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\r\n    >\r\n      <Avatar\r\n        size={100}\r\n        rounded\r\n        source={assetsObject['appIcon']}\r\n        containerStyle={{ marginBottom: 0 }}\r\n      />\r\n      {/* <Image\r\n        source={assetsObject['Rabbit']}\r\n      /> */}\r\n\r\n      <View style={styles.inputcontainer}>\r\n        <Input style={styles.input} placeholder='Email' onChangeText={text => setEmail(text)} />\r\n        <Input style={styles.input} placeholder='Password' secureTextEntry onChangeText={text => setPassword(text)} />\r\n      </View>\r\n      <Button\r\n        loading={logining}\r\n        loadingProps={{ size: 'small', color: 'white' }}\r\n        buttonStyle={{\r\n          backgroundColor: '#0a9396',\r\n          borderRadius: 5,\r\n        }}\r\n        containerStyle={{\r\n          marginHorizontal: 50,\r\n          height: 50,\r\n          width: 200,\r\n          marginVertical: 10,\r\n        }}\r\n        onPress={handleLogin}\r\n        title=\"Login\"\r\n      />\r\n      <Button\r\n        loading={registering}\r\n        loadingProps={{ size: 'small', color: 'white' }}\r\n        buttonStyle={{\r\n          backgroundColor: '#0a9396',\r\n          borderRadius: 5,\r\n        }}\r\n        containerStyle={{\r\n          marginHorizontal: 50,\r\n          height: 50,\r\n          width: 200,\r\n          marginVertical: 10,\r\n        }}\r\n        onPress={handleRegister}\r\n        title=\"Register\" />\r\n      {/* <Alert\r\n        show={showAlert}\r\n        message={alertMsg}\r\n        closeOnTouchOutside={true}\r\n      /> */}\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputcontainer: {\r\n\r\n    width: '80%'\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  input: {\r\n    fontSize: 12\r\n  },\r\n});\r\n\r\n\r\nfunction checkIsWeb() {\r\n  return (Platform.OS === 'ios' || Platform.OS === 'android') ? false : true;\r\n  //return true //for dev testing \r\n}"]},"metadata":{},"sourceType":"module"}