{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text, SearchBar } from 'react-native-elements';\nimport React, { useState } from 'react';\nimport { PetCatagory } from \"../components/PetCatagory\";\nimport { PetCardFlatList } from \"../components/PetCardFlatList\";\nimport Constants from 'expo-constants';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchValue = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      petTypeFilter = _useState4[0],\n      setPetFilter = _useState4[1];\n\n  var updateSearch = function updateSearch(search) {\n    setSearch(searchValue);\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.headContainer,\n        children: [_jsx(Text, {\n          style: styles.header,\n          children: \"Good Morning\"\n        }), _jsxs(Text, {\n          style: styles.headerDesc,\n          children: [\"Are you ready to find a new friend \", petTypeFilter]\n        })]\n      }), _jsx(View, {\n        style: styles.SearchBarContainer,\n        children: _jsx(SearchBar, {\n          placeholder: \"Search for pets\",\n          onChangeText: function onChangeText() {\n            return updateSearch;\n          },\n          value: searchValue,\n          platform: \"default\",\n          round: true,\n          lightTheme: true,\n          containerStyle: styles.containerStyle,\n          inputContainerStyle: styles.inputContainerStyle\n        })\n      }), _jsx(View, {\n        style: styles.PetCatagoryContainer,\n        children: _jsx(FlatList, {\n          showsVerticalScrollIndicator: false,\n          showsHorizontalScrollIndicator: false,\n          numColumns: 5,\n          data: petCatagoryData,\n          renderItem: function renderItem(item) {\n            return PetCatagory(item, petTypeFilter, setPetFilter);\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          }\n        })\n      }), _jsx(Text, {\n        style: styles.recent,\n        children: \"Recent\"\n      }), _jsx(PetCardFlatList, {\n        filter_column: '',\n        filter_value: undefined,\n        navigation: navigation,\n        petTypeFilter: petTypeFilter\n      })]\n    })\n  });\n}\nvar petCatagoryData = [{\n  id: '1',\n  title: 'Cat'\n}, {\n  id: '2',\n  title: 'Dog'\n}, {\n  id: '3',\n  title: 'Bird'\n}, {\n  id: '4',\n  title: 'Hamster'\n}, {\n  id: '5',\n  title: 'Rabbit'\n}];\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    paddingBottom: 0,\n    backgroundColor: 'white',\n    marginTop: Constants.statusBarHeight\n  },\n  PetCatagoryContainer: {},\n  inputContainerStyle: {\n    backgroundColor: 'white',\n    borderColor: '#dddddd',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    height: 30\n  },\n  containerStyle: {\n    backgroundColor: 'white',\n    borderTopWidth: 0,\n    borderBottomWidth: 0,\n    padding: 0,\n    height: 30\n  },\n  headContainer: {\n    overflow: 'hidden',\n    justifyContent: 'space-between',\n    paddingTop: 15,\n    paddingBottom: 15\n  },\n  SearchBarContainer: {\n    paddingBottom: 15\n  },\n  header: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#298e96'\n  },\n  headerDesc: {\n    fontSize: 15,\n    color: '#aaaaaa'\n  },\n  recent: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  uppergadient: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    top: 0,\n    width: '100%',\n    height: 40,\n    zIndex: 10\n  },\n  lowergadient: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    height: 40\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/HomeScreen.tsx"],"names":["Text","SearchBar","React","useState","PetCatagory","PetCardFlatList","Constants","HomeScreen","navigation","searchValue","setSearch","petTypeFilter","setPetFilter","updateSearch","search","styles","container","headContainer","header","headerDesc","SearchBarContainer","containerStyle","inputContainerStyle","PetCatagoryContainer","petCatagoryData","item","id","recent","undefined","title","StyleSheet","create","flex","padding","paddingBottom","backgroundColor","marginTop","statusBarHeight","borderColor","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","height","overflow","justifyContent","paddingTop","fontSize","fontWeight","color","uppergadient","top","width","zIndex","lowergadient","position","bottom"],"mappings":";;;;AAGA,SAAyCA,IAAzC,EAA4DC,SAA5D,QAAoF,uBAApF;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT;AACA,SAASC,eAAT;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;;;;AACA,eAAe,SAASC,UAAT,OAA4D;AAAA,MAAtCC,UAAsC,QAAtCA,UAAsC;;AACzE,kBAAiCL,QAAQ,CAAS,EAAT,CAAzC;AAAA;AAAA,MAAOM,WAAP;AAAA,MAAoBC,SAApB;;AACA,mBAAsCP,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOQ,aAAP;AAAA,MAAsBC,YAAtB;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAA0C;AAC7DJ,IAAAA,SAAS,CAACD,WAAD,CAAT;AAED,GAHD;;AAKA,SAAQ;AAAA,cACN,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEM,MAAM,CAACC,SAApB;AAAA,iBACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,aAApB;AAAA,mBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,MAAM,CAACG,MAApB;AAAA;AAAA,UADF,EAEE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEH,MAAM,CAACI,UAApB;AAAA,4DAAoER,aAApE;AAAA,UAFF;AAAA,QADF,EAKE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEI,MAAM,CAACK,kBAApB;AAAA,kBAGE,KAAC,SAAD;AACE,UAAA,WAAW,EAAC,iBADd;AAEE,UAAA,YAAY,EAAE;AAAA,mBAAMP,YAAN;AAAA,WAFhB;AAGE,UAAA,KAAK,EAAEJ,WAHT;AAIE,UAAA,QAAQ,EAAC,SAJX;AAKE,UAAA,KAAK,EAAE,IALT;AAME,UAAA,UAAU,EAAE,IANd;AAOE,UAAA,cAAc,EAAEM,MAAM,CAACM,cAPzB;AAQE,UAAA,mBAAmB,EAAEN,MAAM,CAACO;AAR9B;AAHF,QALF,EAmBE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,oBAApB;AAAA,kBACE,KAAC,QAAD;AAEE,UAAA,4BAA4B,EAAE,KAFhC;AAGE,UAAA,8BAA8B,EAAE,KAHlC;AAIE,UAAA,UAAU,EAAE,CAJd;AAKE,UAAA,IAAI,EAAEC,eALR;AAME,UAAA,UAAU,EAAE,oBAACC,IAAD;AAAA,mBAAUrB,WAAW,CAACqB,IAAD,EAAOd,aAAP,EAAsBC,YAAtB,CAArB;AAAA,WANd;AAOE,UAAA,YAAY,EAAE,sBAAAa,IAAI;AAAA,mBAAIA,IAAI,CAACC,EAAT;AAAA;AAPpB;AADF,QAnBF,EA+BE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEX,MAAM,CAACY,MAApB;AAAA;AAAA,QA/BF,EAiCE,KAAC,eAAD;AAAiB,QAAA,aAAa,EAAE,EAAhC;AAAoC,QAAA,YAAY,EAAEC,SAAlD;AACE,QAAA,UAAU,EAAEpB,UADd;AAC0B,QAAA,aAAa,EAAEG;AADzC,QAjCF;AAAA;AADM,IAAR;AAyCD;AAGD,IAAMa,eAAe,GAAG,CACtB;AACEE,EAAAA,EAAE,EAAE,GADN;AAEEG,EAAAA,KAAK,EAAE;AAFT,CADsB,EAKtB;AACEH,EAAAA,EAAE,EAAE,GADN;AAEEG,EAAAA,KAAK,EAAE;AAFT,CALsB,EAStB;AACEH,EAAAA,EAAE,EAAE,GADN;AAEEG,EAAAA,KAAK,EAAE;AAFT,CATsB,EAatB;AACEH,EAAAA,EAAE,EAAE,GADN;AAEEG,EAAAA,KAAK,EAAE;AAFT,CAbsB,EAiBtB;AACEH,EAAAA,EAAE,EAAE,GADN;AAEEG,EAAAA,KAAK,EAAE;AAFT,CAjBsB,CAAxB;AAwBA,IAAMd,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC/Bf,EAAAA,SAAS,EAAE;AACTgB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,OAAO,EAAE,EAFA;AAGTC,IAAAA,aAAa,EAAE,CAHN;AAITC,IAAAA,eAAe,EAAE,OAJR;AAKTC,IAAAA,SAAS,EAAE9B,SAAS,CAAC+B;AALZ,GADoB;AAQ/Bd,EAAAA,oBAAoB,EAAE,EARS;AAU/BD,EAAAA,mBAAmB,EAAE;AACnBa,IAAAA,eAAe,EAAE,OADE;AAEnBG,IAAAA,WAAW,EAAE,SAFM;AAGnBC,IAAAA,cAAc,EAAE,CAHG;AAInBC,IAAAA,iBAAiB,EAAE,CAJA;AAKnBC,IAAAA,eAAe,EAAE,CALE;AAMnBC,IAAAA,gBAAgB,EAAE,CANC;AAOnBC,IAAAA,MAAM,EAAE;AAPW,GAVU;AAmB/BtB,EAAAA,cAAc,EAAE;AACdc,IAAAA,eAAe,EAAE,OADH;AAEdI,IAAAA,cAAc,EAAE,CAFF;AAGdC,IAAAA,iBAAiB,EAAE,CAHL;AAIdP,IAAAA,OAAO,EAAE,CAJK;AAKdU,IAAAA,MAAM,EAAE;AALM,GAnBe;AA2B/B1B,EAAAA,aAAa,EAAE;AACb2B,IAAAA,QAAQ,EAAE,QADG;AAEbC,IAAAA,cAAc,EAAE,eAFH;AAGbC,IAAAA,UAAU,EAAE,EAHC;AAIbZ,IAAAA,aAAa,EAAE;AAJF,GA3BgB;AAiC/Bd,EAAAA,kBAAkB,EAAE;AAClBc,IAAAA,aAAa,EAAE;AADG,GAjCW;AAoC/BhB,EAAAA,MAAM,EAAE;AACN6B,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,UAAU,EAAE,MAFN;AAGNC,IAAAA,KAAK,EAAE;AAHD,GApCuB;AAyC/B9B,EAAAA,UAAU,EAAE;AACV4B,IAAAA,QAAQ,EAAE,EADA;AAEVE,IAAAA,KAAK,EAAE;AAFG,GAzCmB;AA6C/BtB,EAAAA,MAAM,EAAE;AACNqB,IAAAA,UAAU,EAAE,MADN;AAEND,IAAAA,QAAQ,EAAE;AAFJ,GA7CuB;AAiD/BG,EAAAA,YAAY,EAAE;AACZlB,IAAAA,IAAI,EAAE,CADM;AAEZG,IAAAA,eAAe,EAAE,aAFL;AAGZgB,IAAAA,GAAG,EAAE,CAHO;AAIZC,IAAAA,KAAK,EAAE,MAJK;AAKZT,IAAAA,MAAM,EAAE,EALI;AAMZU,IAAAA,MAAM,EAAE;AANI,GAjDiB;AAyD/BC,EAAAA,YAAY,EAAE;AACZtB,IAAAA,IAAI,EAAE,CADM;AAEZG,IAAAA,eAAe,EAAE,aAFL;AAGZoB,IAAAA,QAAQ,EAAE,UAHE;AAIZC,IAAAA,MAAM,EAAE,CAJI;AAKZJ,IAAAA,KAAK,EAAE,MALK;AAMZT,IAAAA,MAAM,EAAE;AANI;AAzDiB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, FlatList, ActivityIndicator, View } from 'react-native';\nimport { auth } from \"../firebase\";\nimport { HomeStackProps } from '../types';\nimport { Button, ButtonGroup, withTheme, Text, Input, Icon, SearchBar, Image } from 'react-native-elements';\nimport React, { useState } from 'react';\nimport { PetCatagory } from '../components/PetCatagory';\nimport { PetCardFlatList } from '../components/PetCardFlatList';\n\nimport Constants from 'expo-constants'\nexport default function HomeScreen({ navigation }: HomeStackProps<'Home'>) {\n  const [searchValue, setSearch] = useState<string>(\"\");\n  const [petTypeFilter, setPetFilter] = useState(\"\");\n  const updateSearch = (search: React.SetStateAction<string>) => {\n    setSearch(searchValue);\n\n  };\n\n  return (<>\n    <View style={styles.container}>\n      <View style={styles.headContainer}>\n        <Text style={styles.header}>Good Morning</Text>\n        <Text style={styles.headerDesc}>Are you ready to find a new friend {petTypeFilter}</Text>\n      </View>\n      <View style={styles.SearchBarContainer}>\n        {/* \n        // @ts-ignore */}\n        <SearchBar\n          placeholder=\"Search for pets\"\n          onChangeText={() => updateSearch}\n          value={searchValue}\n          platform=\"default\"\n          round={true}\n          lightTheme={true}\n          containerStyle={styles.containerStyle}\n          inputContainerStyle={styles.inputContainerStyle} />\n\n      </View>\n      <View style={styles.PetCatagoryContainer}>\n        <FlatList\n          // contentContainerStyle={{ justifyContent: 'space-between', flexDirection: 'row', alignItems: 'flex-end', width: '100%' }}\n          showsVerticalScrollIndicator={false}\n          showsHorizontalScrollIndicator={false}\n          numColumns={5}\n          data={petCatagoryData}\n          renderItem={(item) => PetCatagory(item, petTypeFilter, setPetFilter)}\n          keyExtractor={item => item.id}\n        />\n      </View>\n\n      <Text style={styles.recent}>Recent</Text>\n\n      <PetCardFlatList filter_column={''} filter_value={undefined}\n        navigation={navigation} petTypeFilter={petTypeFilter} />\n\n\n    </View>\n  </>\n  );\n}\n\n\nconst petCatagoryData = [\n  {\n    id: '1',\n    title: 'Cat',\n  },\n  {\n    id: '2',\n    title: 'Dog',\n  },\n  {\n    id: '3',\n    title: 'Bird',\n  },\n  {\n    id: '4',\n    title: 'Hamster',\n  },\n  {\n    id: '5',\n    title: 'Rabbit',\n  },\n\n];\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    paddingBottom: 0,\n    backgroundColor: 'white',\n    marginTop: Constants.statusBarHeight\n  },\n  PetCatagoryContainer: {\n  },\n  inputContainerStyle: {\n    backgroundColor: 'white',\n    borderColor: '#dddddd',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    height: 30\n  },\n  containerStyle: {\n    backgroundColor: 'white',\n    borderTopWidth: 0,\n    borderBottomWidth: 0,\n    padding: 0,\n    height: 30\n\n  },\n  headContainer: {\n    overflow: 'hidden',\n    justifyContent: 'space-between',\n    paddingTop: 15,\n    paddingBottom: 15\n  },\n  SearchBarContainer: {\n    paddingBottom: 15\n  },\n  header: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#298e96'\n  },\n  headerDesc: {\n    fontSize: 15,\n    color: '#aaaaaa'\n  },\n  recent: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  uppergadient: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    top: 0,\n    width: '100%',\n    height: 40,\n    zIndex: 10\n  },\n  lowergadient: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    height: 40\n  }\n});\n"]},"metadata":{},"sourceType":"module"}