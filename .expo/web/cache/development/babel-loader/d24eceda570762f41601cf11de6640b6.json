{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport AppIntroSlider from 'react-native-app-intro-slider';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RootScreen from \"./screens/RootScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nLogBox.ignoreLogs(['']);\nvar Stack = createNativeStackNavigator();\n\nfunction checkIsWeb() {\n  return true;\n}\n\nexport default function App() {\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n\n  var _useState = useState(function () {\n    return checkIsWeb();\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      showRealApp = _useState2[0],\n      setShowRealApp = _useState2[1];\n\n  var onDone = function onDone() {\n    setShowRealApp(true);\n  };\n\n  var onSkip = function onSkip() {\n    setShowRealApp(true);\n  };\n\n  var RenderItem = function RenderItem(_ref) {\n    var item = _ref.item;\n    return _jsxs(View, {\n      style: {\n        flex: 1,\n        backgroundColor: item.backgroundColor,\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        paddingBottom: 100\n      },\n      children: [_jsx(Text, {\n        children: item.title\n      }), _jsx(Image, {\n        source: item.image\n      }), _jsx(Text, {\n        children: item.text\n      })]\n    });\n  };\n\n  if (!isLoadingComplete) {\n    return null;\n  }\n\n  return _jsx(_Fragment, {\n    children: showRealApp ? _jsxs(SafeAreaProvider, {\n      children: [_jsx(StatusBar, {}), _jsx(NavigationContainer, {\n        children: _jsxs(Stack.Navigator, {\n          children: [_jsx(Stack.Screen, {\n            options: {\n              headerShown: false\n            },\n            name: \"Login\",\n            component: LoginScreen\n          }), _jsx(Stack.Screen, {\n            options: {\n              headerShown: false\n            },\n            name: \"Root\",\n            component: RootScreen\n          })]\n        })\n      })]\n    }) : _jsx(AppIntroSlider, {\n      data: slides,\n      renderItem: RenderItem,\n      onDone: onDone,\n      showSkipButton: true,\n      onSkip: onSkip\n    })\n  });\n}\nvar slides = [{\n  key: 1,\n  title: 'Title 1',\n  text: 'Description.\\nSay something cool',\n  image: require(\"./assets/intro_screen/3.png\"),\n  backgroundColor: '#59b2ab'\n}, {\n  key: 2,\n  title: 'Title 2',\n  text: 'Other cool stuff',\n  image: require(\"./assets/intro_screen/3.png\"),\n  backgroundColor: '#febe29'\n}, {\n  key: 3,\n  title: 'Rocket guy',\n  text: 'I\\'m already out of descriptions\\n\\nLorem ipsum bla bla bla',\n  image: require(\"./assets/intro_screen/3.png\"),\n  backgroundColor: '#22bcb5'\n}];\nvar styles = StyleSheet.create({\n  buttonCircle: {\n    width: 40,\n    height: 40,\n    backgroundColor: 'rgba(0, 0, 0, .2)',\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/App.tsx"],"names":["StatusBar","SafeAreaProvider","useCachedResources","useColorScheme","React","useState","AppIntroSlider","NavigationContainer","createNativeStackNavigator","LoginScreen","RootScreen","LogBox","ignoreLogs","Stack","checkIsWeb","App","isLoadingComplete","colorScheme","showRealApp","setShowRealApp","onDone","onSkip","RenderItem","item","flex","backgroundColor","alignItems","justifyContent","paddingBottom","title","image","text","headerShown","slides","key","require","styles","StyleSheet","create","buttonCircle","width","height","borderRadius"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AAEA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AAGA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;AAEA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AAEA,OAAOC,WAAP;AACA,OAAOC,UAAP;;;;AAEAC,MAAM,CAACC,UAAP,CAAkB,CAAC,EAAD,CAAlB;AAEA,IAAMC,KAAK,GAAGL,0BAA0B,EAAxC;;AAEA,SAASM,UAAT,GAAsB;AAEpB,SAAO,IAAP;AACD;;AAED,eAAe,SAASC,GAAT,GAAe;AAC5B,MAAMC,iBAAiB,GAAGd,kBAAkB,EAA5C;AACA,MAAMe,WAAW,GAAGd,cAAc,EAAlC;;AACA,kBAAsCE,QAAQ,CAAC;AAAA,WAAMS,UAAU,EAAhB;AAAA,GAAD,CAA9C;AAAA;AAAA,MAAOI,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAIA,MAAME,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBF,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAKA,MAAMG,UAAU,GAAG,SAAbA,UAAa,OAA6B;AAAA,QAA1BC,IAA0B,QAA1BA,IAA0B;AAC9C,WACE,MAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,CADD;AAELC,QAAAA,eAAe,EAAEF,IAAI,CAACE,eAFjB;AAGLC,QAAAA,UAAU,EAAE,QAHP;AAILC,QAAAA,cAAc,EAAE,cAJX;AAKLC,QAAAA,aAAa,EAAE;AALV,OADT;AAAA,iBAQE,KAAC,IAAD;AAAA,kBAAOL,IAAI,CAACM;AAAZ,QARF,EASE,KAAC,KAAD;AAAO,QAAA,MAAM,EAAEN,IAAI,CAACO;AAApB,QATF,EAUE,KAAC,IAAD;AAAA,kBAAOP,IAAI,CAACQ;AAAZ,QAVF;AAAA,MADF;AAcD,GAfD;;AAkBA,MAAI,CAACf,iBAAL,EAAwB;AACtB,WAAO,IAAP;AACD;;AACD,SACE;AAAA,cACGE,WAAW,GACV,MAAC,gBAAD;AAAA,iBACE,KAAC,SAAD,KADF,EAEE,KAAC,mBAAD;AAAA,kBACE,MAAC,KAAD,CAAO,SAAP;AAAA,qBACE,KAAC,KAAD,CAAO,MAAP;AAAc,YAAA,OAAO,EAAE;AAAEc,cAAAA,WAAW,EAAE;AAAf,aAAvB;AAA+C,YAAA,IAAI,EAAC,OAApD;AAA4D,YAAA,SAAS,EAAEvB;AAAvE,YADF,EAEE,KAAC,KAAD,CAAO,MAAP;AAAc,YAAA,OAAO,EAAE;AAAEuB,cAAAA,WAAW,EAAE;AAAf,aAAvB;AAA+C,YAAA,IAAI,EAAC,MAApD;AAA2D,YAAA,SAAS,EAAEtB;AAAtE,YAFF;AAAA;AADF,QAFF;AAAA,MADU,GAaV,KAAC,cAAD;AACE,MAAA,IAAI,EAAEuB,MADR;AAEE,MAAA,UAAU,EAAEX,UAFd;AAGE,MAAA,MAAM,EAAEF,MAHV;AAIE,MAAA,cAAc,EAAE,IAJlB;AAKE,MAAA,MAAM,EAAEC;AALV;AAdJ,IADF;AA0BD;AAED,IAAMY,MAAM,GAAG,CACb;AACEC,EAAAA,GAAG,EAAE,CADP;AAEEL,EAAAA,KAAK,EAAE,SAFT;AAGEE,EAAAA,IAAI,EAAE,kCAHR;AAIED,EAAAA,KAAK,EAAEK,OAAO,+BAJhB;AAKEV,EAAAA,eAAe,EAAE;AALnB,CADa,EAQb;AACES,EAAAA,GAAG,EAAE,CADP;AAEEL,EAAAA,KAAK,EAAE,SAFT;AAGEE,EAAAA,IAAI,EAAE,kBAHR;AAIED,EAAAA,KAAK,EAAEK,OAAO,+BAJhB;AAKEV,EAAAA,eAAe,EAAE;AALnB,CARa,EAeb;AACES,EAAAA,GAAG,EAAE,CADP;AAEEL,EAAAA,KAAK,EAAE,YAFT;AAGEE,EAAAA,IAAI,EAAE,6DAHR;AAIED,EAAAA,KAAK,EAAEK,OAAO,+BAJhB;AAKEV,EAAAA,eAAe,EAAE;AALnB,CAfa,CAAf;AAwBA,IAAMW,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,MAAM,EAAE,EAFI;AAGZhB,IAAAA,eAAe,EAAE,mBAHL;AAIZiB,IAAAA,YAAY,EAAE,EAJF;AAKZf,IAAAA,cAAc,EAAE,QALJ;AAMZD,IAAAA,UAAU,EAAE;AANA;AADiB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport useCachedResources from './hooks/useCachedResources';\nimport useColorScheme from './hooks/useColorScheme';\nimport Navigation from './navigation';\n\nimport React, { useState } from 'react';\nimport { Platform, StyleSheet, View, Text, Image, LogBox } from 'react-native';\nimport AppIntroSlider from 'react-native-app-intro-slider';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nimport LoginScreen from './screens/LoginScreen';\nimport RootScreen from './screens/RootScreen';\n\nLogBox.ignoreLogs(['']);\n\nconst Stack = createNativeStackNavigator();\n\nfunction checkIsWeb() {\n  //return (Platform.OS === 'ios' || Platform.OS === 'android') ? false : true;\n  return true //for dev testing \n}\n\nexport default function App() {\n  const isLoadingComplete = useCachedResources();\n  const colorScheme = useColorScheme();\n  const [showRealApp, setShowRealApp] = useState(() => checkIsWeb());\n\n  const onDone = () => {\n    setShowRealApp(true);\n  };\n\n  const onSkip = () => {\n    setShowRealApp(true);\n  };\n\n\n  const RenderItem = ({ item }: { item: any }) => {\n    return (\n      <View\n        style={{\n          flex: 1,\n          backgroundColor: item.backgroundColor,\n          alignItems: 'center',\n          justifyContent: 'space-around',\n          paddingBottom: 100,\n        }}>\n        <Text>{item.title}</Text>\n        <Image source={item.image} />\n        <Text>{item.text}</Text>\n      </View>\n    );\n  };\n\n\n  if (!isLoadingComplete) {\n    return null;\n  }\n  return (\n    <>\n      {showRealApp ? (\n        <SafeAreaProvider>\n          <StatusBar />\n          <NavigationContainer >\n            <Stack.Navigator>\n              <Stack.Screen options={{ headerShown: false }} name=\"Login\" component={LoginScreen}></Stack.Screen>\n              <Stack.Screen options={{ headerShown: false }} name=\"Root\" component={RootScreen}></Stack.Screen>\n\n            </Stack.Navigator>\n          </NavigationContainer>\n\n        </SafeAreaProvider>\n      ) : (\n        <AppIntroSlider\n          data={slides}\n          renderItem={RenderItem}\n          onDone={onDone}\n          showSkipButton={true}\n          onSkip={onSkip}\n        />\n      )}\n    </>\n  );\n\n}\n\nconst slides = [\n  {\n    key: 1,\n    title: 'Title 1',\n    text: 'Description.\\nSay something cool',\n    image: require('./assets/intro_screen/3.png'),\n    backgroundColor: '#59b2ab',\n  },\n  {\n    key: 2,\n    title: 'Title 2',\n    text: 'Other cool stuff',\n    image: require('./assets/intro_screen/3.png'),\n    backgroundColor: '#febe29',\n  },\n  {\n    key: 3,\n    title: 'Rocket guy',\n    text: 'I\\'m already out of descriptions\\n\\nLorem ipsum bla bla bla',\n    image: require('./assets/intro_screen/3.png'),\n    backgroundColor: '#22bcb5',\n  }\n];\n\nconst styles = StyleSheet.create({\n  buttonCircle: {\n    width: 40,\n    height: 40,\n    backgroundColor: 'rgba(0, 0, 0, .2)',\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  }\n});\n"]},"metadata":{},"sourceType":"module"}