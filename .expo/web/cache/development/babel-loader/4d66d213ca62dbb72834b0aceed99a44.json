{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Text, Input } from 'react-native-elements';\nimport { storage } from \"../firebase\";\nimport React, { useEffect, useState } from 'react';\nimport { ref, getDownloadURL } from \"firebase/storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CreatePostScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageUrl = _useState2[0],\n      setImageUrl = _useState2[1];\n\n  useEffect(function () {\n    getDownloadURL(ref(storage, 'petImages/cat.png')).then(function (url) {\n      setImageUrl(url);\n    }).catch(function (error) {});\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"CreatePostScreen\"\n    }), _jsx(View, {\n      style: styles.separator\n    }), _jsx(Input, {\n      style: styles.input,\n      placeholder: \"Email\"\n    }), _jsx(View, {\n      children: _jsx(Image, {\n        style: styles.imageitem,\n        source: {\n          uri: imageUrl\n        }\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  input: {\n    fontSize: 12\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: '50%',\n    borderRadius: 25\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/CreatePostScreen.tsx"],"names":["Text","Input","storage","React","useEffect","useState","ref","getDownloadURL","CreatePostScreen","navigation","imageUrl","setImageUrl","then","url","catch","error","styles","container","title","separator","input","imageitem","uri","StyleSheet","create","flex","alignItems","justifyContent","fontSize","fontWeight","marginVertical","height","width","aspectRatio","borderRadius"],"mappings":";;;;AAIA,SAAyCA,IAAzC,EAA+CC,KAA/C,QAA4D,uBAA5D;AACA,SAASC,OAAT;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,cAAd,QAAoC,kBAApC;;;AAEA,eAAe,SAASC,gBAAT,OAAwE;AAAA,MAA5CC,UAA4C,QAA5CA,UAA4C;;AACrF,kBAAgCJ,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,cAAc,CAACD,GAAG,CAACJ,OAAD,EAAU,mBAAV,CAAJ,CAAd,CACGU,IADH,CACQ,UAACC,GAAD,EAAS;AACbF,MAAAA,WAAW,CAACE,GAAD,CAAX;AACD,KAHH,EAIGC,KAJH,CAIS,UAACC,KAAD,EAAW,CAEjB,CANH;AAQD,GATQ,EASN,EATM,CAAT;AAYA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA,MADF,EAEE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACG;AAApB,MAFF,EAGE,KAAC,KAAD;AAAO,MAAA,KAAK,EAAEH,MAAM,CAACI,KAArB;AAA4B,MAAA,WAAW,EAAC;AAAxC,MAHF,EAIE,KAAC,IAAD;AAAA,gBAAM,KAAC,KAAD;AAAO,QAAA,KAAK,EAAEJ,MAAM,CAACK,SAArB;AAAgC,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAEZ;AAAP;AAAxC;AAAN,MAJF;AAAA,IADF;AAQD;AAED,IAAMM,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BT,EAAAA,KAAK,EAAE;AACLU,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE;AAFP,GANwB;AAU/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,cAAc,EAAE,EADP;AAETC,IAAAA,MAAM,EAAE,CAFC;AAGTC,IAAAA,KAAK,EAAE;AAHE,GAVoB;AAe/BZ,EAAAA,KAAK,EAAE;AACLQ,IAAAA,QAAQ,EAAE;AADL,GAfwB;AAkB/BP,EAAAA,SAAS,EAAE;AACTY,IAAAA,WAAW,EAAE,IADJ;AAETD,IAAAA,KAAK,EAAE,KAFE;AAGTE,IAAAA,YAAY,EAAE;AAHL;AAlBoB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, View, Image } from 'react-native';\nimport { auth } from \"../firebase\";\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { SettingStackProps } from '../types';\nimport { Button, ButtonGroup, withTheme, Text, Input } from 'react-native-elements';\nimport { storage } from \"../firebase\";\nimport React, { useEffect, useState } from 'react';\nimport { ref, getDownloadURL } from \"firebase/storage\";\n\nexport default function CreatePostScreen({ navigation }: SettingStackProps<'Setting'>) {\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  useEffect(() => {\n    getDownloadURL(ref(storage, 'petImages/cat.png'))\n      .then((url) => {\n        setImageUrl(url);\n      })\n      .catch((error) => {\n        // Handle any errors\n      });\n\n  }, []);\n\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>CreatePostScreen</Text>\n      <View style={styles.separator} />\n      <Input style={styles.input} placeholder='Email' />\n      <View><Image style={styles.imageitem} source={{ uri: imageUrl }} /></View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  input: {\n    fontSize: 12\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: '50%',\n    borderRadius: 25,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}