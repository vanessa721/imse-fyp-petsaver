{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Button, Text, Input, Avatar } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as DocumentPicker from \"expo-document-picker\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { storage, db, auth } from \"../firebase\";\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { onSnapshot, doc, updateDoc } from \"firebase/firestore\";\nimport Dropdown from \"../components/dropdown\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar assetsObject = require(\"../assets/asset.tsx\");\n\nexport default function UserSettingScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userIconUri = _useState2[0],\n      setUserIconImage = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userId = _useState4[0],\n      setUserId = _useState4[1];\n\n  var _useState5 = useState(\"Male\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      UserGender = _useState6[0],\n      setGenderValue = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      UserName = _useState8[0],\n      setUserName = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      UserAge = _useState10[0],\n      setUserAge = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      UserDescription = _useState12[0],\n      setUserDescription = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      uploading = _useState14[0],\n      setUploading = _useState14[1];\n\n  var _useState15 = useState('Submit'),\n      _useState16 = _slicedToArray(_useState15, 2),\n      submitButtomText = _useState16[0],\n      setSubmitButtomText = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      addressDocUri = _useState18[0],\n      setAddressDocUri = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      uploadingAddress = _useState20[0],\n      setUploadingAddress = _useState20[1];\n\n  var _useState21 = useState('Submit Address Prove'),\n      _useState22 = _slicedToArray(_useState21, 2),\n      submitAddressButtomText = _useState22[0],\n      setSubmitAddressButtomText = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      incomeDocUri = _useState24[0],\n      setIncomeDocUri = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      uploadingIncome = _useState26[0],\n      setUploadingIncome = _useState26[1];\n\n  var _useState27 = useState('Submit Income Prove'),\n      _useState28 = _slicedToArray(_useState27, 2),\n      submitIncomeButtomText = _useState28[0],\n      setSubmitIncomeButtomText = _useState28[1];\n\n  var getData = function getData() {\n    var _auth$currentUser;\n\n    var userId, unsub;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            userId = (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid;\n            console.log(\"Get data: userId:\", userId);\n\n            if (userId) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 4:\n            unsub = onSnapshot(doc(db, \"Users\", userId), function (doc) {\n              var _doc$data, _doc$data2, _doc$data3, _doc$data4, _doc$data5, _doc$data6, _doc$data7, _doc$data8, _doc$data9, _doc$data10, _doc$data11, _doc$data13;\n\n              if (doc == undefined) return false;\n              if (!doc.data()) return false;\n              if ((_doc$data = doc.data()) != null && _doc$data.desc) setUserDescription((_doc$data2 = doc.data()) == null ? void 0 : _doc$data2.desc);\n              if ((_doc$data3 = doc.data()) != null && _doc$data3.username) setUserName((_doc$data4 = doc.data()) == null ? void 0 : _doc$data4.username);\n              if ((_doc$data5 = doc.data()) != null && _doc$data5.usergender) setGenderValue((_doc$data6 = doc.data()) == null ? void 0 : _doc$data6.usergender);\n              if ((_doc$data7 = doc.data()) != null && _doc$data7.userAge) setUserAge((_doc$data8 = doc.data()) == null ? void 0 : _doc$data8.userAge);\n              if ((_doc$data9 = doc.data()) != null && _doc$data9.userIconUri) setUserIconImage((_doc$data10 = doc.data()) == null ? void 0 : _doc$data10.userIconUri);\n\n              if ((_doc$data11 = doc.data()) != null && _doc$data11.addressDocUri) {\n                var _doc$data12;\n\n                setUserIconImage((_doc$data12 = doc.data()) == null ? void 0 : _doc$data12.addressDocUri);\n                setSubmitAddressButtomText(\"Address Prove Submitted\");\n              }\n\n              ;\n\n              if ((_doc$data13 = doc.data()) != null && _doc$data13.incomeDocUri) {\n                var _doc$data14;\n\n                setUserIconImage((_doc$data14 = doc.data()) == null ? void 0 : _doc$data14.incomeDocUri);\n                setSubmitIncomeButtomText(\"Income Prove Submitted\");\n              }\n\n              ;\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    var _auth$currentUser2;\n\n    setUserId((_auth$currentUser2 = auth.currentUser) == null ? void 0 : _auth$currentUser2.uid);\n    getData();\n  }, []);\n\n  var pickImageByLibrary = function pickImageByLibrary() {\n    var result;\n    return _regeneratorRuntime.async(function pickImageByLibrary$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 4],\n              maxWidth: 500,\n              maxHeight: 500,\n              quality: 0.5\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              setUserIconImage(result.uri);\n            }\n\n            console.log('user uploading image: ', userIconUri);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadAddressDocument = function uploadAddressDocument() {\n    var result;\n    return _regeneratorRuntime.async(function uploadAddressDocument$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            setUploadingAddress(true);\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(DocumentPicker.getDocumentAsync({}).then(function _callee(response) {\n              var name, size, uri, mimeType, type, nameParts, fileType, fileToUpload, docName, storageRef, blob, snapshot, DownloadURL;\n              return _regeneratorRuntime.async(function _callee$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      if (!(response.type == 'success')) {\n                        _context3.next = 24;\n                        break;\n                      }\n\n                      name = response.name, size = response.size, uri = response.uri, mimeType = response.mimeType, type = response.type;\n                      nameParts = name.split('.');\n                      fileType = nameParts[nameParts.length - 1];\n                      fileToUpload = {\n                        name: name,\n                        type: mimeType,\n                        size: size,\n                        uri: Platform.OS === 'ios' ? uri : uri\n                      };\n                      console.log(fileToUpload, '...............file');\n                      setAddressDocUri(uri);\n\n                      if (!uri) {\n                        _context3.next = 23;\n                        break;\n                      }\n\n                      docName = Date.now() + '-' + getRandomString(5) + '-' + userId + fileType;\n                      storageRef = storage_ref(storage, 'addressDoc/' + docName);\n                      _context3.next = 12;\n                      return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n                        var xhr = new XMLHttpRequest();\n\n                        xhr.onload = function () {\n                          resolve(xhr.response);\n                        };\n\n                        xhr.onerror = function () {\n                          reject(new TypeError(\"Network request failed\"));\n                        };\n\n                        xhr.responseType = \"blob\";\n                        xhr.open(\"GET\", uri, true);\n                        xhr.send(null);\n                      }));\n\n                    case 12:\n                      blob = _context3.sent;\n                      _context3.next = 15;\n                      return _regeneratorRuntime.awrap(uploadBytes(storageRef, blob));\n\n                    case 15:\n                      snapshot = _context3.sent;\n                      _context3.next = 18;\n                      return _regeneratorRuntime.awrap(getDownloadURL(snapshot.ref));\n\n                    case 18:\n                      DownloadURL = _context3.sent;\n                      setAddressDocUri(DownloadURL);\n                      console.log('File available at', DownloadURL);\n                      _context3.next = 24;\n                      break;\n\n                    case 23:\n                      console.log('user no image ', userId);\n\n                    case 24:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 3:\n            result = _context4.sent;\n            setSubmitAddressButtomText(\"Address Prove Submitted\");\n            setUploadingAddress(false);\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadIncomeDocument = function uploadIncomeDocument() {\n    var result;\n    return _regeneratorRuntime.async(function uploadIncomeDocument$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            setUploadingIncome(true);\n            _context6.next = 3;\n            return _regeneratorRuntime.awrap(DocumentPicker.getDocumentAsync({}).then(function _callee2(response) {\n              var name, size, uri, mimeType, type, nameParts, fileType, fileToUpload, docName, storageRef, blob, snapshot, DownloadURL;\n              return _regeneratorRuntime.async(function _callee2$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      if (!(response.type == 'success')) {\n                        _context5.next = 24;\n                        break;\n                      }\n\n                      name = response.name, size = response.size, uri = response.uri, mimeType = response.mimeType, type = response.type;\n                      nameParts = name.split('.');\n                      fileType = nameParts[nameParts.length - 1];\n                      fileToUpload = {\n                        name: name,\n                        type: mimeType,\n                        size: size,\n                        uri: Platform.OS === 'ios' ? uri : uri\n                      };\n                      console.log(fileToUpload, '...............file');\n                      setIncomeDocUri(uri);\n\n                      if (!uri) {\n                        _context5.next = 23;\n                        break;\n                      }\n\n                      docName = Date.now() + '-' + getRandomString(5) + '-' + userId + fileType;\n                      storageRef = storage_ref(storage, 'incomeDoc/' + docName);\n                      _context5.next = 12;\n                      return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n                        var xhr = new XMLHttpRequest();\n\n                        xhr.onload = function () {\n                          resolve(xhr.response);\n                        };\n\n                        xhr.onerror = function () {\n                          reject(new TypeError(\"Network request failed\"));\n                        };\n\n                        xhr.responseType = \"blob\";\n                        xhr.open(\"GET\", uri, true);\n                        xhr.send(null);\n                      }));\n\n                    case 12:\n                      blob = _context5.sent;\n                      _context5.next = 15;\n                      return _regeneratorRuntime.awrap(uploadBytes(storageRef, blob));\n\n                    case 15:\n                      snapshot = _context5.sent;\n                      _context5.next = 18;\n                      return _regeneratorRuntime.awrap(getDownloadURL(snapshot.ref));\n\n                    case 18:\n                      DownloadURL = _context5.sent;\n                      setIncomeDocUri(DownloadURL);\n                      console.log('File available at', DownloadURL);\n                      _context5.next = 24;\n                      break;\n\n                    case 23:\n                      console.log('user no doc ', userId);\n\n                    case 24:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 3:\n            result = _context6.sent;\n            setSubmitIncomeButtomText(\"Income Prove Submitted\");\n            setUploadingIncome(false);\n\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadUserImage = function uploadUserImage() {\n    return _regeneratorRuntime.async(function uploadUserImage$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadUserUpdate = function uploadUserUpdate() {\n    var snapshotDownloadURL, imagename, storageRef, blob, snapshot, UserRef;\n    return _regeneratorRuntime.async(function uploadUserUpdate$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            setUploading(true);\n            snapshotDownloadURL = null;\n\n            if (!userIconUri) {\n              _context8.next = 18;\n              break;\n            }\n\n            imagename = Date.now() + '-' + getRandomString(5) + '-' + userId + \".png\";\n            storageRef = storage_ref(storage, 'userIcon/' + imagename);\n            _context8.next = 7;\n            return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n              var xhr = new XMLHttpRequest();\n\n              xhr.onload = function () {\n                resolve(xhr.response);\n              };\n\n              xhr.onerror = function () {\n                reject(new TypeError(\"Network request failed\"));\n              };\n\n              xhr.responseType = \"blob\";\n              xhr.open(\"GET\", userIconUri, true);\n              xhr.send(null);\n            }));\n\n          case 7:\n            blob = _context8.sent;\n            _context8.next = 10;\n            return _regeneratorRuntime.awrap(uploadBytes(storageRef, blob));\n\n          case 10:\n            snapshot = _context8.sent;\n            _context8.next = 13;\n            return _regeneratorRuntime.awrap(getDownloadURL(snapshot.ref));\n\n          case 13:\n            snapshotDownloadURL = _context8.sent;\n            setUserIconImage(snapshotDownloadURL);\n            console.log('File available at', snapshotDownloadURL);\n            _context8.next = 19;\n            break;\n\n          case 18:\n            console.log('user no image ', userId);\n\n          case 19:\n            console.log('userIconUri', userIconUri);\n            console.log('addressDocUri', addressDocUri);\n            console.log('incomeDocUri', incomeDocUri);\n            _context8.prev = 22;\n\n            if (!userId) {\n              _context8.next = 31;\n              break;\n            }\n\n            UserRef = doc(db, 'Users', userId);\n            _context8.next = 27;\n            return _regeneratorRuntime.awrap(updateDoc(UserRef, {\n              userIconUri: userIconUri,\n              username: UserName,\n              usergender: UserGender,\n              desc: UserDescription,\n              lastupdateDate: new Date(),\n              userAge: UserAge,\n              addressDocUri: addressDocUri,\n              incomeDocUri: incomeDocUri\n            }));\n\n          case 27:\n            console.log(\"Document written with ID: \", UserRef.id);\n            Alert.alert(\"Done\", \"User Info updated\", [{\n              text: \"OK\",\n              onPress: function onPress() {\n                return console.log(\"OK Pressed\");\n              }\n            }]);\n            _context8.next = 32;\n            break;\n\n          case 31:\n            console.error(\"userId not found:  \", auth.currentUser);\n\n          case 32:\n            _context8.next = 37;\n            break;\n\n          case 34:\n            _context8.prev = 34;\n            _context8.t0 = _context8[\"catch\"](22);\n            console.error(\"Error adding document:  \", _context8.t0);\n\n          case 37:\n            setUploading(false);\n            setSubmitButtomText(\"Submitted\");\n\n          case 39:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, [[22, 34]], Promise);\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        showsHorizontalScrollIndicator: false,\n        style: {\n          height: \"100%\",\n          width: \"100%\",\n          paddingTop: 15\n        },\n        children: [_jsx(View, {\n          style: styles.imagePickerContainer,\n          children: _jsxs(View, {\n            style: styles.imageitem,\n            children: [userIconUri != \"\" && userIconUri != undefined ? _jsx(TouchableOpacity, {\n              onPress: pickImageByLibrary,\n              children: _jsx(Avatar, {\n                size: 100,\n                rounded: true,\n                source: {\n                  uri: userIconUri\n                }\n              })\n            }) : _jsx(TouchableOpacity, {\n              onPress: pickImageByLibrary,\n              children: _jsx(Avatar, {\n                size: 100,\n                rounded: true,\n                title: UserName ? UserName[0] : \"\",\n                containerStyle: {\n                  backgroundColor: '#aaaaaa'\n                }\n              })\n            }), _jsx(View, {\n              style: styles.iconContainer,\n              children: _jsx(FontAwesome, {\n                name: \"camera\",\n                size: 25,\n                rounded: true,\n                color: \"black\",\n                iconStyle: {\n                  backgroundColor: '#eb1561'\n                },\n                containerStyle: {\n                  backgroundColor: '#eb1561'\n                },\n                avatarStyle: {\n                  backgroundColor: '#eb1561'\n                },\n                overlayContainerStyle: {\n                  backgroundColor: '#eb1561'\n                },\n                placeholderStyle: {\n                  backgroundColor: '#eb1561'\n                },\n                onPress: function onPress() {\n                  pickImageByLibrary;\n                }\n              })\n            })]\n          })\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"Charlie\",\n          label: \"User Name:\",\n          onChangeText: function onChangeText(text) {\n            return setUserName(text);\n          },\n          containerStyle: {\n            marginBottom: 20\n          },\n          value: UserName\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"0-100\",\n          label: \"User Age:\",\n          onChangeText: function onChangeText(text) {\n            return setUserAge(text);\n          },\n          containerStyle: {\n            marginBottom: 20\n          },\n          value: UserAge\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"Descript your User here\",\n          label: \"User Description:\",\n          onChangeText: function onChangeText(text) {\n            return setUserDescription(text);\n          },\n          containerStyle: {\n            marginBottom: 20\n          },\n          value: UserDescription,\n          numberOfLines: 4,\n          multiline: true\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"User Gender:\"\n          }), _jsx(Dropdown, {\n            data: gender_drop_down_data,\n            initvalue: UserGender\n          })]\n        }), _jsx(Button, {\n          title: submitAddressButtomText,\n          onPress: uploadAddressDocument,\n          loading: uploadingAddress,\n          buttonStyle: {\n            backgroundColor: 'rgba(111, 202, 186, 0.5)',\n            borderRadius: 5,\n            margin: 10\n          },\n          titleStyle: {\n            fontSize: 12\n          }\n        }), _jsx(Button, {\n          title: submitIncomeButtomText,\n          onPress: uploadIncomeDocument,\n          loading: uploadingIncome,\n          buttonStyle: {\n            backgroundColor: 'rgba(111, 202, 186, 0.5)',\n            borderRadius: 5,\n            margin: 10\n          },\n          titleStyle: {\n            fontSize: 12\n          }\n        }), _jsx(Button, {\n          title: submitButtomText,\n          onPress: uploadUserUpdate,\n          loading: uploading,\n          buttonStyle: {\n            backgroundColor: 'rgba(111, 202, 186, 1)',\n            borderRadius: 5,\n            margin: 10,\n            marginTop: 30\n          },\n          titleStyle: {\n            fontSize: 12\n          }\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 20,\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  input: {\n    fontSize: 12\n  },\n  pickerContainer: {\n    paddingHorizontal: 10,\n    marginBottom: 30\n  },\n  pickerLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'rgb(134, 147, 158)'\n  },\n  CardContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    borderRadius: 25,\n    fontSize: 12\n  },\n  contentContainer: {\n    width: '50%',\n    height: '100%',\n    paddingLeft: 10,\n    flex: 1\n  },\n  Username: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  Usergender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  desc: {\n    fontSize: 10,\n    color: '#999999'\n  },\n  askbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  askbuttonContainer: {\n    position: 'absolute',\n    left: 10,\n    bottom: 0\n  },\n  imagePickerContainer: {\n    flexDirection: 'column',\n    paddingHorizontal: 10,\n    alignItems: 'center',\n    alignSelf: 'center',\n    paddingBottom: 20\n  },\n  paddingView: {\n    paddingTop: 10\n  },\n  iconContainer: {\n    position: 'absolute',\n    zIndex: 1,\n    right: 0,\n    bottom: 0\n  }\n});\nvar gender_drop_down_data = [{\n  label: 'Male',\n  value: 'male'\n}, {\n  label: 'Female',\n  value: 'female'\n}];\n\nfunction getRandomString(length) {\n  var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var result = '';\n\n  for (var i = 0; i < length; i++) {\n    result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\n  }\n\n  return result;\n}","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/UserSettingScreen.tsx"],"names":["React","useEffect","useState","Button","Text","Input","Avatar","ImagePicker","DocumentPicker","FontAwesome","storage","db","auth","ref","storage_ref","getDownloadURL","uploadBytes","onSnapshot","doc","updateDoc","Dropdown","assetsObject","require","UserSettingScreen","navigation","userIconUri","setUserIconImage","userId","setUserId","UserGender","setGenderValue","UserName","setUserName","UserAge","setUserAge","UserDescription","setUserDescription","uploading","setUploading","submitButtomText","setSubmitButtomText","addressDocUri","setAddressDocUri","uploadingAddress","setUploadingAddress","submitAddressButtomText","setSubmitAddressButtomText","incomeDocUri","setIncomeDocUri","uploadingIncome","setUploadingIncome","submitIncomeButtomText","setSubmitIncomeButtomText","getData","currentUser","uid","console","log","unsub","undefined","data","desc","username","usergender","userAge","pickImageByLibrary","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","maxWidth","maxHeight","quality","result","cancelled","uri","uploadAddressDocument","getDocumentAsync","then","response","type","name","size","mimeType","nameParts","split","fileType","length","fileToUpload","Platform","OS","docName","Date","now","getRandomString","storageRef","Promise","resolve","reject","xhr","XMLHttpRequest","onload","onerror","TypeError","responseType","open","send","blob","snapshot","DownloadURL","catch","error","uploadIncomeDocument","uploadUserImage","uploadUserUpdate","snapshotDownloadURL","imagename","UserRef","lastupdateDate","id","Alert","alert","text","onPress","styles","container","height","width","paddingTop","imagePickerContainer","imageitem","backgroundColor","iconContainer","input","marginBottom","pickerContainer","pickerLabel","gender_drop_down_data","borderRadius","margin","fontSize","marginTop","StyleSheet","create","flex","alignItems","justifyContent","padding","title","fontWeight","separator","marginVertical","paddingHorizontal","color","CardContainer","flexDirection","flexWrap","borderWidth","borderColor","aspectRatio","contentContainer","paddingLeft","Username","Usergender","askbutton","askbuttonContainer","position","left","bottom","alignSelf","paddingBottom","paddingView","zIndex","right","label","value","randomChars","i","charAt","Math","floor","random"],"mappings":"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","sourcesContent":["\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { StyleSheet, View, Image, TouchableOpacity, ScrollView, Platform, Alert } from 'react-native';\r\nimport { Button, ButtonGroup, withTheme, Text, Input, Divider, Avatar } from 'react-native-elements';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as DocumentPicker from \"expo-document-picker\";\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport { storage, db, auth } from \"../firebase\";\r\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\r\nimport { collection, query, where, onSnapshot, doc, updateDoc } from \"firebase/firestore\";\r\n\r\nimport { SettingStackProps } from '../types';\r\nimport Dropdown from '../components/dropdown'\r\nimport { SubmitButton } from '../components/SubmitButton'\r\n\r\nconst assetsObject = require('../assets/asset.tsx')\r\n\r\nexport default function UserSettingScreen({ navigation }: SettingStackProps<'Setting'>) {\r\n  const [userIconUri, setUserIconImage] = useState<string | undefined>('');\r\n  const [userId, setUserId] = useState<string | undefined>('');\r\n  const [UserGender, setGenderValue] = useState<string | undefined>(\"Male\");\r\n  const [UserName, setUserName] = useState<string | undefined>('');\r\n  const [UserAge, setUserAge] = useState<string | undefined>('');\r\n  const [UserDescription, setUserDescription] = useState<string | undefined>('');\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [submitButtomText, setSubmitButtomText] = useState('Submit');\r\n\r\n  const [addressDocUri, setAddressDocUri] = useState('');\r\n  const [uploadingAddress, setUploadingAddress] = useState(false);\r\n  const [submitAddressButtomText, setSubmitAddressButtomText] = useState('Submit Address Prove');\r\n\r\n\r\n  const [incomeDocUri, setIncomeDocUri] = useState('');\r\n  const [uploadingIncome, setUploadingIncome] = useState(false);\r\n  const [submitIncomeButtomText, setSubmitIncomeButtomText] = useState('Submit Income Prove');\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const getData = async () => {\r\n    var userId = auth.currentUser?.uid;\r\n    console.log(\"Get data: userId:\", userId);\r\n    if (!userId) return false;\r\n    const unsub = onSnapshot(doc(db, \"Users\", userId), (doc) => {\r\n      if (doc == undefined) return false;\r\n      if (!doc.data()) return false;\r\n\r\n      if (doc.data()?.desc) setUserDescription(doc.data()?.desc);\r\n      if (doc.data()?.username) setUserName(doc.data()?.username);\r\n      if (doc.data()?.usergender) setGenderValue(doc.data()?.usergender);\r\n      if (doc.data()?.userAge) setUserAge(doc.data()?.userAge);\r\n      if (doc.data()?.userIconUri) setUserIconImage(doc.data()?.userIconUri);\r\n      if (doc.data()?.addressDocUri) {\r\n        setUserIconImage(doc.data()?.addressDocUri)\r\n        setSubmitAddressButtomText(\"Address Prove Submitted\")\r\n      };\r\n      if (doc.data()?.incomeDocUri) {\r\n        setUserIconImage(doc.data()?.incomeDocUri)\r\n        setSubmitIncomeButtomText(\"Income Prove Submitted\")\r\n      };\r\n    });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    setUserId(auth.currentUser?.uid);\r\n    getData()\r\n  }, []);\r\n\r\n  const pickImageByLibrary = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 4],\r\n      maxWidth: 500,\r\n      maxHeight: 500,\r\n      quality: 0.5,\r\n    });\r\n    if (!result.cancelled) {\r\n      setUserIconImage(result.uri);\r\n    }\r\n    console.log('user uploading image: ', userIconUri);\r\n\r\n\r\n  };\r\n\r\n  const uploadAddressDocument = async () => {\r\n    setUploadingAddress(true)\r\n    let result = await DocumentPicker.getDocumentAsync({}).then(async response => {\r\n      if (response.type == 'success') {\r\n        let { name, size, uri, mimeType, type } = response;\r\n        let nameParts = name.split('.');\r\n        let fileType = nameParts[nameParts.length - 1];\r\n        var fileToUpload = {\r\n          name: name,\r\n          type: mimeType,\r\n          size: size,\r\n          uri: Platform.OS === 'ios' ? uri : uri,\r\n        };\r\n        console.log(fileToUpload, '...............file')\r\n        setAddressDocUri(uri);\r\n\r\n        if (uri) {\r\n          const docName = Date.now() + '-' + getRandomString(5) + '-' + userId + fileType;\r\n          const storageRef = storage_ref(storage, 'addressDoc/' + docName);\r\n\r\n          const blob: Blob = await new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onload = function () {\r\n              resolve(xhr.response);\r\n            };\r\n            xhr.onerror = function () {\r\n              reject(new TypeError(\"Network request failed\"));\r\n            };\r\n            xhr.responseType = \"blob\";\r\n            xhr.open(\"GET\", uri, true);\r\n            xhr.send(null);\r\n          });\r\n          const snapshot = await uploadBytes(storageRef, blob);\r\n          var DownloadURL = await getDownloadURL(snapshot.ref);\r\n          setAddressDocUri(DownloadURL);\r\n          console.log('File available at', DownloadURL);\r\n        } else {\r\n          console.log('user no image ', userId);\r\n        }\r\n      }\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n    setSubmitAddressButtomText(\"Address Prove Submitted\")\r\n    setUploadingAddress(false)\r\n  };\r\n\r\n  const uploadIncomeDocument = async () => {\r\n    setUploadingIncome(true)\r\n    let result = await DocumentPicker.getDocumentAsync({}).then(async response => {\r\n      if (response.type == 'success') {\r\n        let { name, size, uri, mimeType, type } = response;\r\n        let nameParts = name.split('.');\r\n        let fileType = nameParts[nameParts.length - 1];\r\n        var fileToUpload = {\r\n          name: name,\r\n          type: mimeType,\r\n          size: size,\r\n          uri: Platform.OS === 'ios' ? uri : uri,\r\n        };\r\n        console.log(fileToUpload, '...............file')\r\n        setIncomeDocUri(uri);\r\n\r\n        if (uri) {\r\n          const docName = Date.now() + '-' + getRandomString(5) + '-' + userId + fileType;\r\n          const storageRef = storage_ref(storage, 'incomeDoc/' + docName);\r\n\r\n          const blob: Blob = await new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onload = function () {\r\n              resolve(xhr.response);\r\n            };\r\n            xhr.onerror = function () {\r\n              reject(new TypeError(\"Network request failed\"));\r\n            };\r\n            xhr.responseType = \"blob\";\r\n            xhr.open(\"GET\", uri, true);\r\n            xhr.send(null);\r\n          });\r\n          const snapshot = await uploadBytes(storageRef, blob);\r\n          var DownloadURL = await getDownloadURL(snapshot.ref);\r\n          setIncomeDocUri(DownloadURL);\r\n          console.log('File available at', DownloadURL);\r\n        } else {\r\n          console.log('user no doc ', userId);\r\n        }\r\n      }\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n    setSubmitIncomeButtomText(\"Income Prove Submitted\")\r\n    setUploadingIncome(false)\r\n  };\r\n\r\n  const uploadUserImage = async () => {\r\n\r\n  }\r\n\r\n  const uploadUserUpdate = async () => {\r\n    setUploading(true)\r\n    //Set User Image\r\n    var snapshotDownloadURL = null\r\n    if (userIconUri) {\r\n      const imagename = Date.now() + '-' + getRandomString(5) + '-' + userId + \".png\";\r\n      const storageRef = storage_ref(storage, 'userIcon/' + imagename);\r\n\r\n      const blob: Blob = await new Promise((resolve, reject) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.onload = function () {\r\n          resolve(xhr.response);\r\n        };\r\n        xhr.onerror = function () {\r\n          reject(new TypeError(\"Network request failed\"));\r\n        };\r\n        xhr.responseType = \"blob\";\r\n        xhr.open(\"GET\", userIconUri, true);\r\n        xhr.send(null);\r\n      });\r\n      const snapshot = await uploadBytes(storageRef, blob);\r\n      snapshotDownloadURL = await getDownloadURL(snapshot.ref);\r\n      setUserIconImage(snapshotDownloadURL);\r\n      console.log('File available at', snapshotDownloadURL);\r\n    } else {\r\n      console.log('user no image ', userId);\r\n    }\r\n    console.log('userIconUri', userIconUri);\r\n    console.log('addressDocUri', addressDocUri);\r\n    console.log('incomeDocUri', incomeDocUri);\r\n    //Set User Doc\r\n    try {\r\n      if (userId) {\r\n        const UserRef = doc(db, 'Users', userId);\r\n        await updateDoc(UserRef, {\r\n          userIconUri: userIconUri,\r\n          username: UserName,\r\n          usergender: UserGender,\r\n          desc: UserDescription,\r\n          lastupdateDate: new Date(),\r\n          userAge: UserAge,\r\n          addressDocUri: addressDocUri,\r\n          incomeDocUri: incomeDocUri,\r\n        });\r\n        console.log(\"Document written with ID: \", UserRef.id);\r\n        Alert.alert(\r\n          \"Done\", \"User Info updated\",\r\n          [\r\n            { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n          ]\r\n        );\r\n      } else {\r\n        console.error(\"userId not found:  \", auth.currentUser);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error adding document:  \", e);\r\n    }\r\n    setUploading(false)\r\n    setSubmitButtomText(\"Submitted\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        <ScrollView showsVerticalScrollIndicator={false}\r\n          showsHorizontalScrollIndicator={false} style={{ height: \"100%\", width: \"100%\", paddingTop: 15 }}>\r\n          <View style={styles.imagePickerContainer}>\r\n            <View style={styles.imageitem}>\r\n              {(userIconUri != \"\" && userIconUri != undefined) ?\r\n                <TouchableOpacity onPress={pickImageByLibrary}>\r\n                  <Avatar\r\n                    size={100}\r\n                    rounded\r\n                    source={{ uri: userIconUri }}\r\n                  />\r\n                </TouchableOpacity> :\r\n                <TouchableOpacity onPress={pickImageByLibrary}>\r\n                  <Avatar\r\n                    size={100}\r\n                    rounded\r\n                    title={UserName ? UserName[0] : \"\"}\r\n                    containerStyle={{ backgroundColor: '#aaaaaa' }}\r\n\r\n                  />\r\n                </TouchableOpacity>\r\n              }\r\n              <View style={styles.iconContainer}>\r\n                <FontAwesome\r\n                  name=\"camera\"\r\n                  size={25}\r\n                  rounded\r\n                  color=\"black\"\r\n                  iconStyle={{ backgroundColor: '#eb1561' }}\r\n                  containerStyle={{ backgroundColor: '#eb1561' }}\r\n                  avatarStyle={{ backgroundColor: '#eb1561' }}\r\n                  overlayContainerStyle={{ backgroundColor: '#eb1561' }}\r\n                  placeholderStyle={{ backgroundColor: '#eb1561' }}\r\n                  onPress={() => { pickImageByLibrary }}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n          </View>\r\n\r\n          <Input style={styles.input} placeholder=\"Charlie\" label='User Name:'\r\n            onChangeText={text => setUserName(text)} containerStyle={{ marginBottom: 20 }} value={UserName} />\r\n          <Input style={styles.input} placeholder=\"0-100\" label='User Age:'\r\n            onChangeText={text => setUserAge(text)} containerStyle={{ marginBottom: 20 }} value={UserAge} />\r\n          <Input style={styles.input} placeholder=\"Descript your User here\" label='User Description:'\r\n            onChangeText={text => setUserDescription(text)} containerStyle={{ marginBottom: 20 }} value={UserDescription}\r\n            numberOfLines={4} multiline={true}\r\n\r\n          />\r\n          <View style={styles.pickerContainer}>\r\n            <Text style={styles.pickerLabel} >User Gender:</Text>\r\n            <Dropdown data={gender_drop_down_data} initvalue={UserGender} />\r\n          </View>\r\n\r\n          <Button title={submitAddressButtomText} onPress={uploadAddressDocument}\r\n            loading={uploadingAddress}\r\n            buttonStyle={{\r\n              backgroundColor: 'rgba(111, 202, 186, 0.5)',\r\n              borderRadius: 5,\r\n              margin: 10,\r\n            }}\r\n            titleStyle={{ fontSize: 12 }} />\r\n          <Button title={submitIncomeButtomText} onPress={uploadIncomeDocument}\r\n            loading={uploadingIncome}\r\n            buttonStyle={{\r\n              backgroundColor: 'rgba(111, 202, 186, 0.5)',\r\n              borderRadius: 5,\r\n              margin: 10,\r\n            }}\r\n            titleStyle={{ fontSize: 12 }} />\r\n\r\n          <Button title={submitButtomText} onPress={uploadUserUpdate}\r\n            loading={uploading}\r\n            buttonStyle={{\r\n              backgroundColor: 'rgba(111, 202, 186, 1)',\r\n              borderRadius: 5,\r\n              margin: 10, marginTop: 30\r\n            }}\r\n            titleStyle={{ fontSize: 12 }} />\r\n        </ScrollView>\r\n      </View >\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    padding: 20,\r\n    backgroundColor: 'white',\r\n    height: \"100%\"\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  separator: {\r\n    marginVertical: 30,\r\n    height: 1,\r\n    width: '80%',\r\n  },\r\n  input: {\r\n    fontSize: 12\r\n  },\r\n  pickerContainer: {\r\n    paddingHorizontal: 10,\r\n    marginBottom: 30\r\n\r\n  },\r\n  pickerLabel: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: 'rgb(134, 147, 158)'\r\n  },\r\n  CardContainer: {\r\n    width: '100%',\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'flex-start', // if you want to fill rows left to right\r\n    borderRadius: 25,\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#dddddd',\r\n    marginVertical: 15,\r\n  },\r\n  imageitem: {\r\n    aspectRatio: 0.95,\r\n    borderRadius: 25,\r\n    fontSize: 12,\r\n\r\n  },\r\n  contentContainer: {\r\n    width: '50%',\r\n    height: '100%',\r\n    paddingLeft: 10,\r\n    flex: 1,\r\n  },\r\n  Username: {\r\n    fontWeight: 'bold',\r\n    fontSize: 20\r\n  },\r\n  Usergender: {\r\n    fontSize: 10,\r\n    marginBottom: 12,\r\n    fontWeight: 'bold',\r\n    color: '#888888'\r\n  },\r\n  desc: {\r\n    fontSize: 10,\r\n    color: '#999999'\r\n  },\r\n  askbutton: {\r\n    backgroundColor: '#0b9298',\r\n    borderRadius: 5,\r\n    paddingHorizontal: 15\r\n  },\r\n  askbuttonContainer: {\r\n    position: 'absolute',\r\n    left: 10,\r\n    bottom: 0,\r\n  },\r\n  imagePickerContainer: {\r\n    flexDirection: 'column',\r\n    paddingHorizontal: 10,\r\n    alignItems: 'center',\r\n    alignSelf: 'center',\r\n    paddingBottom: 20\r\n  },\r\n  paddingView: {\r\n    paddingTop: 10\r\n  },\r\n  iconContainer: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    right: 0,\r\n    bottom: 0\r\n  },\r\n});\r\n\r\nconst gender_drop_down_data = [\r\n  { label: 'Male', value: 'male' },\r\n  { label: 'Female', value: 'female' }\r\n];\r\n\r\nfunction getRandomString(length: number) {\r\n  var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  var result = '';\r\n  for (var i = 0; i < length; i++) {\r\n    result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\r\n  }\r\n  return result;\r\n}"]},"metadata":{},"sourceType":"module"}