{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Button, ButtonGroup, Text, Input, Dialog } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport { storage, db, auth } from \"../firebase\";\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function CreateSocialMediaPostScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      uploading = _useState2[0],\n      setUploading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      submitted = _useState4[0],\n      setSubmitted = _useState4[1];\n\n  var _useState5 = useState(2),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedButtonIndex = _useState6[0],\n      setSelectedButtonIndex = _useState6[1];\n\n  var _useState7 = useState('Submit'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      submitButtomText = _useState8[0],\n      setSubmitButtomText = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userId = _useState10[0],\n      setUserId = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      uploadingImage = _useState12[0],\n      setUploadingImage = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      imagepath = _useState14[0],\n      setImage = _useState14[1];\n\n  var _useState15 = useState(\"Male\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      petGender = _useState16[0],\n      setGenderValue = _useState16[1];\n\n  var _useState17 = useState(\"Kid\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      petStage = _useState18[0],\n      setStageValue = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      petName = _useState20[0],\n      setPetName = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      petType = _useState22[0],\n      setPetType = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      petAge = _useState24[0],\n      setPetAge = _useState24[1];\n\n  var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      petDescription = _useState26[0],\n      setPetDescription = _useState26[1];\n\n  var _useState27 = useState(''),\n      _useState28 = _slicedToArray(_useState27, 2),\n      sterilisation = _useState28[0],\n      setSterilisation = _useState28[1];\n\n  var _useState29 = useState(''),\n      _useState30 = _slicedToArray(_useState29, 2),\n      vaccinated = _useState30[0],\n      setVaccinated = _useState30[1];\n\n  var _useState31 = useState(''),\n      _useState32 = _slicedToArray(_useState31, 2),\n      hvAddressProve = _useState32[0],\n      setHvAddressProve = _useState32[1];\n\n  var _useState33 = useState(''),\n      _useState34 = _slicedToArray(_useState33, 2),\n      hvIncomeProve = _useState34[0],\n      setHvIncomeProve = _useState34[1];\n\n  var _useState35 = useState(''),\n      _useState36 = _slicedToArray(_useState35, 2),\n      totalIncome = _useState36[0],\n      setTotalIncome = _useState36[1];\n\n  var _useState37 = useState(''),\n      _useState38 = _slicedToArray(_useState37, 2),\n      apartmentType = _useState38[0],\n      setApartmentType = _useState38[1];\n\n  var _useState39 = useState(''),\n      _useState40 = _slicedToArray(_useState39, 2),\n      apartmentSize = _useState40[0],\n      setApartmentSize = _useState40[1];\n\n  var _useState41 = useState(''),\n      _useState42 = _slicedToArray(_useState41, 2),\n      hvExperience = _useState42[0],\n      setHvExperience = _useState42[1];\n\n  var _useState43 = useState(''),\n      _useState44 = _slicedToArray(_useState43, 2),\n      hvWindowScreen = _useState44[0],\n      setHvWindowScreen = _useState44[1];\n\n  var _useState45 = useState(''),\n      _useState46 = _slicedToArray(_useState45, 2),\n      numOfOtherPet = _useState46[0],\n      setNumOfOtherPet = _useState46[1];\n\n  var _useState47 = useState(''),\n      _useState48 = _slicedToArray(_useState47, 2),\n      otherPetDescription = _useState48[0],\n      setOtherPetDescription = _useState48[1];\n\n  var _useState49 = useState(''),\n      _useState50 = _slicedToArray(_useState49, 2),\n      hvSmoker = _useState50[0],\n      setHvSmoker = _useState50[1];\n\n  var _useState51 = useState(''),\n      _useState52 = _slicedToArray(_useState51, 2),\n      hvRespiratoryDiseases = _useState52[0],\n      setHvRespiratoryDiseases = _useState52[1];\n\n  var _useState53 = useState(''),\n      _useState54 = _slicedToArray(_useState53, 2),\n      hvAllergySymptoms = _useState54[0],\n      setHvAllergySymptoms = _useState54[1];\n\n  var pickImageByLibrary = function pickImageByLibrary() {\n    var pickerResult, snapshotDownloadURL, _ref2, uri, imagename, storageRef, blob, snapshot;\n\n    return _regeneratorRuntime.async(function pickImageByLibrary$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 4],\n              quality: 1,\n              maxWidth: 720,\n              maxHeight: 720\n            }));\n\n          case 2:\n            pickerResult = _context.sent;\n\n            if (pickerResult.cancelled) {\n              _context.next = 20;\n              break;\n            }\n\n            setUploadingImage(true);\n            snapshotDownloadURL = null;\n            _ref2 = pickerResult, uri = _ref2.uri;\n            imagename = Date.now() + \"-\" + getRandomString(5) + userId + 'petImage.png';\n            storageRef = storage_ref(storage, 'petImages/' + imagename);\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n              var xhr = new XMLHttpRequest();\n\n              xhr.onload = function () {\n                resolve(xhr.response);\n              };\n\n              xhr.onerror = function () {\n                reject(new TypeError(\"Network request failed\"));\n              };\n\n              xhr.responseType = \"blob\";\n              xhr.open(\"GET\", uri, true);\n              xhr.send(null);\n            }));\n\n          case 11:\n            blob = _context.sent;\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(uploadBytes(storageRef, blob));\n\n          case 14:\n            snapshot = _context.sent;\n            _context.next = 17;\n            return _regeneratorRuntime.awrap(getDownloadURL(snapshot.ref));\n\n          case 17:\n            snapshotDownloadURL = _context.sent;\n            setImage(snapshotDownloadURL);\n            console.log('File available at', snapshotDownloadURL);\n\n          case 20:\n            setUploadingImage(false);\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadPost = function uploadPost() {\n    var _auth$currentUser;\n\n    var userId, docRef;\n    return _regeneratorRuntime.async(function uploadPost$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setUploading(true);\n            userId = (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid;\n            console.log(\"auth.currentUser?.uid: \", userId);\n            _context2.prev = 3;\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(addDoc(collection(db, \"PetPost\"), {\n              createdate: new Date(),\n              postcreator: userId,\n              imagepath: imagepath,\n              petname: petName,\n              petgender: petGender,\n              petAge: petAge,\n              petType: petType,\n              petstages: petStage,\n              desc: petDescription,\n              sterilisation: sterilisation,\n              vaccinated: vaccinated,\n              hvAddressProve: hvAddressProve,\n              hvIncomeProve: hvIncomeProve,\n              totalIncome: totalIncome,\n              apartmentType: apartmentType,\n              apartmentSize: apartmentSize,\n              hvExperience: hvExperience,\n              hvWindowScreen: hvWindowScreen,\n              numOfOtherPet: numOfOtherPet,\n              otherPetDescription: otherPetDescription,\n              hvSmoker: hvSmoker,\n              hvRespiratoryDiseases: hvRespiratoryDiseases,\n              hvAllergySymptoms: hvAllergySymptoms\n            }));\n\n          case 6:\n            docRef = _context2.sent;\n            console.log(\"Document written with ID: \", docRef.id);\n            _context2.next = 13;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](3);\n            console.error(\"Error adding document:  \", _context2.t0);\n\n          case 13:\n            setSubmitted(true);\n            setUploading(false);\n            setSubmitButtomText(\"Submitted\");\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[3, 10]], Promise);\n  };\n\n  useEffect(function () {\n    var _auth$currentUser2;\n\n    setUserId((_auth$currentUser2 = auth.currentUser) == null ? void 0 : _auth$currentUser2.uid);\n  }, []);\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        showsHorizontalScrollIndicator: false,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: [_jsx(Text, {\n          h4: true,\n          style: {\n            marginLeft: 10,\n            marginBottom: 30,\n            color: '#0b9298',\n            fontWeight: 'bold'\n          },\n          children: \"Pet Information: \"\n        }), _jsxs(View, {\n          style: styles.imagePickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Pet Image: \"\n          }), _jsx(View, {\n            style: styles.paddingView\n          }), imagepath != \"\" && _jsx(TouchableOpacity, {\n            onPress: pickImageByLibrary,\n            children: _jsx(Image, {\n              style: styles.imageitem,\n              source: {\n                uri: imagepath\n              }\n            })\n          }), _jsx(ButtonGroup, {\n            buttons: ['Select an image'],\n            selectedIndex: selectedButtonIndex,\n            onPress: function onPress(value) {\n              pickImageByLibrary();\n            },\n            containerStyle: {\n              marginBottom: 20\n            }\n          })]\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"Write something here\",\n          label: \"Caption:\",\n          onChangeText: function onChangeText(text) {\n            return setPetDescription(text);\n          },\n          labelStyle: {\n            fontSize: 10\n          },\n          containerStyle: {\n            marginBottom: 20\n          },\n          multiline: true,\n          numberOfLines: 4\n        }), _jsx(Button, {\n          title: submitButtomText,\n          onPress: uploadPost,\n          loading: uploading,\n          disabled: submitted,\n          buttonStyle: {\n            backgroundColor: 'rgba(111, 202, 186, 1)',\n            borderRadius: 5,\n            margin: 10,\n            marginTop: 30\n          },\n          titleStyle: {\n            fontSize: 12\n          }\n        })]\n      }), _jsxs(Dialog, {\n        isVisible: uploadingImage,\n        children: [_jsx(Text, {\n          children: \"Uploading Icon Image, Please Wait\"\n        }), _jsx(Dialog.Loading, {})]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 10,\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  input: {\n    fontSize: 16\n  },\n  pickerContainer: {\n    paddingHorizontal: 10,\n    marginBottom: 30\n  },\n  pickerLabel: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    color: 'rgb(134, 147, 158)'\n  },\n  CardContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: 200,\n    borderRadius: 25,\n    fontSize: 12\n  },\n  contentContainer: {\n    width: '50%',\n    height: '100%',\n    paddingLeft: 10,\n    flex: 1\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  petgender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  desc: {\n    fontSize: 10,\n    color: '#999999'\n  },\n  askbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  askbuttonContainer: {\n    position: 'absolute',\n    left: 10,\n    bottom: 0\n  },\n  imagePickerContainer: {\n    flexDirection: 'column',\n    paddingHorizontal: 10\n  },\n  paddingView: {\n    paddingTop: 10\n  }\n});\n\nfunction getRandomString(length) {\n  var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var result = '';\n\n  for (var i = 0; i < length; i++) {\n    result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\n  }\n\n  return result;\n}","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/CreateSocialMediaPostScreen.tsx"],"names":["React","useEffect","useState","Button","ButtonGroup","Text","Input","Dialog","ImagePicker","storage","db","auth","ref","storage_ref","getDownloadURL","uploadBytes","collection","addDoc","CreateSocialMediaPostScreen","navigation","uploading","setUploading","submitted","setSubmitted","selectedButtonIndex","setSelectedButtonIndex","submitButtomText","setSubmitButtomText","userId","setUserId","uploadingImage","setUploadingImage","imagepath","setImage","petGender","setGenderValue","petStage","setStageValue","petName","setPetName","petType","setPetType","petAge","setPetAge","petDescription","setPetDescription","sterilisation","setSterilisation","vaccinated","setVaccinated","hvAddressProve","setHvAddressProve","hvIncomeProve","setHvIncomeProve","totalIncome","setTotalIncome","apartmentType","setApartmentType","apartmentSize","setApartmentSize","hvExperience","setHvExperience","hvWindowScreen","setHvWindowScreen","numOfOtherPet","setNumOfOtherPet","otherPetDescription","setOtherPetDescription","hvSmoker","setHvSmoker","hvRespiratoryDiseases","setHvRespiratoryDiseases","hvAllergySymptoms","setHvAllergySymptoms","pickImageByLibrary","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","maxWidth","maxHeight","pickerResult","cancelled","snapshotDownloadURL","uri","imagename","Date","now","getRandomString","storageRef","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","TypeError","responseType","open","send","blob","snapshot","console","log","uploadPost","currentUser","uid","createdate","postcreator","petname","petgender","petstages","desc","docRef","id","error","styles","container","height","width","marginLeft","marginBottom","color","fontWeight","imagePickerContainer","pickerLabel","paddingView","imageitem","value","input","text","fontSize","backgroundColor","borderRadius","margin","marginTop","StyleSheet","create","flex","alignItems","justifyContent","padding","title","separator","marginVertical","pickerContainer","paddingHorizontal","CardContainer","flexDirection","flexWrap","borderWidth","borderColor","aspectRatio","contentContainer","paddingLeft","askbutton","askbuttonContainer","position","left","bottom","paddingTop","length","randomChars","result","i","charAt","Math","floor","random"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState, useContext } from 'react';\nimport { StyleSheet, View, Image, TouchableOpacity, ScrollView, Platform, TextInput } from 'react-native';\nimport { Button, ButtonGroup, withTheme, Text, Input, Divider, Dialog } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\n\nimport { storage, db, auth } from \"../firebase\";\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { collection, query, where, onSnapshot, getDocs, addDoc } from \"firebase/firestore\";\n\nimport { SettingStackProps, petPostDataProps, ImageInfo } from '../types';\nimport Dropdown from '../components/dropdown'\nimport {\n  assetsObject, gender_drop_down_data, pet_type_drop_down_data, pet_stage_drop_down_data,\n  boolean_drop_down_data, apartment_type_drop_down_data\n} from '../assets/asset';\n\n\nexport default function CreateSocialMediaPostScreen({ navigation }: SettingStackProps<'Setting'>) {\n  const [uploading, setUploading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [selectedButtonIndex, setSelectedButtonIndex] = useState(2);\n  const [submitButtomText, setSubmitButtomText] = useState('Submit');\n  const [userId, setUserId] = useState<string | undefined>('');\n  const [uploadingImage, setUploadingImage] = useState(false);\n\n  const [imagepath, setImage] = useState(\"\");\n  const [petGender, setGenderValue] = useState<number | string>(\"Male\");\n  const [petStage, setStageValue] = useState<number | string>(\"Kid\");\n  const [petName, setPetName] = useState('');\n  const [petType, setPetType] = useState('');\n  const [petAge, setPetAge] = useState<number | string>('');\n  const [petDescription, setPetDescription] = useState('');\n\n  const [sterilisation, setSterilisation] = useState('');\n  const [vaccinated, setVaccinated] = useState('');\n  const [hvAddressProve, setHvAddressProve] = useState('');\n  const [hvIncomeProve, setHvIncomeProve] = useState('');\n  const [totalIncome, setTotalIncome] = useState('');\n  const [apartmentType, setApartmentType] = useState('');\n  const [apartmentSize, setApartmentSize] = useState('');\n  const [hvExperience, setHvExperience] = useState('');\n  const [hvWindowScreen, setHvWindowScreen] = useState('');\n  const [numOfOtherPet, setNumOfOtherPet] = useState('');\n  const [otherPetDescription, setOtherPetDescription] = useState('');\n  const [hvSmoker, setHvSmoker] = useState('');\n  const [hvRespiratoryDiseases, setHvRespiratoryDiseases] = useState('');\n  const [hvAllergySymptoms, setHvAllergySymptoms] = useState('');\n\n  //const [familySize, setPetName] = useState('');\n\n\n  const pickImageByLibrary = async () => {\n    let pickerResult = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 4],\n      quality: 1,\n      maxWidth: 720,\n      maxHeight: 720\n    });\n    if (!pickerResult.cancelled) {\n      setUploadingImage(true);\n      var snapshotDownloadURL = null;\n      const { uri } = pickerResult as ImageInfo\n      const imagename = Date.now() + \"-\" + getRandomString(5) + userId + 'petImage.png'\n      const storageRef = storage_ref(storage, 'petImages/' + imagename);\n\n      const blob: Blob = await new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.onload = function () {\n          resolve(xhr.response);\n        };\n        xhr.onerror = function () {\n          reject(new TypeError(\"Network request failed\"));\n        };\n        xhr.responseType = \"blob\";\n        xhr.open(\"GET\", uri, true);\n        xhr.send(null);\n      });\n      const snapshot = await uploadBytes(storageRef, blob);\n      snapshotDownloadURL = await getDownloadURL(snapshot.ref);\n      setImage(snapshotDownloadURL);\n      console.log('File available at', snapshotDownloadURL);\n    }\n    setUploadingImage(false);\n\n  };\n\n\n  const uploadPost = async () => {\n    setUploading(true);\n\n    const userId = auth.currentUser?.uid;\n    console.log(\"auth.currentUser?.uid: \", userId)\n\n    try {\n      const docRef = await addDoc(collection(db, \"PetPost\"), {\n        createdate: new Date(),\n        postcreator: userId,\n\n        imagepath: imagepath,\n        petname: petName,\n        petgender: petGender,\n        petAge: petAge,\n        petType: petType,\n        petstages: petStage,\n        desc: petDescription,\n        sterilisation: sterilisation,\n        vaccinated: vaccinated,\n\n        hvAddressProve: hvAddressProve,\n        hvIncomeProve: hvIncomeProve,\n        totalIncome: totalIncome,\n        apartmentType: apartmentType,\n        apartmentSize: apartmentSize,\n        hvExperience: hvExperience,\n        hvWindowScreen: hvWindowScreen,\n        numOfOtherPet: numOfOtherPet,\n        otherPetDescription: otherPetDescription,\n        hvSmoker: hvSmoker,\n        hvRespiratoryDiseases: hvRespiratoryDiseases,\n        hvAllergySymptoms: hvAllergySymptoms\n\n\n      });\n      console.log(\"Document written with ID: \", docRef.id);\n    } catch (e) {\n      console.error(\"Error adding document:  \", e);\n    }\n\n    setSubmitted(true)\n    setUploading(false)\n    setSubmitButtomText(\"Submitted\")\n  }\n\n  useEffect(() => {\n    setUserId(auth.currentUser?.uid);\n  }, []);\n  return (\n    <>\n      <View style={styles.container}>\n        <ScrollView showsVerticalScrollIndicator={false}\n          showsHorizontalScrollIndicator={false}\n          style={{ height: \"100%\", width: \"100%\" }}>\n          <Text h4 style={{ marginLeft: 10, marginBottom: 30, color: '#0b9298', fontWeight: 'bold' }}>Pet Information: </Text>\n          <View style={styles.imagePickerContainer}>\n            <Text style={styles.pickerLabel} >Pet Image: </Text>\n            <View style={styles.paddingView} />\n            {imagepath != \"\" &&\n              <TouchableOpacity onPress={pickImageByLibrary}>\n                <Image style={styles.imageitem}\n                  source={{ uri: imagepath }}\n                />\n              </TouchableOpacity>\n            }\n            <ButtonGroup\n              buttons={['Select an image']}\n              selectedIndex={selectedButtonIndex}\n              onPress={(value) => {\n                pickImageByLibrary();\n              }}\n              containerStyle={{ marginBottom: 20 }}\n            />\n          </View>\n          <Input style={styles.input} placeholder=\"Write something here\" label='Caption:'\n            onChangeText={text => setPetDescription(text)} labelStyle={{ fontSize: 10 }}\n            containerStyle={{ marginBottom: 20 }}\n            multiline={true}\n            numberOfLines={4} />\n\n          <Button title={submitButtomText} onPress={uploadPost}\n            loading={uploading}\n            disabled={submitted}\n            buttonStyle={{\n              backgroundColor: 'rgba(111, 202, 186, 1)',\n              borderRadius: 5,\n              margin: 10, marginTop: 30\n            }}\n\n            titleStyle={{ fontSize: 12 }} />\n        </ScrollView>\n\n        <Dialog isVisible={uploadingImage}>\n          <Text>Uploading Icon Image, Please Wait</Text>\n          <Dialog.Loading />\n        </Dialog>\n      </View >\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 10,\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  input: {\n    fontSize: 16\n  },\n  pickerContainer: {\n    paddingHorizontal: 10,\n    marginBottom: 30\n\n  },\n  pickerLabel: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    color: 'rgb(134, 147, 158)'\n  },\n  CardContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start', // if you want to fill rows left to right\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15,\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: 200,\n    borderRadius: 25,\n    fontSize: 12\n  },\n  contentContainer: {\n    width: '50%',\n    height: '100%',\n    paddingLeft: 10,\n    flex: 1,\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  petgender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  desc: {\n    fontSize: 10,\n    color: '#999999'\n  },\n  askbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  askbuttonContainer: {\n    position: 'absolute',\n    left: 10,\n    bottom: 0,\n  },\n  imagePickerContainer: {\n    flexDirection: 'column',\n    paddingHorizontal: 10\n  },\n  paddingView: {\n    paddingTop: 10\n  }\n});\n\nfunction getRandomString(length: number) {\n  var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var result = '';\n  for (var i = 0; i < length; i++) {\n    result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\n  }\n  return result;\n}"]},"metadata":{},"sourceType":"module"}