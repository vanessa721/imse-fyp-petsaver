{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Button, Text, Input, Avatar, Dialog } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as DocumentPicker from \"expo-document-picker\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { storage, db, auth } from \"../firebase\";\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { onSnapshot, doc, updateDoc } from \"firebase/firestore\";\nimport Dropdown from \"../components/dropdown\";\nimport { gender_drop_down_data, boolean_drop_down_data, apartment_type_drop_down_data } from \"../assets/asset\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function UserSettingScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userIconUri = _useState2[0],\n      setUserIconImage = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userId = _useState4[0],\n      setUserId = _useState4[1];\n\n  var _useState5 = useState(\"Male\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      UserGender = _useState6[0],\n      setGenderValue = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      UserName = _useState8[0],\n      setUserName = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      UserAge = _useState10[0],\n      setUserAge = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      UserDescription = _useState12[0],\n      setUserDescription = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      uploadingImage = _useState14[0],\n      setUploadingImage = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      uploading = _useState16[0],\n      setUploading = _useState16[1];\n\n  var _useState17 = useState('Submit'),\n      _useState18 = _slicedToArray(_useState17, 2),\n      submitButtomText = _useState18[0],\n      setSubmitButtomText = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      addressDocUri = _useState20[0],\n      setAddressDocUri = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      uploadingAddress = _useState22[0],\n      setUploadingAddress = _useState22[1];\n\n  var _useState23 = useState('Submit Address Prove'),\n      _useState24 = _slicedToArray(_useState23, 2),\n      submitAddressButtomText = _useState24[0],\n      setSubmitAddressButtomText = _useState24[1];\n\n  var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      incomeDocUri = _useState26[0],\n      setIncomeDocUri = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      uploadingIncome = _useState28[0],\n      setUploadingIncome = _useState28[1];\n\n  var _useState29 = useState('Submit Income Prove'),\n      _useState30 = _slicedToArray(_useState29, 2),\n      submitIncomeButtomText = _useState30[0],\n      setSubmitIncomeButtomText = _useState30[1];\n\n  var _useState31 = useState(''),\n      _useState32 = _slicedToArray(_useState31, 2),\n      sterilisation = _useState32[0],\n      setSterilisation = _useState32[1];\n\n  var _useState33 = useState(''),\n      _useState34 = _slicedToArray(_useState33, 2),\n      vaccinated = _useState34[0],\n      setVaccinated = _useState34[1];\n\n  var _useState35 = useState(''),\n      _useState36 = _slicedToArray(_useState35, 2),\n      hvAddressProve = _useState36[0],\n      setHvAddressProve = _useState36[1];\n\n  var _useState37 = useState(''),\n      _useState38 = _slicedToArray(_useState37, 2),\n      hvIncomeProve = _useState38[0],\n      setHvIncomeProve = _useState38[1];\n\n  var _useState39 = useState(''),\n      _useState40 = _slicedToArray(_useState39, 2),\n      totalIncome = _useState40[0],\n      setTotalIncome = _useState40[1];\n\n  var _useState41 = useState(''),\n      _useState42 = _slicedToArray(_useState41, 2),\n      apartmentType = _useState42[0],\n      setApartmentType = _useState42[1];\n\n  var _useState43 = useState(''),\n      _useState44 = _slicedToArray(_useState43, 2),\n      apartmentSize = _useState44[0],\n      setApartmentSize = _useState44[1];\n\n  var _useState45 = useState(''),\n      _useState46 = _slicedToArray(_useState45, 2),\n      hvExperience = _useState46[0],\n      setHvExperience = _useState46[1];\n\n  var _useState47 = useState(''),\n      _useState48 = _slicedToArray(_useState47, 2),\n      hvWindowScreen = _useState48[0],\n      setHvWindowScreen = _useState48[1];\n\n  var _useState49 = useState(''),\n      _useState50 = _slicedToArray(_useState49, 2),\n      numOfOtherPet = _useState50[0],\n      setNumOfOtherPet = _useState50[1];\n\n  var _useState51 = useState(''),\n      _useState52 = _slicedToArray(_useState51, 2),\n      otherPetDescription = _useState52[0],\n      setOtherPetDescription = _useState52[1];\n\n  var _useState53 = useState(''),\n      _useState54 = _slicedToArray(_useState53, 2),\n      hvSmoker = _useState54[0],\n      setHvSmoker = _useState54[1];\n\n  var _useState55 = useState(''),\n      _useState56 = _slicedToArray(_useState55, 2),\n      hvRespiratoryDiseases = _useState56[0],\n      setHvRespiratoryDiseases = _useState56[1];\n\n  var _useState57 = useState(''),\n      _useState58 = _slicedToArray(_useState57, 2),\n      hvAllergySymptoms = _useState58[0],\n      setHvAllergySymptoms = _useState58[1];\n\n  var getData = function getData() {\n    var _auth$currentUser;\n\n    var userId, unsub;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            userId = (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid;\n            console.log(\"Get data: userId:\", userId);\n\n            if (userId) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 4:\n            unsub = onSnapshot(doc(db, \"Users\", userId), function (doc) {\n              var _doc$data, _doc$data2, _doc$data3, _doc$data4, _doc$data5, _doc$data6, _doc$data7, _doc$data8, _doc$data9, _doc$data10, _doc$data11, _doc$data13, _doc$data15, _doc$data16, _doc$data17, _doc$data18, _doc$data19, _doc$data20, _doc$data21, _doc$data22, _doc$data23, _doc$data24, _doc$data25, _doc$data26, _doc$data27, _doc$data28, _doc$data29, _doc$data30, _doc$data31, _doc$data32, _doc$data33, _doc$data34;\n\n              if (doc == undefined) return false;\n              if (!doc.data()) return false;\n              if ((_doc$data = doc.data()) != null && _doc$data.desc) setUserDescription((_doc$data2 = doc.data()) == null ? void 0 : _doc$data2.desc);\n              if ((_doc$data3 = doc.data()) != null && _doc$data3.username) setUserName((_doc$data4 = doc.data()) == null ? void 0 : _doc$data4.username);\n              if ((_doc$data5 = doc.data()) != null && _doc$data5.usergender) setGenderValue((_doc$data6 = doc.data()) == null ? void 0 : _doc$data6.usergender);\n              if ((_doc$data7 = doc.data()) != null && _doc$data7.userAge) setUserAge((_doc$data8 = doc.data()) == null ? void 0 : _doc$data8.userAge);\n              if ((_doc$data9 = doc.data()) != null && _doc$data9.userIconUri) setUserIconImage((_doc$data10 = doc.data()) == null ? void 0 : _doc$data10.userIconUri);\n\n              if ((_doc$data11 = doc.data()) != null && _doc$data11.addressDocUri) {\n                var _doc$data12;\n\n                setAddressDocUri((_doc$data12 = doc.data()) == null ? void 0 : _doc$data12.addressDocUri);\n                setSubmitAddressButtomText(\"Address Prove Submitted\");\n              }\n\n              ;\n\n              if ((_doc$data13 = doc.data()) != null && _doc$data13.incomeDocUri) {\n                var _doc$data14;\n\n                setIncomeDocUri((_doc$data14 = doc.data()) == null ? void 0 : _doc$data14.incomeDocUri);\n                setSubmitIncomeButtomText(\"Income Prove Submitted\");\n              }\n\n              ;\n              if ((_doc$data15 = doc.data()) != null && _doc$data15.totalIncome) setTotalIncome((_doc$data16 = doc.data()) == null ? void 0 : _doc$data16.totalIncome);\n              if ((_doc$data17 = doc.data()) != null && _doc$data17.apartmentType) setApartmentType((_doc$data18 = doc.data()) == null ? void 0 : _doc$data18.apartmentType);\n              if ((_doc$data19 = doc.data()) != null && _doc$data19.apartmentSize) setApartmentSize((_doc$data20 = doc.data()) == null ? void 0 : _doc$data20.apartmentSize);\n              if ((_doc$data21 = doc.data()) != null && _doc$data21.hvExperience) setHvExperience((_doc$data22 = doc.data()) == null ? void 0 : _doc$data22.hvExperience);\n              if ((_doc$data23 = doc.data()) != null && _doc$data23.hvWindowScreen) setHvWindowScreen((_doc$data24 = doc.data()) == null ? void 0 : _doc$data24.hvWindowScreen);\n              if ((_doc$data25 = doc.data()) != null && _doc$data25.numOfOtherPet) setNumOfOtherPet((_doc$data26 = doc.data()) == null ? void 0 : _doc$data26.numOfOtherPet);\n              if ((_doc$data27 = doc.data()) != null && _doc$data27.otherPetDescription) setOtherPetDescription((_doc$data28 = doc.data()) == null ? void 0 : _doc$data28.otherPetDescription);\n              if ((_doc$data29 = doc.data()) != null && _doc$data29.hvSmoker) setHvSmoker((_doc$data30 = doc.data()) == null ? void 0 : _doc$data30.hvSmoker);\n              if ((_doc$data31 = doc.data()) != null && _doc$data31.hvAllergySymptoms) setHvRespiratoryDiseases((_doc$data32 = doc.data()) == null ? void 0 : _doc$data32.hvAllergySymptoms);\n              if ((_doc$data33 = doc.data()) != null && _doc$data33.hvRespiratoryDiseases) setHvAllergySymptoms((_doc$data34 = doc.data()) == null ? void 0 : _doc$data34.hvRespiratoryDiseases);\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    var _auth$currentUser2;\n\n    setUserId((_auth$currentUser2 = auth.currentUser) == null ? void 0 : _auth$currentUser2.uid);\n    getData();\n  }, []);\n\n  var pickImageByLibrary = function pickImageByLibrary() {\n    var pickerResult, _ref2, uri, userIconDownloadURL, imagename, storageRef, blob, snapshot;\n\n    return _regeneratorRuntime.async(function pickImageByLibrary$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [1, 1],\n              maxWidth: 500,\n              maxHeight: 500,\n              quality: 0.5\n            }));\n\n          case 2:\n            pickerResult = _context2.sent;\n\n            if (pickerResult.cancelled) {\n              _context2.next = 24;\n              break;\n            }\n\n            setUploadingImage(true);\n            _ref2 = pickerResult, uri = _ref2.uri;\n            userIconDownloadURL = null;\n\n            if (!uri) {\n              _context2.next = 23;\n              break;\n            }\n\n            imagename = userId + \"_icon.png\";\n            storageRef = storage_ref(storage, 'userIcon/' + imagename);\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n              var xhr = new XMLHttpRequest();\n\n              xhr.onload = function () {\n                resolve(xhr.response);\n              };\n\n              xhr.onerror = function () {\n                reject(new TypeError(\"Network request failed\"));\n              };\n\n              xhr.responseType = \"blob\";\n              xhr.open(\"GET\", uri, true);\n              xhr.send(null);\n            }));\n\n          case 12:\n            blob = _context2.sent;\n            _context2.next = 15;\n            return _regeneratorRuntime.awrap(uploadBytes(storageRef, blob));\n\n          case 15:\n            snapshot = _context2.sent;\n            _context2.next = 18;\n            return _regeneratorRuntime.awrap(getDownloadURL(snapshot.ref));\n\n          case 18:\n            userIconDownloadURL = _context2.sent;\n            setUserIconImage(userIconDownloadURL);\n            console.log('File available at', userIconDownloadURL);\n            _context2.next = 24;\n            break;\n\n          case 23:\n            console.log('user no image ', userId);\n\n          case 24:\n            console.log('user uploading image: ', userIconUri);\n            setUploadingImage(false);\n\n          case 26:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadAddressDocument = function uploadAddressDocument() {\n    var result;\n    return _regeneratorRuntime.async(function uploadAddressDocument$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            setUploadingAddress(true);\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(DocumentPicker.getDocumentAsync({}).then(function _callee(response) {\n              var name, size, uri, mimeType, type, nameParts, fileType, fileToUpload, docName, storageRef, blob, snapshot, DownloadURL;\n              return _regeneratorRuntime.async(function _callee$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      if (!(response.type == 'success')) {\n                        _context3.next = 24;\n                        break;\n                      }\n\n                      name = response.name, size = response.size, uri = response.uri, mimeType = response.mimeType, type = response.type;\n                      nameParts = name.split('.');\n                      fileType = nameParts[nameParts.length - 1];\n                      fileToUpload = {\n                        name: name,\n                        type: mimeType,\n                        size: size,\n                        uri: Platform.OS === 'ios' ? uri : uri\n                      };\n                      console.log(fileToUpload, '...............file');\n                      setAddressDocUri(uri);\n\n                      if (!uri) {\n                        _context3.next = 23;\n                        break;\n                      }\n\n                      docName = userId + '_addressDoc.' + fileType;\n                      storageRef = storage_ref(storage, 'addressDoc/' + docName);\n                      _context3.next = 12;\n                      return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n                        var xhr = new XMLHttpRequest();\n\n                        xhr.onload = function () {\n                          resolve(xhr.response);\n                        };\n\n                        xhr.onerror = function () {\n                          reject(new TypeError(\"Network request failed\"));\n                        };\n\n                        xhr.responseType = \"blob\";\n                        xhr.open(\"GET\", uri, true);\n                        xhr.send(null);\n                      }));\n\n                    case 12:\n                      blob = _context3.sent;\n                      _context3.next = 15;\n                      return _regeneratorRuntime.awrap(uploadBytes(storageRef, blob));\n\n                    case 15:\n                      snapshot = _context3.sent;\n                      _context3.next = 18;\n                      return _regeneratorRuntime.awrap(getDownloadURL(snapshot.ref));\n\n                    case 18:\n                      DownloadURL = _context3.sent;\n                      setAddressDocUri(DownloadURL);\n                      console.log('File available at', DownloadURL);\n                      _context3.next = 24;\n                      break;\n\n                    case 23:\n                      console.log('user no image ', userId);\n\n                    case 24:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 3:\n            result = _context4.sent;\n            setSubmitAddressButtomText(\"Address Prove Submitted\");\n            setUploadingAddress(false);\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadIncomeDocument = function uploadIncomeDocument() {\n    var result;\n    return _regeneratorRuntime.async(function uploadIncomeDocument$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            setUploadingIncome(true);\n            _context6.next = 3;\n            return _regeneratorRuntime.awrap(DocumentPicker.getDocumentAsync({}).then(function _callee2(response) {\n              var name, size, uri, mimeType, type, nameParts, fileType, fileToUpload, docName, storageRef, blob, snapshot, DownloadURL;\n              return _regeneratorRuntime.async(function _callee2$(_context5) {\n                while (1) {\n                  switch (_context5.prev = _context5.next) {\n                    case 0:\n                      if (!(response.type == 'success')) {\n                        _context5.next = 24;\n                        break;\n                      }\n\n                      name = response.name, size = response.size, uri = response.uri, mimeType = response.mimeType, type = response.type;\n                      nameParts = name.split('.');\n                      fileType = nameParts[nameParts.length - 1];\n                      fileToUpload = {\n                        name: name,\n                        type: mimeType,\n                        size: size,\n                        uri: Platform.OS === 'ios' ? uri : uri\n                      };\n                      console.log(fileToUpload, '...............file');\n                      setIncomeDocUri(uri);\n\n                      if (!uri) {\n                        _context5.next = 23;\n                        break;\n                      }\n\n                      docName = userId + '_incomeDoc.' + fileType;\n                      storageRef = storage_ref(storage, 'incomeDoc/' + docName);\n                      _context5.next = 12;\n                      return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n                        var xhr = new XMLHttpRequest();\n\n                        xhr.onload = function () {\n                          resolve(xhr.response);\n                        };\n\n                        xhr.onerror = function () {\n                          reject(new TypeError(\"Network request failed\"));\n                        };\n\n                        xhr.responseType = \"blob\";\n                        xhr.open(\"GET\", uri, true);\n                        xhr.send(null);\n                      }));\n\n                    case 12:\n                      blob = _context5.sent;\n                      _context5.next = 15;\n                      return _regeneratorRuntime.awrap(uploadBytes(storageRef, blob));\n\n                    case 15:\n                      snapshot = _context5.sent;\n                      _context5.next = 18;\n                      return _regeneratorRuntime.awrap(getDownloadURL(snapshot.ref));\n\n                    case 18:\n                      DownloadURL = _context5.sent;\n                      setIncomeDocUri(DownloadURL);\n                      console.log('File available at', DownloadURL);\n                      _context5.next = 24;\n                      break;\n\n                    case 23:\n                      console.log('user no doc ', userId);\n\n                    case 24:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (error) {\n              console.log(error);\n            }));\n\n          case 3:\n            result = _context6.sent;\n            setSubmitIncomeButtomText(\"Income Prove Submitted\");\n            setUploadingIncome(false);\n\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadUserUpdate = function uploadUserUpdate() {\n    var UserRef;\n    return _regeneratorRuntime.async(function uploadUserUpdate$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            setUploading(true);\n            console.log('userIconUri', userIconUri);\n            console.log('addressDocUri', addressDocUri);\n            console.log('incomeDocUri', incomeDocUri);\n            _context7.prev = 4;\n\n            if (!userId) {\n              _context7.next = 13;\n              break;\n            }\n\n            UserRef = doc(db, 'Users', userId);\n            _context7.next = 9;\n            return _regeneratorRuntime.awrap(updateDoc(UserRef, {\n              userIconUri: userIconUri,\n              username: UserName,\n              usergender: UserGender,\n              desc: UserDescription,\n              lastupdateDate: new Date(),\n              userAge: UserAge,\n              addressDocUri: addressDocUri,\n              incomeDocUri: incomeDocUri\n            }));\n\n          case 9:\n            console.log(\"Document written with ID: \", UserRef.id);\n            Alert.alert(\"Done\", \"User Info updated\", [{\n              text: \"OK\",\n              onPress: function onPress() {\n                return console.log(\"OK Pressed\");\n              }\n            }]);\n            _context7.next = 14;\n            break;\n\n          case 13:\n            console.error(\"userId not found:  \", auth.currentUser);\n\n          case 14:\n            _context7.next = 19;\n            break;\n\n          case 16:\n            _context7.prev = 16;\n            _context7.t0 = _context7[\"catch\"](4);\n            console.error(\"Error adding document:  \", _context7.t0);\n\n          case 19:\n            setUploading(false);\n            setSubmitButtomText(\"Submitted\");\n\n          case 21:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, [[4, 16]], Promise);\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        showsHorizontalScrollIndicator: false,\n        style: {\n          height: \"100%\",\n          width: \"100%\",\n          paddingTop: 15\n        },\n        children: [_jsx(View, {\n          style: styles.imagePickerContainer,\n          children: _jsxs(View, {\n            style: styles.imageitem,\n            children: [userIconUri != \"\" && userIconUri != undefined ? _jsx(TouchableOpacity, {\n              onPress: pickImageByLibrary,\n              children: _jsx(Avatar, {\n                size: 100,\n                rounded: true,\n                source: {\n                  uri: userIconUri\n                }\n              })\n            }) : _jsx(TouchableOpacity, {\n              onPress: pickImageByLibrary,\n              children: _jsx(Avatar, {\n                size: 100,\n                rounded: true,\n                title: UserName ? UserName[0] : \"\",\n                containerStyle: {\n                  backgroundColor: '#aaaaaa'\n                }\n              })\n            }), _jsx(View, {\n              style: styles.iconContainer,\n              children: _jsx(FontAwesome, {\n                name: \"camera\",\n                size: 25,\n                rounded: true,\n                color: \"black\",\n                iconStyle: {\n                  backgroundColor: '#eb1561'\n                },\n                containerStyle: {\n                  backgroundColor: '#eb1561'\n                },\n                avatarStyle: {\n                  backgroundColor: '#eb1561'\n                },\n                overlayContainerStyle: {\n                  backgroundColor: '#eb1561'\n                },\n                placeholderStyle: {\n                  backgroundColor: '#eb1561'\n                },\n                onPress: function onPress() {\n                  pickImageByLibrary;\n                }\n              })\n            })]\n          })\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"Charlie\",\n          label: \"User Name:\",\n          labelStyle: {\n            fontSize: 10\n          },\n          onChangeText: function onChangeText(text) {\n            return setUserName(text);\n          },\n          containerStyle: {\n            marginBottom: 20\n          },\n          value: UserName\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"0-100\",\n          label: \"User Age:\",\n          labelStyle: {\n            fontSize: 10\n          },\n          onChangeText: function onChangeText(text) {\n            return setUserAge(text);\n          },\n          containerStyle: {\n            marginBottom: 20\n          },\n          value: UserAge\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"Descript your User here\",\n          label: \"User Description:\",\n          labelStyle: {\n            fontSize: 10\n          },\n          onChangeText: function onChangeText(text) {\n            return setUserDescription(text);\n          },\n          containerStyle: {\n            marginBottom: 20\n          },\n          value: UserDescription,\n          numberOfLines: 4,\n          multiline: true\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"User Gender:\"\n          }), _jsx(Dropdown, {\n            data: gender_drop_down_data,\n            initvalue: UserGender\n          })]\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Require Apartment Type:\"\n          }), _jsx(Dropdown, {\n            data: apartment_type_drop_down_data,\n            setValue: setApartmentType\n          })]\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"eg. 200\",\n          label: \"Minimum Living space per member(sq. ft.):\",\n          onChangeText: function onChangeText(text) {\n            return setApartmentSize(text);\n          },\n          containerStyle: {\n            marginBottom: 20\n          },\n          labelStyle: {\n            fontSize: 10\n          }\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Require Pet Experience:\"\n          }), _jsx(Dropdown, {\n            data: boolean_drop_down_data,\n            setValue: setHvExperience\n          })]\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Require Window Screen:\"\n          }), _jsx(Dropdown, {\n            data: boolean_drop_down_data,\n            setValue: setHvWindowScreen\n          })]\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"eg. 1\",\n          label: \"Maximum number of other pets:\",\n          onChangeText: function onChangeText(text) {\n            return setNumOfOtherPet(text);\n          },\n          containerStyle: {\n            marginBottom: 20\n          },\n          labelStyle: {\n            fontSize: 10\n          }\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"Certain type of pet in family is not allowd, pleaase descript here:\",\n          label: \"Other Pets Description:\",\n          onChangeText: function onChangeText(text) {\n            return setOtherPetDescription(text);\n          },\n          labelStyle: {\n            fontSize: 10\n          },\n          containerStyle: {\n            marginBottom: 20\n          },\n          multiline: true,\n          numberOfLines: 4\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Require No Smoker at Home:\"\n          }), _jsx(Dropdown, {\n            data: boolean_drop_down_data,\n            setValue: setHvSmoker\n          })]\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Require No Family Member have Respiratory Diseases:\"\n          }), _jsx(Dropdown, {\n            data: boolean_drop_down_data,\n            setValue: setHvRespiratoryDiseases\n          })]\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Require No Family Member have Allergy Symptoms:\"\n          }), _jsx(Dropdown, {\n            data: boolean_drop_down_data,\n            setValue: setHvAllergySymptoms\n          })]\n        }), _jsx(Button, {\n          title: submitAddressButtomText,\n          onPress: uploadAddressDocument,\n          loading: uploadingAddress,\n          buttonStyle: {\n            backgroundColor: 'rgba(111, 202, 186, 0.5)',\n            borderRadius: 5,\n            margin: 10\n          },\n          titleStyle: {\n            fontSize: 12\n          }\n        }), _jsx(Button, {\n          title: submitIncomeButtomText,\n          onPress: uploadIncomeDocument,\n          loading: uploadingIncome,\n          buttonStyle: {\n            backgroundColor: 'rgba(111, 202, 186, 0.5)',\n            borderRadius: 5,\n            margin: 10\n          },\n          titleStyle: {\n            fontSize: 12\n          }\n        }), _jsx(Button, {\n          title: submitButtomText,\n          onPress: uploadUserUpdate,\n          loading: uploading,\n          buttonStyle: {\n            backgroundColor: 'rgba(111, 202, 186, 1)',\n            borderRadius: 5,\n            margin: 10,\n            marginTop: 30\n          },\n          titleStyle: {\n            fontSize: 12\n          }\n        }), _jsxs(Dialog, {\n          isVisible: uploadingImage,\n          children: [_jsx(Text, {\n            children: \"Uploading Icon Image, Please Wait\"\n          }), _jsx(Dialog.Loading, {})]\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 20,\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  input: {\n    fontSize: 16\n  },\n  pickerContainer: {\n    paddingHorizontal: 10,\n    marginBottom: 30\n  },\n  pickerLabel: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    color: 'rgb(134, 147, 158)'\n  },\n  CardContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    borderRadius: 25,\n    fontSize: 12\n  },\n  contentContainer: {\n    width: '50%',\n    height: '100%',\n    paddingLeft: 10,\n    flex: 1\n  },\n  Username: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  Usergender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  desc: {\n    fontSize: 10,\n    color: '#999999'\n  },\n  askbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  askbuttonContainer: {\n    position: 'absolute',\n    left: 10,\n    bottom: 0\n  },\n  imagePickerContainer: {\n    flexDirection: 'column',\n    paddingHorizontal: 10,\n    alignItems: 'center',\n    alignSelf: 'center',\n    paddingBottom: 20\n  },\n  paddingView: {\n    paddingTop: 10\n  },\n  iconContainer: {\n    position: 'absolute',\n    zIndex: 1,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/UserSettingScreen.tsx"],"names":["React","useEffect","useState","Button","Text","Input","Avatar","Dialog","ImagePicker","DocumentPicker","FontAwesome","storage","db","auth","ref","storage_ref","getDownloadURL","uploadBytes","onSnapshot","doc","updateDoc","Dropdown","gender_drop_down_data","boolean_drop_down_data","apartment_type_drop_down_data","UserSettingScreen","navigation","userIconUri","setUserIconImage","userId","setUserId","UserGender","setGenderValue","UserName","setUserName","UserAge","setUserAge","UserDescription","setUserDescription","uploadingImage","setUploadingImage","uploading","setUploading","submitButtomText","setSubmitButtomText","addressDocUri","setAddressDocUri","uploadingAddress","setUploadingAddress","submitAddressButtomText","setSubmitAddressButtomText","incomeDocUri","setIncomeDocUri","uploadingIncome","setUploadingIncome","submitIncomeButtomText","setSubmitIncomeButtomText","sterilisation","setSterilisation","vaccinated","setVaccinated","hvAddressProve","setHvAddressProve","hvIncomeProve","setHvIncomeProve","totalIncome","setTotalIncome","apartmentType","setApartmentType","apartmentSize","setApartmentSize","hvExperience","setHvExperience","hvWindowScreen","setHvWindowScreen","numOfOtherPet","setNumOfOtherPet","otherPetDescription","setOtherPetDescription","hvSmoker","setHvSmoker","hvRespiratoryDiseases","setHvRespiratoryDiseases","hvAllergySymptoms","setHvAllergySymptoms","getData","currentUser","uid","console","log","unsub","undefined","data","desc","username","usergender","userAge","pickImageByLibrary","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","maxWidth","maxHeight","quality","pickerResult","cancelled","uri","userIconDownloadURL","imagename","storageRef","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","TypeError","responseType","open","send","blob","snapshot","uploadAddressDocument","getDocumentAsync","then","type","name","size","mimeType","nameParts","split","fileType","length","fileToUpload","Platform","OS","docName","DownloadURL","catch","error","result","uploadIncomeDocument","uploadUserUpdate","UserRef","lastupdateDate","Date","id","Alert","alert","text","onPress","styles","container","height","width","paddingTop","imagePickerContainer","imageitem","backgroundColor","iconContainer","input","fontSize","marginBottom","pickerContainer","pickerLabel","borderRadius","margin","marginTop","StyleSheet","create","flex","alignItems","justifyContent","padding","title","fontWeight","separator","marginVertical","paddingHorizontal","color","CardContainer","flexDirection","flexWrap","borderWidth","borderColor","aspectRatio","contentContainer","paddingLeft","Username","Usergender","askbutton","askbuttonContainer","position","left","bottom","alignSelf","paddingBottom","paddingView","zIndex","right"],"mappings":"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","sourcesContent":["\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { StyleSheet, View, Image, TouchableOpacity, ScrollView, Platform, Alert } from 'react-native';\r\nimport { Button, ButtonGroup, withTheme, Text, Input, Divider, Avatar, Dialog } from 'react-native-elements';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as DocumentPicker from \"expo-document-picker\";\r\nimport * as FileSystem from 'expo-file-system';\r\nimport { FontAwesome } from '@expo/vector-icons';\r\nimport { storage, db, auth } from \"../firebase\";\r\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\r\nimport { collection, query, where, onSnapshot, doc, updateDoc } from \"firebase/firestore\";\r\n\r\nimport { SettingStackProps, ImageInfo } from '../types';\r\nimport Dropdown from '../components/dropdown'\r\nimport { SubmitButton } from '../components/SubmitButton'\r\n\r\nimport {\r\n  assetsObject, gender_drop_down_data, pet_type_drop_down_data, pet_stage_drop_down_data,\r\n  boolean_drop_down_data, apartment_type_drop_down_data\r\n} from '../assets/asset';\r\n\r\n\r\nexport default function UserSettingScreen({ navigation }: SettingStackProps<'Setting'>) {\r\n  const [userIconUri, setUserIconImage] = useState<string | undefined>('');\r\n  const [userId, setUserId] = useState<string | undefined>('');\r\n  const [UserGender, setGenderValue] = useState<string | undefined>(\"Male\");\r\n  const [UserName, setUserName] = useState<string | undefined>('');\r\n  const [UserAge, setUserAge] = useState<string | undefined>('');\r\n  const [UserDescription, setUserDescription] = useState<string | undefined>('');\r\n\r\n  const [uploadingImage, setUploadingImage] = useState(false);\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [submitButtomText, setSubmitButtomText] = useState('Submit');\r\n\r\n  const [addressDocUri, setAddressDocUri] = useState('');\r\n  const [uploadingAddress, setUploadingAddress] = useState(false);\r\n  const [submitAddressButtomText, setSubmitAddressButtomText] = useState('Submit Address Prove');\r\n\r\n\r\n  const [incomeDocUri, setIncomeDocUri] = useState('');\r\n  const [uploadingIncome, setUploadingIncome] = useState(false);\r\n  const [submitIncomeButtomText, setSubmitIncomeButtomText] = useState('Submit Income Prove');\r\n\r\n\r\n  const [sterilisation, setSterilisation] = useState('');\r\n  const [vaccinated, setVaccinated] = useState('');\r\n  const [hvAddressProve, setHvAddressProve] = useState('');\r\n  const [hvIncomeProve, setHvIncomeProve] = useState('');\r\n  const [totalIncome, setTotalIncome] = useState('');\r\n  const [apartmentType, setApartmentType] = useState('');\r\n  const [apartmentSize, setApartmentSize] = useState('');\r\n  const [hvExperience, setHvExperience] = useState('');\r\n  const [hvWindowScreen, setHvWindowScreen] = useState('');\r\n  const [numOfOtherPet, setNumOfOtherPet] = useState('');\r\n  const [otherPetDescription, setOtherPetDescription] = useState('');\r\n  const [hvSmoker, setHvSmoker] = useState('');\r\n  const [hvRespiratoryDiseases, setHvRespiratoryDiseases] = useState('');\r\n  const [hvAllergySymptoms, setHvAllergySymptoms] = useState('');\r\n\r\n\r\n\r\n  const getData = async () => {\r\n    var userId = auth.currentUser?.uid;\r\n    console.log(\"Get data: userId:\", userId);\r\n    if (!userId) return false;\r\n    const unsub = onSnapshot(doc(db, \"Users\", userId), (doc) => {\r\n      if (doc == undefined) return false;\r\n      if (!doc.data()) return false;\r\n\r\n      if (doc.data()?.desc) setUserDescription(doc.data()?.desc);\r\n      if (doc.data()?.username) setUserName(doc.data()?.username);\r\n      if (doc.data()?.usergender) setGenderValue(doc.data()?.usergender);\r\n      if (doc.data()?.userAge) setUserAge(doc.data()?.userAge);\r\n      if (doc.data()?.userIconUri) setUserIconImage(doc.data()?.userIconUri);\r\n      if (doc.data()?.addressDocUri) {\r\n        setAddressDocUri(doc.data()?.addressDocUri)\r\n        setSubmitAddressButtomText(\"Address Prove Submitted\")\r\n      };\r\n      if (doc.data()?.incomeDocUri) {\r\n        setIncomeDocUri(doc.data()?.incomeDocUri)\r\n        setSubmitIncomeButtomText(\"Income Prove Submitted\")\r\n      };\r\n\r\n      if (doc.data()?.totalIncome) setTotalIncome(doc.data()?.totalIncome);\r\n      if (doc.data()?.apartmentType) setApartmentType(doc.data()?.apartmentType);\r\n      if (doc.data()?.apartmentSize) setApartmentSize(doc.data()?.apartmentSize);\r\n      if (doc.data()?.hvExperience) setHvExperience(doc.data()?.hvExperience);\r\n      if (doc.data()?.hvWindowScreen) setHvWindowScreen(doc.data()?.hvWindowScreen);\r\n      if (doc.data()?.numOfOtherPet) setNumOfOtherPet(doc.data()?.numOfOtherPet);\r\n      if (doc.data()?.otherPetDescription) setOtherPetDescription(doc.data()?.otherPetDescription);\r\n      if (doc.data()?.hvSmoker) setHvSmoker(doc.data()?.hvSmoker);\r\n      if (doc.data()?.hvAllergySymptoms) setHvRespiratoryDiseases(doc.data()?.hvAllergySymptoms);\r\n      if (doc.data()?.hvRespiratoryDiseases) setHvAllergySymptoms(doc.data()?.hvRespiratoryDiseases);\r\n\r\n    });\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    setUserId(auth.currentUser?.uid);\r\n    getData()\r\n  }, []);\r\n\r\n  const pickImageByLibrary = async () => {\r\n    let pickerResult = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [1, 1],\r\n      maxWidth: 500,\r\n      maxHeight: 500,\r\n      quality: 0.5,\r\n    });\r\n\r\n    if (!pickerResult.cancelled) {\r\n      setUploadingImage(true);\r\n      const { uri } = pickerResult as ImageInfo\r\n      //Set User Image\r\n      var userIconDownloadURL = null\r\n      if (uri) {\r\n        const imagename = userId + \"_icon.png\";\r\n        const storageRef = storage_ref(storage, 'userIcon/' + imagename);\r\n\r\n        const blob: Blob = await new Promise((resolve, reject) => {\r\n          const xhr = new XMLHttpRequest();\r\n          xhr.onload = function () {\r\n            resolve(xhr.response);\r\n          };\r\n          xhr.onerror = function () {\r\n            reject(new TypeError(\"Network request failed\"));\r\n          };\r\n          xhr.responseType = \"blob\";\r\n          xhr.open(\"GET\", uri, true);\r\n          xhr.send(null);\r\n        });\r\n        const snapshot = await uploadBytes(storageRef, blob);\r\n        userIconDownloadURL = await getDownloadURL(snapshot.ref);\r\n        setUserIconImage(userIconDownloadURL);\r\n        console.log('File available at', userIconDownloadURL);\r\n      } else {\r\n        console.log('user no image ', userId);\r\n      }\r\n    }\r\n    console.log('user uploading image: ', userIconUri);\r\n    setUploadingImage(false);\r\n\r\n  };\r\n\r\n  const uploadAddressDocument = async () => {\r\n    setUploadingAddress(true)\r\n    let result = await DocumentPicker.getDocumentAsync({}).then(async response => {\r\n      if (response.type == 'success') {\r\n        let { name, size, uri, mimeType, type } = response;\r\n        let nameParts = name.split('.');\r\n        let fileType = nameParts[nameParts.length - 1];\r\n        var fileToUpload = {\r\n          name: name,\r\n          type: mimeType,\r\n          size: size,\r\n          uri: Platform.OS === 'ios' ? uri : uri,\r\n        };\r\n        console.log(fileToUpload, '...............file')\r\n        setAddressDocUri(uri);\r\n\r\n        if (uri) {\r\n          const docName = userId + '_addressDoc.' + fileType;\r\n          const storageRef = storage_ref(storage, 'addressDoc/' + docName);\r\n\r\n          const blob: Blob = await new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onload = function () {\r\n              resolve(xhr.response);\r\n            };\r\n            xhr.onerror = function () {\r\n              reject(new TypeError(\"Network request failed\"));\r\n            };\r\n            xhr.responseType = \"blob\";\r\n            xhr.open(\"GET\", uri, true);\r\n            xhr.send(null);\r\n          });\r\n          const snapshot = await uploadBytes(storageRef, blob);\r\n          var DownloadURL = await getDownloadURL(snapshot.ref);\r\n          setAddressDocUri(DownloadURL);\r\n          console.log('File available at', DownloadURL);\r\n        } else {\r\n          console.log('user no image ', userId);\r\n        }\r\n      }\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n    setSubmitAddressButtomText(\"Address Prove Submitted\")\r\n    setUploadingAddress(false)\r\n  };\r\n\r\n  const uploadIncomeDocument = async () => {\r\n    setUploadingIncome(true)\r\n    let result = await DocumentPicker.getDocumentAsync({}).then(async response => {\r\n      if (response.type == 'success') {\r\n        let { name, size, uri, mimeType, type } = response;\r\n        let nameParts = name.split('.');\r\n        let fileType = nameParts[nameParts.length - 1];\r\n        var fileToUpload = {\r\n          name: name,\r\n          type: mimeType,\r\n          size: size,\r\n          uri: Platform.OS === 'ios' ? uri : uri,\r\n        };\r\n        console.log(fileToUpload, '...............file')\r\n        setIncomeDocUri(uri);\r\n\r\n        if (uri) {\r\n          const docName = userId + '_incomeDoc.' + fileType;\r\n          const storageRef = storage_ref(storage, 'incomeDoc/' + docName);\r\n          const blob: Blob = await new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onload = function () {\r\n              resolve(xhr.response);\r\n            };\r\n            xhr.onerror = function () {\r\n              reject(new TypeError(\"Network request failed\"));\r\n            };\r\n            xhr.responseType = \"blob\";\r\n            xhr.open(\"GET\", uri, true);\r\n            xhr.send(null);\r\n          });\r\n          const snapshot = await uploadBytes(storageRef, blob);\r\n          var DownloadURL = await getDownloadURL(snapshot.ref);\r\n          setIncomeDocUri(DownloadURL);\r\n          console.log('File available at', DownloadURL);\r\n        } else {\r\n          console.log('user no doc ', userId);\r\n        }\r\n      }\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n    setSubmitIncomeButtomText(\"Income Prove Submitted\")\r\n    setUploadingIncome(false)\r\n  };\r\n\r\n  const uploadUserUpdate = async () => {\r\n    setUploading(true)\r\n\r\n    console.log('userIconUri', userIconUri);\r\n    console.log('addressDocUri', addressDocUri);\r\n    console.log('incomeDocUri', incomeDocUri);\r\n    //Set User Doc\r\n    try {\r\n      if (userId) {\r\n        const UserRef = doc(db, 'Users', userId);\r\n        await updateDoc(UserRef, {\r\n          userIconUri: userIconUri,\r\n          username: UserName,\r\n          usergender: UserGender,\r\n          desc: UserDescription,\r\n          lastupdateDate: new Date(),\r\n          userAge: UserAge,\r\n          addressDocUri: addressDocUri,\r\n          incomeDocUri: incomeDocUri,\r\n        });\r\n        console.log(\"Document written with ID: \", UserRef.id);\r\n        Alert.alert(\r\n          \"Done\", \"User Info updated\",\r\n          [\r\n            { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n          ]\r\n        );\r\n      } else {\r\n        console.error(\"userId not found:  \", auth.currentUser);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error adding document:  \", e);\r\n    }\r\n    setUploading(false)\r\n    setSubmitButtomText(\"Submitted\")\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        <ScrollView showsVerticalScrollIndicator={false}\r\n          showsHorizontalScrollIndicator={false} style={{ height: \"100%\", width: \"100%\", paddingTop: 15 }}>\r\n          <View style={styles.imagePickerContainer}>\r\n            <View style={styles.imageitem}>\r\n              {(userIconUri != \"\" && userIconUri != undefined) ?\r\n                <TouchableOpacity onPress={pickImageByLibrary}>\r\n                  <Avatar\r\n                    size={100}\r\n                    rounded\r\n                    source={{ uri: userIconUri }}\r\n                  />\r\n                </TouchableOpacity> :\r\n                <TouchableOpacity onPress={pickImageByLibrary}>\r\n                  <Avatar\r\n                    size={100}\r\n                    rounded\r\n                    title={UserName ? UserName[0] : \"\"}\r\n                    containerStyle={{ backgroundColor: '#aaaaaa' }}\r\n\r\n                  />\r\n                </TouchableOpacity>\r\n              }\r\n              <View style={styles.iconContainer}>\r\n                <FontAwesome\r\n                  name=\"camera\"\r\n                  size={25}\r\n                  rounded\r\n                  color=\"black\"\r\n                  iconStyle={{ backgroundColor: '#eb1561' }}\r\n                  containerStyle={{ backgroundColor: '#eb1561' }}\r\n                  avatarStyle={{ backgroundColor: '#eb1561' }}\r\n                  overlayContainerStyle={{ backgroundColor: '#eb1561' }}\r\n                  placeholderStyle={{ backgroundColor: '#eb1561' }}\r\n                  onPress={() => { pickImageByLibrary }}\r\n                />\r\n              </View>\r\n            </View>\r\n\r\n          </View>\r\n\r\n          <Input style={styles.input} placeholder=\"Charlie\" label='User Name:' labelStyle={{ fontSize: 10 }}\r\n            onChangeText={text => setUserName(text)} containerStyle={{ marginBottom: 20 }} value={UserName} />\r\n          <Input style={styles.input} placeholder=\"0-100\" label='User Age:' labelStyle={{ fontSize: 10 }}\r\n            onChangeText={text => setUserAge(text)} containerStyle={{ marginBottom: 20 }} value={UserAge} />\r\n          <Input style={styles.input} placeholder=\"Descript your User here\" label='User Description:' labelStyle={{ fontSize: 10 }}\r\n            onChangeText={text => setUserDescription(text)} containerStyle={{ marginBottom: 20 }} value={UserDescription}\r\n            numberOfLines={4} multiline={true}\r\n\r\n          />\r\n          <View style={styles.pickerContainer}>\r\n            <Text style={styles.pickerLabel} >User Gender:</Text>\r\n            <Dropdown data={gender_drop_down_data} initvalue={UserGender} />\r\n          </View>\r\n\r\n          <View style={styles.pickerContainer}>\r\n            <Text style={styles.pickerLabel} >Require Apartment Type:</Text>\r\n            <Dropdown data={apartment_type_drop_down_data} setValue={setApartmentType} />\r\n          </View>\r\n          <Input style={styles.input} placeholder=\"eg. 200\" label='Minimum Living space per member(sq. ft.):'\r\n            onChangeText={text => setApartmentSize(text)} containerStyle={{ marginBottom: 20 }}\r\n            labelStyle={{ fontSize: 10 }} />\r\n          <View style={styles.pickerContainer}>\r\n            <Text style={styles.pickerLabel} >Require Pet Experience:</Text>\r\n            <Dropdown data={boolean_drop_down_data} setValue={setHvExperience} />\r\n          </View>\r\n          <View style={styles.pickerContainer}>\r\n            <Text style={styles.pickerLabel} >Require Window Screen:</Text>\r\n            <Dropdown data={boolean_drop_down_data} setValue={setHvWindowScreen} />\r\n          </View>\r\n          <Input style={styles.input} placeholder=\"eg. 1\" label='Maximum number of other pets:'\r\n            onChangeText={text => setNumOfOtherPet(text)} containerStyle={{ marginBottom: 20 }}\r\n            labelStyle={{ fontSize: 10 }} />\r\n          <Input style={styles.input} placeholder=\"Certain type of pet in family is not allowd, pleaase descript here:\" label='Other Pets Description:'\r\n            onChangeText={text => setOtherPetDescription(text)} labelStyle={{ fontSize: 10 }}\r\n            containerStyle={{ marginBottom: 20 }}\r\n            multiline={true}\r\n            numberOfLines={4} />\r\n          <View style={styles.pickerContainer}>\r\n            <Text style={styles.pickerLabel} >Require No Smoker at Home:</Text>\r\n            <Dropdown data={boolean_drop_down_data} setValue={setHvSmoker} />\r\n          </View>\r\n          <View style={styles.pickerContainer}>\r\n            <Text style={styles.pickerLabel} >Require No Family Member have Respiratory Diseases:</Text>\r\n            <Dropdown data={boolean_drop_down_data} setValue={setHvRespiratoryDiseases} />\r\n          </View>\r\n          <View style={styles.pickerContainer}>\r\n            <Text style={styles.pickerLabel} >Require No Family Member have Allergy Symptoms:</Text>\r\n            <Dropdown data={boolean_drop_down_data} setValue={setHvAllergySymptoms} />\r\n          </View>\r\n\r\n\r\n          <Button title={submitAddressButtomText} onPress={uploadAddressDocument}\r\n            loading={uploadingAddress}\r\n            buttonStyle={{\r\n              backgroundColor: 'rgba(111, 202, 186, 0.5)',\r\n              borderRadius: 5,\r\n              margin: 10,\r\n            }}\r\n            titleStyle={{ fontSize: 12 }} />\r\n          <Button title={submitIncomeButtomText} onPress={uploadIncomeDocument}\r\n            loading={uploadingIncome}\r\n            buttonStyle={{\r\n              backgroundColor: 'rgba(111, 202, 186, 0.5)',\r\n              borderRadius: 5,\r\n              margin: 10,\r\n            }}\r\n            titleStyle={{ fontSize: 12 }} />\r\n\r\n          <Button title={submitButtomText} onPress={uploadUserUpdate}\r\n            loading={uploading}\r\n            buttonStyle={{\r\n              backgroundColor: 'rgba(111, 202, 186, 1)',\r\n              borderRadius: 5,\r\n              margin: 10, marginTop: 30\r\n            }}\r\n            titleStyle={{ fontSize: 12 }} />\r\n          <Dialog isVisible={uploadingImage}>\r\n            <Text>Uploading Icon Image, Please Wait</Text>\r\n            <Dialog.Loading />\r\n          </Dialog>\r\n        </ScrollView>\r\n      </View >\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n    padding: 20,\r\n    backgroundColor: 'white',\r\n    height: \"100%\"\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  separator: {\r\n    marginVertical: 30,\r\n    height: 1,\r\n    width: '80%',\r\n  },\r\n  input: {\r\n    fontSize: 16\r\n  },\r\n  pickerContainer: {\r\n    paddingHorizontal: 10,\r\n    marginBottom: 30\r\n\r\n  },\r\n  pickerLabel: {\r\n    fontSize: 10,\r\n    fontWeight: 'bold',\r\n    color: 'rgb(134, 147, 158)'\r\n  },\r\n  CardContainer: {\r\n    width: '100%',\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'flex-start', // if you want to fill rows left to right\r\n    borderRadius: 25,\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#dddddd',\r\n    marginVertical: 15,\r\n  },\r\n  imageitem: {\r\n    aspectRatio: 0.95,\r\n    borderRadius: 25,\r\n    fontSize: 12,\r\n\r\n  },\r\n  contentContainer: {\r\n    width: '50%',\r\n    height: '100%',\r\n    paddingLeft: 10,\r\n    flex: 1,\r\n  },\r\n  Username: {\r\n    fontWeight: 'bold',\r\n    fontSize: 20\r\n  },\r\n  Usergender: {\r\n    fontSize: 10,\r\n    marginBottom: 12,\r\n    fontWeight: 'bold',\r\n    color: '#888888'\r\n  },\r\n  desc: {\r\n    fontSize: 10,\r\n    color: '#999999'\r\n  },\r\n  askbutton: {\r\n    backgroundColor: '#0b9298',\r\n    borderRadius: 5,\r\n    paddingHorizontal: 15\r\n  },\r\n  askbuttonContainer: {\r\n    position: 'absolute',\r\n    left: 10,\r\n    bottom: 0,\r\n  },\r\n  imagePickerContainer: {\r\n    flexDirection: 'column',\r\n    paddingHorizontal: 10,\r\n    alignItems: 'center',\r\n    alignSelf: 'center',\r\n    paddingBottom: 20\r\n  },\r\n  paddingView: {\r\n    paddingTop: 10\r\n  },\r\n  iconContainer: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    right: 0,\r\n    bottom: 0\r\n  },\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}