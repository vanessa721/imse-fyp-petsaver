{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Text } from 'react-native-elements';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { db } from \"../firebase\";\nimport { onSnapshot, doc } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function PetSocialMediaScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      ownerName = _useState2[0],\n      setOwnerName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ownerImagepath = _useState4[0],\n      setOwnerImage = _useState4[1];\n\n  var _useState5 = useState(route.params.petPostDataItem.item),\n      _useState6 = _slicedToArray(_useState5, 2),\n      petPostDataItem = _useState6[0],\n      setPetPostDataItem = _useState6[1];\n\n  var getOwnerDetail = function getOwnerDetail() {\n    var unsub;\n    return _regeneratorRuntime.async(function getOwnerDetail$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (petPostDataItem.postcreator) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 2:\n            unsub = onSnapshot(doc(db, \"Users\", petPostDataItem.postcreator), function (doc) {\n              var _doc$data, _doc$data2;\n\n              if (doc == undefined) return false;\n              if (!doc.data()) return false;\n              setOwnerName((_doc$data = doc.data()) == null ? void 0 : _doc$data.username);\n              setOwnerImage((_doc$data2 = doc.data()) == null ? void 0 : _doc$data2.userIconUri);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    var _navigation$getParent;\n\n    getOwnerDetail();\n    (_navigation$getParent = navigation.getParent()) == null ? void 0 : _navigation$getParent.setOptions({\n      tabBarStyle: {\n        display: \"none\"\n      }\n    });\n    return function () {\n      var _navigation$getParent2;\n\n      return (_navigation$getParent2 = navigation.getParent()) == null ? void 0 : _navigation$getParent2.setOptions({\n        tabBarStyle: {\n          borderTopWidth: 0,\n          backgroundColor: 'white',\n          elevation: 0,\n          height: '8%'\n        }\n      });\n    };\n  }, [navigation]);\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.iconContainer,\n        children: _jsx(FontAwesome, {\n          name: \"arrow-left\",\n          size: 25,\n          color: \"white\",\n          onPress: function onPress() {\n            navigation.navigate('Home');\n          }\n        })\n      }), _jsx(View, {\n        style: styles.iconContainer2,\n        children: _jsx(FontAwesome, {\n          name: \"heart-o\",\n          size: 25,\n          color: \"white\"\n        })\n      }), petPostDataItem.imagepath != \"\" && _jsx(Image, {\n        style: styles.imageitem,\n        source: {\n          uri: petPostDataItem.imagepath\n        }\n      }), _jsxs(View, {\n        style: styles.contentContainer,\n        children: [_jsx(Text, {\n          style: styles.petname,\n          children: petPostDataItem.petname\n        }), _jsxs(Text, {\n          style: styles.petgender,\n          children: [petPostDataItem.petgender, \"  -  \", petPostDataItem.petstages, \" \"]\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  iconContainer: {\n    marginTop: 40,\n    padding: 20,\n    alignSelf: 'flex-start',\n    zIndex: 1,\n    position: 'absolute'\n  },\n  iconContainer2: {\n    marginTop: 40,\n    padding: 20,\n    alignSelf: 'flex-end',\n    zIndex: 1,\n    position: 'absolute'\n  },\n  imageitem: {\n    zIndex: 0,\n    aspectRatio: 1.1,\n    width: '100%'\n  },\n  contentContainer: {\n    width: '100%',\n    height: '100%',\n    padding: 30,\n    flex: 1,\n    borderRadius: 25,\n    backgroundColor: 'white',\n    top: -30\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 30\n  },\n  petgender: {\n    fontSize: 12,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  paragraph: {\n    fontSize: 12,\n    color: '#999999'\n  },\n  required: {\n    fontSize: 12,\n    color: 'red'\n  },\n  fulfilled: {\n    fontSize: 12,\n    color: 'green'\n  },\n  paragraphTitle: {\n    fontSize: 12,\n    color: '#999999',\n    fontWeight: 'bold'\n  },\n  contactbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15,\n    marginRight: 30\n  },\n  contactbuttonContainer: {\n    marginHorizontal: 30\n  },\n  footerContainer: {\n    position: 'absolute',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    bottom: 0,\n    width: '100%',\n    height: '10%'\n  },\n  ownerContainer: {\n    marginLeft: 30,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  ownerDetailContainer: {\n    marginLeft: 10,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/PetSocialMediaScreen.tsx"],"names":["React","useEffect","useState","Text","FontAwesome","db","onSnapshot","doc","PetSocialMediaScreen","route","navigation","ownerName","setOwnerName","ownerImagepath","setOwnerImage","params","petPostDataItem","item","setPetPostDataItem","getOwnerDetail","postcreator","unsub","undefined","data","username","userIconUri","getParent","setOptions","tabBarStyle","display","borderTopWidth","backgroundColor","elevation","height","styles","container","iconContainer","navigate","iconContainer2","imagepath","imageitem","uri","contentContainer","petname","petgender","petstages","StyleSheet","create","flex","alignItems","justifyContent","marginTop","padding","alignSelf","zIndex","position","aspectRatio","width","borderRadius","top","fontWeight","fontSize","marginBottom","color","paragraph","required","fulfilled","paragraphTitle","contactbutton","paddingHorizontal","marginRight","contactbuttonContainer","marginHorizontal","footerContainer","flexDirection","bottom","ownerContainer","marginLeft","ownerDetailContainer"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState, useContext } from 'react';\nimport { StyleSheet, View, Image, Alert, ScrollView } from 'react-native';\nimport { Button, ButtonGroup, withTheme, Text, Input, Divider, Avatar } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { storage, db, auth } from \"../firebase\";\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { collection, query, where, onSnapshot, getDocs, addDoc, doc, setDoc } from \"firebase/firestore\";\n\nimport { SettingStackProps, petPostDataProps } from '../types';\nimport Dropdown from '../components/dropdown'\n\nexport default function PetSocialMediaScreen({ route, navigation }: { route: any, navigation: any }) {\n  const [ownerName, setOwnerName] = useState<string | undefined>('');\n  const [ownerImagepath, setOwnerImage] = useState(\"\");\n\n  const [petPostDataItem, setPetPostDataItem] = useState(route.params.petPostDataItem.item)\n\n  const getOwnerDetail = async () => {\n    if (!petPostDataItem.postcreator) return false;\n\n    const unsub = onSnapshot(doc(db, \"Users\", petPostDataItem.postcreator), (doc) => {\n      if (doc == undefined) return false;\n      if (!doc.data()) return false;\n      setOwnerName(doc.data()?.username)\n      setOwnerImage(doc.data()?.userIconUri)\n    });\n  }\n\n\n\n  useEffect(() => {\n    getOwnerDetail();\n    navigation.getParent()?.setOptions({ tabBarStyle: { display: \"none\" } });\n    return () => navigation.getParent()?.setOptions(\n      { tabBarStyle: { borderTopWidth: 0, backgroundColor: 'white', elevation: 0, height: '8%' } });\n\n  }, [navigation]);\n\n  return (\n    <>\n      <View style={styles.container}>\n        <View style={styles.iconContainer}>\n          <FontAwesome\n            name=\"arrow-left\"\n            size={25}\n            color=\"white\"\n            onPress={() => { navigation.navigate('Home') }}\n          />\n        </View>\n        <View style={styles.iconContainer2}>\n          <FontAwesome\n            name=\"heart-o\"\n            size={25}\n            color=\"white\"\n          />\n        </View>\n        {petPostDataItem.imagepath != \"\" && <Image style={styles.imageitem}\n          source={{ uri: petPostDataItem.imagepath }}\n        />}\n        <View style={styles.contentContainer}>\n          <Text style={styles.petname}>{petPostDataItem.petname}</Text>\n          <Text style={styles.petgender}>{petPostDataItem.petgender}  -  {petPostDataItem.petstages} </Text>\n\n\n\n        </View>\n\n      </View >\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  iconContainer: {\n    marginTop: 40,\n    padding: 20,\n    alignSelf: 'flex-start',\n    zIndex: 1,\n    position: 'absolute'\n  },\n  iconContainer2: {\n    marginTop: 40,\n    padding: 20,\n    alignSelf: 'flex-end',\n    zIndex: 1,\n    position: 'absolute'\n  },\n  imageitem: {\n    zIndex: 0,\n    aspectRatio: 1.1,\n    width: '100%',\n  },\n  contentContainer: {\n    width: '100%',\n    height: '100%',\n    padding: 30,\n\n    flex: 1,\n    borderRadius: 25,\n    backgroundColor: 'white',\n    top: -30\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 30\n  },\n  petgender: {\n    fontSize: 12, marginBottom: 12, fontWeight: 'bold', color: '#888888'\n  },\n  paragraph: {\n    fontSize: 12, color: '#999999'\n  },\n  required: {\n    fontSize: 12, color: 'red'\n  },\n  fulfilled: {\n    fontSize: 12, color: 'green'\n  },\n  paragraphTitle: {\n    fontSize: 12, color: '#999999', fontWeight: 'bold'\n  },\n  contactbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15,\n    marginRight: 30\n  },\n  contactbuttonContainer: {\n    marginHorizontal: 30\n  },\n  footerContainer: {\n    position: 'absolute',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    bottom: 0,\n    width: '100%',\n    height: '10%',\n  },\n  ownerContainer: {\n    marginLeft: 30,\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n  },\n  ownerDetailContainer: {\n    marginLeft: 10,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n\n\n});\n\n\n\n"]},"metadata":{},"sourceType":"module"}