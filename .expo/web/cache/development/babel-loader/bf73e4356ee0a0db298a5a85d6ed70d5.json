{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Text, Input } from 'react-native-elements';\nimport React, { useEffect, useState } from 'react';\nimport { auth } from \"../firebase\";\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.replace(\"Root\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var handleRegister = function handleRegister() {\n    createUserWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n      var user = userCredential.user;\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      Alert.alert(\"Register Unsuccess\", \"Error: \" + errorMessage, [{\n        text: \"OK\",\n        onPress: function onPress() {\n          return console.log(\"OK Pressed\");\n        }\n      }]);\n    });\n  };\n\n  var handleLogin = function handleLogin() {\n    signInWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n      var user = userCredential.user;\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      Alert.alert(\"Login Unsuccess\", \"Error: \" + errorMessage, [{\n        text: \"OK\",\n        onPress: function onPress() {\n          return console.log(\"OK Pressed\");\n        }\n      }]);\n      console.log(email, password);\n      console.log(errorMessage);\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Login Screen\"\n    }), _jsxs(View, {\n      style: styles.inputcontainer,\n      children: [_jsx(Input, {\n        style: styles.input,\n        placeholder: \"Email\",\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(Input, {\n        style: styles.input,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      })]\n    }), _jsx(Button, {\n      loading: false,\n      loadingProps: {\n        size: 'small',\n        color: 'white'\n      },\n      buttonStyle: {\n        backgroundColor: '#0a9396',\n        borderRadius: 5\n      },\n      containerStyle: {\n        marginHorizontal: 50,\n        height: 50,\n        width: 200,\n        marginVertical: 10\n      },\n      onPress: handleLogin,\n      title: \"Login\"\n    }), _jsx(Button, {\n      loading: false,\n      loadingProps: {\n        size: 'small',\n        color: 'white'\n      },\n      buttonStyle: {\n        backgroundColor: '#0a9396',\n        borderRadius: 5\n      },\n      containerStyle: {\n        marginHorizontal: 50,\n        height: 50,\n        width: 200,\n        marginVertical: 10\n      },\n      onPress: handleRegister,\n      title: \"Register\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputcontainer: {\n    width: '80%'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  input: {\n    fontSize: 12\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/LoginScreen.tsx"],"names":["Button","Text","Input","React","useEffect","useState","auth","signInWithEmailAndPassword","createUserWithEmailAndPassword","LoginScreen","navigation","email","setEmail","password","setPassword","unsubscribe","onAuthStateChanged","user","replace","handleRegister","then","userCredential","catch","error","errorCode","code","errorMessage","message","Alert","alert","text","onPress","console","log","handleLogin","styles","container","Platform","OS","title","inputcontainer","input","size","color","backgroundColor","borderRadius","marginHorizontal","height","width","marginVertical","StyleSheet","create","flex","alignItems","justifyContent","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import { Platform, KeyboardAvoidingView, StyleSheet, TextInput, Alert, View } from 'react-native';\r\nimport { Button, ButtonGroup, withTheme, Text, Input } from 'react-native-elements';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { auth } from \"../firebase\";\r\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword } from 'firebase/auth'\r\n\r\n\r\nexport default function LoginScreen({ navigation }: { navigation: any }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user: any) => {\r\n      if (user) {\r\n        navigation.replace(\"Root\")\r\n      }\r\n    })\r\n\r\n    return unsubscribe\r\n  }, [])\r\n\r\n  const handleRegister = () => {\r\n    createUserWithEmailAndPassword(auth, email, password)\r\n      .then((userCredential) => {\r\n        const user = userCredential.user;\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        Alert.alert(\r\n          \"Register Unsuccess\",\r\n          \"Error: \" + errorMessage,\r\n          [\r\n            { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n          ]\r\n        );\r\n      });\r\n  }\r\n\r\n  const handleLogin = () => {\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then((userCredential) => {\r\n        const user = userCredential.user;\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n        Alert.alert(\r\n          \"Login Unsuccess\",\r\n          \"Error: \" + errorMessage,\r\n          [\r\n            { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\r\n          ]\r\n        );\r\n        console.log(email, password);\r\n        console.log(errorMessage);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <KeyboardAvoidingView style={styles.container} behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\r\n    >\r\n      <Text style={styles.title}>Login Screen</Text>\r\n      <View style={styles.inputcontainer}>\r\n        <Input style={styles.input} placeholder='Email' onChangeText={text => setEmail(text)} />\r\n        <Input style={styles.input} placeholder='Password' secureTextEntry onChangeText={text => setPassword(text)} />\r\n      </View>\r\n      <Button\r\n        loading={false}\r\n        loadingProps={{ size: 'small', color: 'white' }}\r\n        buttonStyle={{\r\n          backgroundColor: '#0a9396',\r\n          borderRadius: 5,\r\n        }}\r\n        containerStyle={{\r\n          marginHorizontal: 50,\r\n          height: 50,\r\n          width: 200,\r\n          marginVertical: 10,\r\n        }}\r\n        onPress={handleLogin}\r\n        title=\"Login\"\r\n      />\r\n      <Button\r\n        loading={false}\r\n        loadingProps={{ size: 'small', color: 'white' }}\r\n        buttonStyle={{\r\n          backgroundColor: '#0a9396',\r\n          borderRadius: 5,\r\n        }}\r\n        containerStyle={{\r\n          marginHorizontal: 50,\r\n          height: 50,\r\n          width: 200,\r\n          marginVertical: 10,\r\n        }}\r\n        onPress={handleRegister}\r\n        title=\"Register\" />\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputcontainer: {\r\n    width: '80%'\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  input: {\r\n    fontSize: 12\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}