{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Button, ButtonGroup, Text, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport { storage, db, auth } from \"../firebase\";\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport Dropdown from \"../components/dropdown\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function UserSettingScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      imagepath = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      downloadURL = _useState4[0],\n      setDownloadURL = _useState4[1];\n\n  var _useState5 = useState(\"Male\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      UserGender = _useState6[0],\n      setGenderValue = _useState6[1];\n\n  var _useState7 = useState(\"Kid\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      UserStage = _useState8[0],\n      setStageValue = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      UserName = _useState10[0],\n      setUserName = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      UserAge = _useState12[0],\n      setUserAge = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      UserDescription = _useState14[0],\n      setUserDescription = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      uploading = _useState16[0],\n      setUploading = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      submitted = _useState18[0],\n      setSubmitted = _useState18[1];\n\n  var _useState19 = useState(2),\n      _useState20 = _slicedToArray(_useState19, 2),\n      selectedButtonIndex = _useState20[0],\n      setSelectedButtonIndex = _useState20[1];\n\n  var _useState21 = useState('Submit'),\n      _useState22 = _slicedToArray(_useState21, 2),\n      submitButtomText = _useState22[0],\n      setSubmitButtomText = _useState22[1];\n\n  var pickImageByLibrary = function pickImageByLibrary() {\n    var result;\n    return _regeneratorRuntime.async(function pickImageByLibrary$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickImageByCamera = function pickImageByCamera() {\n    var result;\n    return _regeneratorRuntime.async(function pickImageByCamera$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n            console.log(Platform.OS);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadPost = function uploadPost() {\n    var _auth$currentUser;\n\n    var userId, snapshotDownloadURL, imagename, storageRef, blob, snapshot, docRef;\n    return _regeneratorRuntime.async(function uploadPost$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setUploading(true);\n            userId = (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid;\n            console.log('user uploading image ', userId);\n            snapshotDownloadURL = null;\n\n            if (!imagepath) {\n              _context3.next = 20;\n              break;\n            }\n\n            imagename = Date.now() + '-' + getRandomString(5) + '-' + userId;\n            storageRef = storage_ref(storage, 'userIcon/' + imagename + '.png');\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n              var xhr = new XMLHttpRequest();\n\n              xhr.onload = function () {\n                resolve(xhr.response);\n              };\n\n              xhr.onerror = function () {\n                reject(new TypeError(\"Network request failed\"));\n              };\n\n              xhr.responseType = \"blob\";\n              xhr.open(\"GET\", imagepath, true);\n              xhr.send(null);\n            }));\n\n          case 9:\n            blob = _context3.sent;\n            _context3.next = 12;\n            return _regeneratorRuntime.awrap(uploadBytes(storageRef, blob));\n\n          case 12:\n            snapshot = _context3.sent;\n            _context3.next = 15;\n            return _regeneratorRuntime.awrap(getDownloadURL(snapshot.ref));\n\n          case 15:\n            snapshotDownloadURL = _context3.sent;\n            setDownloadURL(snapshotDownloadURL);\n            console.log('File available at', snapshotDownloadURL);\n            _context3.next = 21;\n            break;\n\n          case 20:\n            console.log('user no image ', userId);\n\n          case 21:\n            _context3.prev = 21;\n            _context3.next = 24;\n            return _regeneratorRuntime.awrap(addDoc(collection(db, \"Users\"), {\n              imagepath: snapshotDownloadURL,\n              username: UserName,\n              usergender: UserGender,\n              desc: UserDescription,\n              createdate: new Date(),\n              userAge: UserAge\n            }));\n\n          case 24:\n            docRef = _context3.sent;\n            console.log(\"Document written with ID: \", docRef.id);\n            _context3.next = 31;\n            break;\n\n          case 28:\n            _context3.prev = 28;\n            _context3.t0 = _context3[\"catch\"](21);\n            console.error(\"Error adding document:  \", _context3.t0);\n\n          case 31:\n            setSubmitted(true);\n            setUploading(false);\n            setSubmitButtomText(\"Submitted\");\n\n          case 34:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[21, 28]], Promise);\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        showsHorizontalScrollIndicator: false,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: [_jsx(Input, {\n          style: styles.input,\n          placeholder: \"Charlie\",\n          label: \"User Name:\",\n          onChangeText: function onChangeText(text) {\n            return setUserName(text);\n          },\n          containerStyle: {\n            marginBottom: 20\n          }\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"0-100\",\n          label: \"User Age:\",\n          onChangeText: function onChangeText(text) {\n            return setUserAge(text);\n          },\n          containerStyle: {\n            marginBottom: 20\n          }\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"Descript your User here\",\n          label: \"User Description:\",\n          onChangeText: function onChangeText(text) {\n            return setUserDescription(text);\n          },\n          containerStyle: {\n            marginBottom: 20\n          }\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"User Gender:\"\n          }), _jsx(Dropdown, {\n            data: gender_drop_down_data\n          })]\n        }), _jsxs(View, {\n          style: styles.imagePickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"User Image: \"\n          }), _jsx(View, {\n            style: styles.paddingView\n          }), _jsx(ButtonGroup, {\n            buttons: ['Select an image', 'Open camera'],\n            selectedIndex: selectedButtonIndex,\n            onPress: function onPress(value) {\n              setSelectedButtonIndex(value);\n\n              if (value == 0) {\n                pickImageByLibrary();\n              }\n\n              if (value == 1) {\n                pickImageByCamera();\n              }\n            },\n            containerStyle: {\n              marginBottom: 20\n            }\n          }), _jsx(_Fragment, {}), imagepath != \"\" && _jsx(TouchableOpacity, {\n            onPress: pickImageByLibrary,\n            children: _jsx(Image, {\n              style: styles.imageitem,\n              source: {\n                uri: imagepath\n              }\n            })\n          })]\n        }), _jsx(Button, {\n          title: submitButtomText,\n          onPress: uploadPost,\n          loading: uploading,\n          disabled: submitted,\n          buttonStyle: {\n            backgroundColor: 'rgba(111, 202, 186, 1)',\n            borderRadius: 5,\n            margin: 10,\n            marginTop: 30\n          },\n          titleStyle: {\n            fontSize: 12\n          }\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 20,\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  input: {\n    fontSize: 12\n  },\n  pickerContainer: {\n    paddingHorizontal: 10,\n    marginBottom: 30\n  },\n  pickerLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'rgb(134, 147, 158)'\n  },\n  CardContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: 200,\n    borderRadius: 25,\n    fontSize: 12\n  },\n  contentContainer: {\n    width: '50%',\n    height: '100%',\n    paddingLeft: 10,\n    flex: 1\n  },\n  Username: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  Usergender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  desc: {\n    fontSize: 10,\n    color: '#999999'\n  },\n  askbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  askbuttonContainer: {\n    position: 'absolute',\n    left: 10,\n    bottom: 0\n  },\n  imagePickerContainer: {\n    flexDirection: 'column',\n    paddingHorizontal: 10\n  },\n  paddingView: {\n    paddingTop: 10\n  }\n});\nvar gender_drop_down_data = [{\n  label: 'Male',\n  value: 'male'\n}, {\n  label: 'Female',\n  value: 'female'\n}];\nvar User_stage_drop_down_data = [{\n  label: 'Bady',\n  value: 'bady'\n}, {\n  label: 'Kid',\n  value: 'kid'\n}, {\n  label: 'Adult',\n  value: 'adult'\n}];\n\nfunction getRandomString(length) {\n  var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var result = '';\n\n  for (var i = 0; i < length; i++) {\n    result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\n  }\n\n  return result;\n}","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/UserSettingScreen.tsx"],"names":["React","useState","Button","ButtonGroup","Text","Input","ImagePicker","storage","db","auth","ref","storage_ref","getDownloadURL","uploadBytes","collection","addDoc","Dropdown","UserSettingScreen","navigation","imagepath","setImage","downloadURL","setDownloadURL","UserGender","setGenderValue","UserStage","setStageValue","UserName","setUserName","UserAge","setUserAge","UserDescription","setUserDescription","uploading","setUploading","submitted","setSubmitted","selectedButtonIndex","setSelectedButtonIndex","submitButtomText","setSubmitButtomText","pickImageByLibrary","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","pickImageByCamera","launchCameraAsync","console","log","Platform","OS","uploadPost","userId","currentUser","uid","snapshotDownloadURL","imagename","Date","now","getRandomString","storageRef","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","TypeError","responseType","open","send","blob","snapshot","username","usergender","desc","createdate","userAge","docRef","id","error","styles","container","height","width","input","text","marginBottom","pickerContainer","pickerLabel","gender_drop_down_data","imagePickerContainer","paddingView","value","imageitem","backgroundColor","borderRadius","margin","marginTop","fontSize","StyleSheet","create","flex","alignItems","justifyContent","padding","title","fontWeight","separator","marginVertical","paddingHorizontal","color","CardContainer","flexDirection","flexWrap","borderWidth","borderColor","aspectRatio","contentContainer","paddingLeft","Username","Usergender","askbutton","askbuttonContainer","position","left","bottom","paddingTop","label","User_stage_drop_down_data","length","randomChars","i","charAt","Math","floor","random"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState, useContext } from 'react';\nimport { StyleSheet, View, Image, TouchableOpacity, ScrollView, Platform } from 'react-native';\nimport { Button, ButtonGroup, withTheme, Text, Input, Divider } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\n\nimport { storage, db, auth } from \"../firebase\";\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { collection, query, where, onSnapshot, getDocs, addDoc } from \"firebase/firestore\";\n\nimport { SettingStackProps } from '../types';\nimport Dropdown from '../components/dropdown'\n\nexport default function UserSettingScreen({ navigation }: SettingStackProps<'Setting'>) {\n  const [imagepath, setImage] = useState(\"\");\n  const [downloadURL, setDownloadURL] = useState(\"\");\n  const [UserGender, setGenderValue] = useState<number | string>(\"Male\");\n  const [UserStage, setStageValue] = useState<number | string>(\"Kid\");\n  const [UserName, setUserName] = useState('');\n  const [UserAge, setUserAge] = useState<number | string>('');\n  const [UserDescription, setUserDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [selectedButtonIndex, setSelectedButtonIndex] = useState(2);\n  const [submitButtomText, setSubmitButtomText] = useState('Submit');\n\n\n  const pickImageByLibrary = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n\n  };\n\n  const pickImageByCamera = async () => {\n    let result = await ImagePicker.launchCameraAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n    console.log(Platform.OS)\n  };\n\n  const uploadPost = async () => {\n    setUploading(true)\n\n    const userId = auth.currentUser?.uid;\n    console.log('user uploading image ', userId);\n\n    var snapshotDownloadURL = null\n    if (imagepath) {\n      const imagename = Date.now() + '-' + getRandomString(5) + '-' + userId\n      const storageRef = storage_ref(storage, 'userIcon/' + imagename + '.png');\n\n      const blob: Blob = await new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.onload = function () {\n          resolve(xhr.response);\n        };\n        xhr.onerror = function () {\n          reject(new TypeError(\"Network request failed\"));\n        };\n        xhr.responseType = \"blob\";\n        xhr.open(\"GET\", imagepath, true);\n        xhr.send(null);\n      });\n      const snapshot = await uploadBytes(storageRef, blob);\n      snapshotDownloadURL = await getDownloadURL(snapshot.ref);\n      setDownloadURL(snapshotDownloadURL);\n      console.log('File available at', snapshotDownloadURL);\n    } else {\n      console.log('user no image ', userId);\n    }\n    try {\n      const docRef = await addDoc(collection(db, \"Users\"), {\n        imagepath: snapshotDownloadURL,\n        username: UserName,\n        usergender: UserGender,\n        desc: UserDescription,\n        createdate: new Date(),\n        userAge: UserAge\n      });\n      console.log(\"Document written with ID: \", docRef.id);\n    } catch (e) {\n      console.error(\"Error adding document:  \", e);\n    }\n\n    setSubmitted(true)\n    setUploading(false)\n    setSubmitButtomText(\"Submitted\")\n  }\n\n  return (\n    <>\n      <View style={styles.container}>\n        <ScrollView showsVerticalScrollIndicator={false}\n          showsHorizontalScrollIndicator={false}\n          style={{ height: \"100%\", width: \"100%\" }}>\n          <Input style={styles.input} placeholder=\"Charlie\" label='User Name:' onChangeText={text => setUserName(text)} containerStyle={{ marginBottom: 20 }} />\n          <Input style={styles.input} placeholder=\"0-100\" label='User Age:' onChangeText={text => setUserAge(text)} containerStyle={{ marginBottom: 20 }} />\n          <Input style={styles.input} placeholder=\"Descript your User here\" label='User Description:' onChangeText={text => setUserDescription(text)} containerStyle={{ marginBottom: 20 }} />\n          <View style={styles.pickerContainer}>\n            <Text style={styles.pickerLabel} >User Gender:</Text>\n            <Dropdown data={gender_drop_down_data} />\n          </View>\n          <View style={styles.imagePickerContainer}>\n            <Text style={styles.pickerLabel} >User Image: </Text>\n            <View style={styles.paddingView} />\n            <ButtonGroup\n              buttons={['Select an image', 'Open camera']}\n              selectedIndex={selectedButtonIndex}\n              onPress={(value) => {\n                setSelectedButtonIndex(value);\n                if (value == 0) {\n                  pickImageByLibrary()\n                }\n                if (value == 1) {\n                  pickImageByCamera()\n                }\n              }}\n              containerStyle={{ marginBottom: 20 }}\n            />\n            <></>\n            {imagepath != \"\" &&\n              <TouchableOpacity onPress={pickImageByLibrary}>\n                <Image style={styles.imageitem}\n                  source={{ uri: imagepath }}\n                />\n              </TouchableOpacity>\n            }\n          </View>\n          <Button title={submitButtomText} onPress={uploadPost}\n            loading={uploading}\n            disabled={submitted}\n            buttonStyle={{\n              backgroundColor: 'rgba(111, 202, 186, 1)',\n              borderRadius: 5,\n              margin: 10, marginTop: 30\n            }}\n\n            titleStyle={{ fontSize: 12 }} />\n        </ScrollView>\n      </View >\n    </>\n    //imagepath={imagepath} Username={UserName} Usergender={UserGender} Userstages={UserStage} desc={UserDescription} \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 20,\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  input: {\n    fontSize: 12\n  },\n  pickerContainer: {\n    paddingHorizontal: 10,\n    marginBottom: 30\n\n  },\n  pickerLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'rgb(134, 147, 158)'\n  },\n  CardContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start', // if you want to fill rows left to right\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15,\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: 200,\n    borderRadius: 25,\n    fontSize: 12\n  },\n  contentContainer: {\n    width: '50%',\n    height: '100%',\n    paddingLeft: 10,\n    flex: 1,\n  },\n  Username: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  Usergender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  desc: {\n    fontSize: 10,\n    color: '#999999'\n  },\n  askbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  askbuttonContainer: {\n    position: 'absolute',\n    left: 10,\n    bottom: 0,\n  },\n  imagePickerContainer: {\n    flexDirection: 'column',\n    paddingHorizontal: 10\n  },\n  paddingView: {\n    paddingTop: 10\n  }\n});\n\nconst gender_drop_down_data = [\n  { label: 'Male', value: 'male' },\n  { label: 'Female', value: 'female' }\n];\n\nconst User_stage_drop_down_data = [\n  { label: 'Bady', value: 'bady' },\n  { label: 'Kid', value: 'kid' },\n  { label: 'Adult', value: 'adult' }\n];\n\nfunction getRandomString(length: number) {\n  var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var result = '';\n  for (var i = 0; i < length; i++) {\n    result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\n  }\n  return result;\n}"]},"metadata":{},"sourceType":"module"}