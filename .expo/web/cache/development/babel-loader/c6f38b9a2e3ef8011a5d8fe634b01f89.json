{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Button, ButtonGroup, Text, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport { storage, db, auth } from \"../firebase\";\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport Dropdown from \"../components/dropdown\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function CreatePostScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      imagepath = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      downloadURL = _useState4[0],\n      setDownloadURL = _useState4[1];\n\n  var _useState5 = useState(\"Male\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      petGender = _useState6[0],\n      setGenderValue = _useState6[1];\n\n  var _useState7 = useState(\"Kid\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      petStage = _useState8[0],\n      setStageValue = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      petName = _useState10[0],\n      setPetName = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      petType = _useState12[0],\n      setPetType = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      petAge = _useState14[0],\n      setPetAge = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      petDescription = _useState16[0],\n      setPetDescription = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      uploading = _useState18[0],\n      setUploading = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      submitted = _useState20[0],\n      setSubmitted = _useState20[1];\n\n  var _useState21 = useState(2),\n      _useState22 = _slicedToArray(_useState21, 2),\n      selectedButtonIndex = _useState22[0],\n      setSelectedButtonIndex = _useState22[1];\n\n  var _useState23 = useState('Submit'),\n      _useState24 = _slicedToArray(_useState23, 2),\n      submitButtomText = _useState24[0],\n      setSubmitButtomText = _useState24[1];\n\n  var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      hvAddressProve = _useState26[0],\n      setHvAddressProve = _useState26[1];\n\n  var _useState27 = useState(''),\n      _useState28 = _slicedToArray(_useState27, 2),\n      hvIncomeProve = _useState28[0],\n      setHvIncomeProve = _useState28[1];\n\n  var _useState29 = useState(''),\n      _useState30 = _slicedToArray(_useState29, 2),\n      totalIncome = _useState30[0],\n      setTotalIncome = _useState30[1];\n\n  var _useState31 = useState(''),\n      _useState32 = _slicedToArray(_useState31, 2),\n      apartmentType = _useState32[0],\n      setApartmentType = _useState32[1];\n\n  var _useState33 = useState(''),\n      _useState34 = _slicedToArray(_useState33, 2),\n      apartmentSize = _useState34[0],\n      setApartmentSize = _useState34[1];\n\n  var _useState35 = useState(''),\n      _useState36 = _slicedToArray(_useState35, 2),\n      hvExperience = _useState36[0],\n      setHvExperience = _useState36[1];\n\n  var _useState37 = useState(''),\n      _useState38 = _slicedToArray(_useState37, 2),\n      hvWindowScreen = _useState38[0],\n      setHvWindowScreen = _useState38[1];\n\n  var _useState39 = useState(''),\n      _useState40 = _slicedToArray(_useState39, 2),\n      hvOtherPet = _useState40[0],\n      setHvOtherPet = _useState40[1];\n\n  var _useState41 = useState(''),\n      _useState42 = _slicedToArray(_useState41, 2),\n      numOfPet = _useState42[0],\n      setNumOfPet = _useState42[1];\n\n  var _useState43 = useState(''),\n      _useState44 = _slicedToArray(_useState43, 2),\n      hvSmoker = _useState44[0],\n      setHvSmoker = _useState44[1];\n\n  var _useState45 = useState(''),\n      _useState46 = _slicedToArray(_useState45, 2),\n      hvRespiratoryDiseases = _useState46[0],\n      setHvRespiratoryDiseases = _useState46[1];\n\n  var _useState47 = useState(''),\n      _useState48 = _slicedToArray(_useState47, 2),\n      hvAllergySymptoms = _useState48[0],\n      setHvAllergySymptoms = _useState48[1];\n\n  var pickImageByLibrary = function pickImageByLibrary() {\n    var result;\n    return _regeneratorRuntime.async(function pickImageByLibrary$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 4],\n              quality: 0.5,\n              maxWidth: 500,\n              maxHeight: 500\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickImageByCamera = function pickImageByCamera() {\n    var result;\n    return _regeneratorRuntime.async(function pickImageByCamera$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 4],\n              quality: 0.5\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadPost = function uploadPost() {\n    var _auth$currentUser;\n\n    var userId, snapshotDownloadURL, imagename, storageRef, blob, snapshot, docRef;\n    return _regeneratorRuntime.async(function uploadPost$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setUploading(true);\n            userId = (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid;\n            console.log(\"auth.currentUser?.uid: \", userId);\n            snapshotDownloadURL = null;\n\n            if (!imagepath) {\n              _context3.next = 20;\n              break;\n            }\n\n            imagename = Date.now() + '-' + getRandomString(5) + '-' + userId;\n            storageRef = storage_ref(storage, 'petImages/' + imagename + '.png');\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n              var xhr = new XMLHttpRequest();\n\n              xhr.onload = function () {\n                resolve(xhr.response);\n              };\n\n              xhr.onerror = function () {\n                reject(new TypeError(\"Network request failed\"));\n              };\n\n              xhr.responseType = \"blob\";\n              xhr.open(\"GET\", imagepath, true);\n              xhr.send(null);\n            }));\n\n          case 9:\n            blob = _context3.sent;\n            _context3.next = 12;\n            return _regeneratorRuntime.awrap(uploadBytes(storageRef, blob));\n\n          case 12:\n            snapshot = _context3.sent;\n            _context3.next = 15;\n            return _regeneratorRuntime.awrap(getDownloadURL(snapshot.ref));\n\n          case 15:\n            snapshotDownloadURL = _context3.sent;\n            setDownloadURL(snapshotDownloadURL);\n            console.log('File available at', snapshotDownloadURL);\n            _context3.next = 21;\n            break;\n\n          case 20:\n            console.log('user no image ', userId);\n\n          case 21:\n            _context3.prev = 21;\n            _context3.next = 24;\n            return _regeneratorRuntime.awrap(addDoc(collection(db, \"PetPost\"), {\n              imagepath: snapshotDownloadURL,\n              petname: petName,\n              petgender: petGender,\n              petAge: petAge,\n              petType: petType,\n              petstages: petStage,\n              desc: petDescription,\n              createdate: new Date(),\n              postcreator: userId\n            }));\n\n          case 24:\n            docRef = _context3.sent;\n            console.log(\"Document written with ID: \", docRef.id);\n            _context3.next = 31;\n            break;\n\n          case 28:\n            _context3.prev = 28;\n            _context3.t0 = _context3[\"catch\"](21);\n            console.error(\"Error adding document:  \", _context3.t0);\n\n          case 31:\n            setSubmitted(true);\n            setUploading(false);\n            setSubmitButtomText(\"Submitted\");\n\n          case 34:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[21, 28]], Promise);\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        showsHorizontalScrollIndicator: false,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: [_jsx(Text, {\n          h4: true,\n          style: {\n            marginLeft: 10,\n            marginBottom: 30,\n            color: '#0b9298',\n            fontWeight: 'bold'\n          },\n          children: \"Adoption Requirement: \"\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"eg. Charlie\",\n          label: \"Pet Name:\",\n          labelStyle: {\n            fontSize: 10\n          },\n          onChangeText: function onChangeText(text) {\n            return setPetName(text);\n          },\n          containerStyle: {\n            marginBottom: 20\n          }\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"eg. 0-100\",\n          label: \"Pet Age:\",\n          onChangeText: function onChangeText(text) {\n            return setPetAge(text);\n          },\n          containerStyle: {\n            marginBottom: 20\n          },\n          labelStyle: {\n            fontSize: 10\n          }\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Pet Stages:\"\n          }), _jsx(Dropdown, {\n            data: pet_stage_drop_down_data,\n            setValue: setStageValue\n          })]\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Pet Gender:\"\n          }), _jsx(Dropdown, {\n            data: gender_drop_down_data,\n            setValue: setGenderValue\n          })]\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Pet Type:\"\n          }), _jsx(Dropdown, {\n            data: pet_type_drop_down_data,\n            setValue: setPetType\n          })]\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"Descript your pet here\",\n          label: \"Pet Description:\",\n          onChangeText: function onChangeText(text) {\n            return setPetDescription(text);\n          },\n          labelStyle: {\n            fontSize: 10\n          },\n          containerStyle: {\n            marginBottom: 20\n          },\n          multiline: true,\n          numberOfLines: 4\n        }), _jsxs(View, {\n          style: styles.imagePickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Pet Image: \"\n          }), _jsx(View, {\n            style: styles.paddingView\n          }), _jsx(ButtonGroup, {\n            buttons: ['Select an image'],\n            selectedIndex: selectedButtonIndex,\n            onPress: function onPress(value) {\n              setSelectedButtonIndex(value);\n              pickImageByLibrary();\n            },\n            containerStyle: {\n              marginBottom: 20\n            }\n          }), _jsx(_Fragment, {}), imagepath != \"\" && _jsx(TouchableOpacity, {\n            onPress: pickImageByLibrary,\n            children: _jsx(Image, {\n              style: styles.imageitem,\n              source: {\n                uri: imagepath\n              }\n            })\n          })]\n        }), _jsx(Text, {\n          h4: true,\n          style: {\n            marginLeft: 10,\n            marginTop: 30,\n            color: '#0b9298',\n            fontWeight: 'bold'\n          },\n          children: \"Adoption Requirement: \"\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"eg. 20000\",\n          label: \"Minimum Household Monthly Income:\",\n          onChangeText: function onChangeText(text) {\n            return setTotalIncome(text);\n          },\n          containerStyle: {\n            marginBottom: 20\n          },\n          labelStyle: {\n            fontSize: 10\n          }\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Require Income Prove:\"\n          }), _jsx(Dropdown, {\n            data: boolean_drop_down_data,\n            setValue: setHvIncomeProve\n          })]\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Require Address Prove:\"\n          }), _jsx(Dropdown, {\n            data: boolean_drop_down_data,\n            setValue: setHvAddressProve\n          })]\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Require Apartment Type:\"\n          }), _jsx(Dropdown, {\n            data: apartment_type_drop_down_data,\n            setValue: setApartmentType\n          })]\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"eg. 20000\",\n          label: \"Minimum Household Monthly Income:\",\n          onChangeText: function onChangeText(text) {\n            return setTotalIncome(text);\n          },\n          containerStyle: {\n            marginBottom: 20\n          },\n          labelStyle: {\n            fontSize: 10\n          }\n        }), _jsx(Button, {\n          title: submitButtomText,\n          onPress: uploadPost,\n          loading: uploading,\n          disabled: submitted,\n          buttonStyle: {\n            backgroundColor: 'rgba(111, 202, 186, 1)',\n            borderRadius: 5,\n            margin: 10,\n            marginTop: 30\n          },\n          titleStyle: {\n            fontSize: 12\n          }\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 10,\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  input: {\n    fontSize: 10\n  },\n  pickerContainer: {\n    paddingHorizontal: 10,\n    marginBottom: 30\n  },\n  pickerLabel: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    color: 'rgb(134, 147, 158)'\n  },\n  CardContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: 200,\n    borderRadius: 25,\n    fontSize: 12\n  },\n  contentContainer: {\n    width: '50%',\n    height: '100%',\n    paddingLeft: 10,\n    flex: 1\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  petgender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  desc: {\n    fontSize: 10,\n    color: '#999999'\n  },\n  askbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  askbuttonContainer: {\n    position: 'absolute',\n    left: 10,\n    bottom: 0\n  },\n  imagePickerContainer: {\n    flexDirection: 'column',\n    paddingHorizontal: 10\n  },\n  paddingView: {\n    paddingTop: 10\n  }\n});\nvar gender_drop_down_data = [{\n  label: 'Male',\n  value: 'male'\n}, {\n  label: 'Female',\n  value: 'female'\n}];\nvar pet_type_drop_down_data = [{\n  label: 'Cat',\n  value: 'Cat'\n}, {\n  label: 'Bird',\n  value: 'Bird'\n}, {\n  label: 'Hamster',\n  value: 'Hamster'\n}, {\n  label: 'Rabbit',\n  value: 'Rabbit'\n}, {\n  label: 'Dog',\n  value: 'Dog'\n}];\nvar pet_stage_drop_down_data = [{\n  label: 'Bady',\n  value: 'bady'\n}, {\n  label: 'Kid',\n  value: 'kid'\n}, {\n  label: 'Adult',\n  value: 'adult'\n}];\nvar boolean_drop_down_data = [{\n  label: 'True',\n  value: 'true'\n}, {\n  label: 'False',\n  value: 'false'\n}];\nvar apartment_type_drop_down_data = [{\n  label: 'Public Housing',\n  value: 'public_housing'\n}, {\n  label: 'Non Public Housing',\n  value: 'non_public_housing'\n}];\n\nfunction getRandomString(length) {\n  var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var result = '';\n\n  for (var i = 0; i < length; i++) {\n    result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\n  }\n\n  return result;\n}","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/CreatePostScreen.tsx"],"names":["React","useState","Button","ButtonGroup","Text","Input","ImagePicker","storage","db","auth","ref","storage_ref","getDownloadURL","uploadBytes","collection","addDoc","Dropdown","CreatePostScreen","navigation","imagepath","setImage","downloadURL","setDownloadURL","petGender","setGenderValue","petStage","setStageValue","petName","setPetName","petType","setPetType","petAge","setPetAge","petDescription","setPetDescription","uploading","setUploading","submitted","setSubmitted","selectedButtonIndex","setSelectedButtonIndex","submitButtomText","setSubmitButtomText","hvAddressProve","setHvAddressProve","hvIncomeProve","setHvIncomeProve","totalIncome","setTotalIncome","apartmentType","setApartmentType","apartmentSize","setApartmentSize","hvExperience","setHvExperience","hvWindowScreen","setHvWindowScreen","hvOtherPet","setHvOtherPet","numOfPet","setNumOfPet","hvSmoker","setHvSmoker","hvRespiratoryDiseases","setHvRespiratoryDiseases","hvAllergySymptoms","setHvAllergySymptoms","pickImageByLibrary","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","maxWidth","maxHeight","result","cancelled","uri","pickImageByCamera","launchCameraAsync","uploadPost","userId","currentUser","uid","console","log","snapshotDownloadURL","imagename","Date","now","getRandomString","storageRef","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","TypeError","responseType","open","send","blob","snapshot","petname","petgender","petstages","desc","createdate","postcreator","docRef","id","error","styles","container","height","width","marginLeft","marginBottom","color","fontWeight","input","fontSize","text","pickerContainer","pickerLabel","pet_stage_drop_down_data","gender_drop_down_data","pet_type_drop_down_data","imagePickerContainer","paddingView","value","imageitem","marginTop","boolean_drop_down_data","apartment_type_drop_down_data","backgroundColor","borderRadius","margin","StyleSheet","create","flex","alignItems","justifyContent","padding","title","separator","marginVertical","paddingHorizontal","CardContainer","flexDirection","flexWrap","borderWidth","borderColor","aspectRatio","contentContainer","paddingLeft","askbutton","askbuttonContainer","position","left","bottom","paddingTop","label","length","randomChars","i","charAt","Math","floor","random"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState, useContext } from 'react';\nimport { StyleSheet, View, Image, TouchableOpacity, ScrollView, Platform, TextInput } from 'react-native';\nimport { Button, ButtonGroup, withTheme, Text, Input, Divider } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\n\nimport { storage, db, auth } from \"../firebase\";\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { collection, query, where, onSnapshot, getDocs, addDoc } from \"firebase/firestore\";\n\nimport { SettingStackProps, petPostDataProps } from '../types';\nimport Dropdown from '../components/dropdown'\n\nexport default function CreatePostScreen({ navigation }: SettingStackProps<'Setting'>) {\n  const [imagepath, setImage] = useState(\"\");\n  const [downloadURL, setDownloadURL] = useState(\"\");\n  const [petGender, setGenderValue] = useState<number | string>(\"Male\");\n  const [petStage, setStageValue] = useState<number | string>(\"Kid\");\n  const [petName, setPetName] = useState('');\n  const [petType, setPetType] = useState('');\n  const [petAge, setPetAge] = useState<number | string>('');\n  const [petDescription, setPetDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [selectedButtonIndex, setSelectedButtonIndex] = useState(2);\n  const [submitButtomText, setSubmitButtomText] = useState('Submit');\n\n  const [hvAddressProve, setHvAddressProve] = useState('');\n  const [hvIncomeProve, setHvIncomeProve] = useState('');\n  const [totalIncome, setTotalIncome] = useState('');\n  const [apartmentType, setApartmentType] = useState('');\n  const [apartmentSize, setApartmentSize] = useState('');\n  const [hvExperience, setHvExperience] = useState('');\n  const [hvWindowScreen, setHvWindowScreen] = useState('');\n  const [hvOtherPet, setHvOtherPet] = useState('');\n  const [numOfPet, setNumOfPet] = useState('');\n  const [hvSmoker, setHvSmoker] = useState('');\n  const [hvRespiratoryDiseases, setHvRespiratoryDiseases] = useState('');\n  const [hvAllergySymptoms, setHvAllergySymptoms] = useState('');\n\n  //const [familySize, setPetName] = useState('');\n\n\n  const pickImageByLibrary = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 4],\n      quality: 0.5,\n      maxWidth: 500,\n      maxHeight: 500\n    });\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n\n  };\n\n  const pickImageByCamera = async () => {\n    let result = await ImagePicker.launchCameraAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 4],\n      quality: 0.5\n    });\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  };\n\n  const uploadPost = async () => {\n    setUploading(true)\n\n    const userId = auth.currentUser?.uid;\n    console.log(\"auth.currentUser?.uid: \", userId)\n\n    var snapshotDownloadURL = null\n    if (imagepath) {\n      const imagename = Date.now() + '-' + getRandomString(5) + '-' + userId\n      const storageRef = storage_ref(storage, 'petImages/' + imagename + '.png');\n\n      const blob: Blob = await new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.onload = function () {\n          resolve(xhr.response);\n        };\n        xhr.onerror = function () {\n          reject(new TypeError(\"Network request failed\"));\n        };\n        xhr.responseType = \"blob\";\n        xhr.open(\"GET\", imagepath, true);\n        xhr.send(null);\n      });\n      const snapshot = await uploadBytes(storageRef, blob);\n      snapshotDownloadURL = await getDownloadURL(snapshot.ref);\n      setDownloadURL(snapshotDownloadURL);\n      console.log('File available at', snapshotDownloadURL);\n    } else {\n      console.log('user no image ', userId);\n    }\n    try {\n      const docRef = await addDoc(collection(db, \"PetPost\"), {\n        imagepath: snapshotDownloadURL,\n        petname: petName,\n        petgender: petGender,\n        petAge: petAge,\n        petType: petType,\n        petstages: petStage,\n        desc: petDescription,\n        createdate: new Date(),\n        postcreator: userId\n      });\n      console.log(\"Document written with ID: \", docRef.id);\n    } catch (e) {\n      console.error(\"Error adding document:  \", e);\n    }\n\n    setSubmitted(true)\n    setUploading(false)\n    setSubmitButtomText(\"Submitted\")\n  }\n\n  return (\n    <>\n      <View style={styles.container}>\n        <ScrollView showsVerticalScrollIndicator={false}\n          showsHorizontalScrollIndicator={false}\n          style={{ height: \"100%\", width: \"100%\" }}>\n          <Text h4 style={{ marginLeft: 10, marginBottom: 30, color: '#0b9298', fontWeight: 'bold' }}>Adoption Requirement: </Text>\n\n          <Input style={styles.input} placeholder=\"eg. Charlie\" label='Pet Name:' labelStyle={{ fontSize: 10 }}\n            onChangeText={text => setPetName(text)} containerStyle={{ marginBottom: 20 }} />\n          <Input style={styles.input} placeholder=\"eg. 0-100\" label='Pet Age:'\n            onChangeText={text => setPetAge(text)} containerStyle={{ marginBottom: 20 }} labelStyle={{ fontSize: 10 }} />\n          <View style={styles.pickerContainer}>\n            <Text style={styles.pickerLabel} >Pet Stages:</Text>\n            <Dropdown data={pet_stage_drop_down_data} setValue={setStageValue} />\n          </View>\n          <View style={styles.pickerContainer}>\n            <Text style={styles.pickerLabel} >Pet Gender:</Text>\n            <Dropdown data={gender_drop_down_data} setValue={setGenderValue} />\n          </View>\n          <View style={styles.pickerContainer}>\n            <Text style={styles.pickerLabel} >Pet Type:</Text>\n            <Dropdown data={pet_type_drop_down_data} setValue={setPetType} />\n          </View>\n\n          <Input style={styles.input} placeholder=\"Descript your pet here\" label='Pet Description:'\n            onChangeText={text => setPetDescription(text)} labelStyle={{ fontSize: 10 }}\n            containerStyle={{ marginBottom: 20 }}\n            multiline={true}\n            numberOfLines={4} />\n          <View style={styles.imagePickerContainer}>\n            <Text style={styles.pickerLabel} >Pet Image: </Text>\n            <View style={styles.paddingView} />\n            <ButtonGroup\n              buttons={['Select an image']}\n              selectedIndex={selectedButtonIndex}\n              onPress={(value) => {\n                setSelectedButtonIndex(value);\n                pickImageByLibrary();\n              }}\n              containerStyle={{ marginBottom: 20 }}\n            />\n            <></>\n            {imagepath != \"\" &&\n              <TouchableOpacity onPress={pickImageByLibrary}>\n                <Image style={styles.imageitem}\n                  source={{ uri: imagepath }}\n                />\n              </TouchableOpacity>\n            }\n          </View>\n\n          <Text h4 style={{ marginLeft: 10, marginTop: 30, color: '#0b9298', fontWeight: 'bold' }}>Adoption Requirement: </Text>\n\n\n          <Input style={styles.input} placeholder=\"eg. 20000\" label='Minimum Household Monthly Income:'\n            onChangeText={text => setTotalIncome(text)} containerStyle={{ marginBottom: 20 }}\n            labelStyle={{ fontSize: 10 }} />\n          <View style={styles.pickerContainer}>\n            <Text style={styles.pickerLabel} >Require Income Prove:</Text>\n            <Dropdown data={boolean_drop_down_data} setValue={setHvIncomeProve} />\n          </View>\n          <View style={styles.pickerContainer}>\n            <Text style={styles.pickerLabel} >Require Address Prove:</Text>\n            <Dropdown data={boolean_drop_down_data} setValue={setHvAddressProve} />\n          </View>\n          <View style={styles.pickerContainer}>\n            <Text style={styles.pickerLabel} >Require Apartment Type:</Text>\n            <Dropdown data={apartment_type_drop_down_data} setValue={setApartmentType} />\n          </View>\n\n          <Input style={styles.input} placeholder=\"eg. 20000\" label='Minimum Household Monthly Income:'\n            onChangeText={text => setTotalIncome(text)} containerStyle={{ marginBottom: 20 }}\n            labelStyle={{ fontSize: 10 }} />\n\n\n          <Button title={submitButtomText} onPress={uploadPost}\n            loading={uploading}\n            disabled={submitted}\n            buttonStyle={{\n              backgroundColor: 'rgba(111, 202, 186, 1)',\n              borderRadius: 5,\n              margin: 10, marginTop: 30\n            }}\n\n            titleStyle={{ fontSize: 12 }} />\n        </ScrollView>\n      </View >\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 10,\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  input: {\n    fontSize: 10\n  },\n  pickerContainer: {\n    paddingHorizontal: 10,\n    marginBottom: 30\n\n  },\n  pickerLabel: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    color: 'rgb(134, 147, 158)'\n  },\n  CardContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start', // if you want to fill rows left to right\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15,\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: 200,\n    borderRadius: 25,\n    fontSize: 12\n  },\n  contentContainer: {\n    width: '50%',\n    height: '100%',\n    paddingLeft: 10,\n    flex: 1,\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  petgender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  desc: {\n    fontSize: 10,\n    color: '#999999'\n  },\n  askbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  askbuttonContainer: {\n    position: 'absolute',\n    left: 10,\n    bottom: 0,\n  },\n  imagePickerContainer: {\n    flexDirection: 'column',\n    paddingHorizontal: 10\n  },\n  paddingView: {\n    paddingTop: 10\n  }\n});\n\nconst gender_drop_down_data = [\n  { label: 'Male', value: 'male' },\n  { label: 'Female', value: 'female' }\n];\n\n\nconst pet_type_drop_down_data = [\n  { label: 'Cat', value: 'Cat' },\n  { label: 'Bird', value: 'Bird' },\n  { label: 'Hamster', value: 'Hamster' },\n  { label: 'Rabbit', value: 'Rabbit' },\n  { label: 'Dog', value: 'Dog' }\n];\n\nconst pet_stage_drop_down_data = [\n  { label: 'Bady', value: 'bady' },\n  { label: 'Kid', value: 'kid' },\n  { label: 'Adult', value: 'adult' }\n];\n\nconst boolean_drop_down_data = [\n  { label: 'True', value: 'true' },\n  { label: 'False', value: 'false' },\n];\n\nconst apartment_type_drop_down_data = [\n  { label: 'Public Housing', value: 'public_housing' },\n  { label: 'Non Public Housing', value: 'non_public_housing' },\n];\n\nfunction getRandomString(length: number) {\n  var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var result = '';\n  for (var i = 0; i < length; i++) {\n    result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\n  }\n  return result;\n}"]},"metadata":{},"sourceType":"module"}