{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { Text } from 'react-native-elements';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { auth } from \"../firebase\";\nimport TabOneScreen from \"../screens/TabOneScreen\";\nimport TabTwoScreen from \"../screens/TabTwoScreen\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction HeaderLive() {\n  return _jsxs(View, {\n    style: styles.headTextContainer,\n    children: [_jsx(Text, {\n      h2: true,\n      children: \"AAA\"\n    }), _jsx(Text, {\n      h4: true,\n      children: \"BBB\"\n    })]\n  });\n}\n\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var handleSignOut = function handleSignOut() {\n    auth.signOut().then(function () {\n      navigation.replace('Login');\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  var BottomTab = createBottomTabNavigator();\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"TabOne\",\n    screenOptions: {\n      tabBarActiveTintColor: '#000396'\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"TabOne\",\n      component: TabOneScreen,\n      options: function options(_ref2) {\n        var navigation = _ref2.navigation;\n        return {\n          title: '',\n          tabBarStyle: {\n            position: 'absolute',\n            backgroundColor: 'white'\n          },\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color;\n            return _jsx(TabBarIcon, {\n              name: \"code\",\n              color: color\n            });\n          },\n          headerLeft: function headerLeft() {\n            return _jsx(HeaderLive, {});\n          },\n          headerBackground: function headerBackground() {\n            return _jsx(View, {\n              style: {\n                backgroundColor: 'black',\n                height: '60px'\n              }\n            });\n          },\n          headerRight: function headerRight() {\n            return _jsx(Pressable, {\n              onPress: function onPress() {\n                return navigation.navigate('Modal');\n              },\n              style: function style(_ref4) {\n                var pressed = _ref4.pressed;\n                return {\n                  opacity: pressed ? 0.5 : 1\n                };\n              },\n              children: _jsx(FontAwesome, {\n                name: \"info-circle\",\n                size: 25,\n                color: '#0a9396',\n                style: {\n                  marginRight: 15\n                }\n              })\n            });\n          }\n        };\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"TabTwo\",\n      component: TabTwoScreen,\n      options: {\n        title: 'Tab Two',\n        tabBarIcon: function tabBarIcon(_ref5) {\n          var color = _ref5.color;\n          return _jsx(TabBarIcon, {\n            name: \"code\",\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#e93b81',\n    paddingTop: 50,\n    paddingHorizontal: 12\n  },\n  column: {\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 24\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: '600',\n    color: '#fff'\n  },\n  text: {\n    fontSize: 16,\n    fontWeight: 'normal',\n    color: '#fff'\n  },\n  headTextContainer: {\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    paddingLeft: 35\n  }\n});\n\nfunction TabBarIcon(props) {\n  return _jsx(FontAwesome, _objectSpread({\n    size: 30,\n    style: {\n      marginBottom: -3\n    }\n  }, props));\n}","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/HomeScreen.tsx"],"names":["React","Text","createBottomTabNavigator","auth","TabOneScreen","TabTwoScreen","FontAwesome","HeaderLive","styles","headTextContainer","HomeScreen","navigation","handleSignOut","signOut","then","replace","catch","error","alert","message","BottomTab","tabBarActiveTintColor","title","tabBarStyle","position","backgroundColor","tabBarIcon","color","headerLeft","headerBackground","height","headerRight","navigate","pressed","opacity","marginRight","StyleSheet","create","container","flex","paddingTop","paddingHorizontal","column","flexDirection","justifyContent","alignItems","marginBottom","fontSize","fontWeight","text","paddingLeft","TabBarIcon","props"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useContext } from 'react';\nimport { StyleSheet, View, Pressable } from 'react-native';\nimport { Button, ButtonGroup, withTheme, Text, Input, Icon } from 'react-native-elements';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { auth } from \"../firebase\";\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport TabOneScreen from '../screens/TabOneScreen';\nimport TabTwoScreen from '../screens/TabTwoScreen';\nimport { FontAwesome } from '@expo/vector-icons';\nimport Colors from '../constants/Colors';\nimport { getHeaderTitle } from '@react-navigation/elements';\nimport { BlurView } from 'expo-blur';\n\nfunction HeaderLive() {\n  return (<View style={styles.headTextContainer}>\n    <Text h2>AAA</Text><Text h4>BBB</Text>\n  </View>);\n}\n\nexport default function HomeScreen({ navigation }: { navigation: any }) {\n  const handleSignOut = () => {\n\n    auth\n      .signOut()\n      .then(() => {\n        navigation.replace('Login')\n      })\n      .catch((error: { message: any; }) => alert(error.message))\n  }\n  const BottomTab = createBottomTabNavigator<RootTabParamList>();\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"TabOne\"\n      screenOptions={{\n        tabBarActiveTintColor: '#000396',\n      }}>\n      <BottomTab.Screen\n        name=\"TabOne\"\n        component={TabOneScreen}\n        options={({ navigation }: RootTabScreenProps<'TabOne'>) => ({\n          title: '',\n          tabBarStyle: { position: 'absolute', backgroundColor: 'white' },\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n          headerLeft: () => (\n            <HeaderLive />\n          ),\n          headerBackground: () => (\n            <View\n              style={{ backgroundColor: 'black', height: '60px' }}\n            />),\n          headerRight: () => (\n            <Pressable\n              onPress={() => navigation.navigate('Modal')}\n              style={({ pressed }) => ({\n                opacity: pressed ? 0.5 : 1,\n              })}>\n              <FontAwesome\n                name=\"info-circle\"\n                size={25}\n                color={'#0a9396'}\n                style={{ marginRight: 15 }}\n              />\n            </Pressable>\n          ),\n        })}\n      />\n      <BottomTab.Screen\n        name=\"TabTwo\"\n        component={TabTwoScreen}\n        options={{\n          title: 'Tab Two',\n          tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n  // return (\n  //   <View style={styles.container}>\n  //     <StatusBar />\n  //     <View style={styles.column}>\n  //       <Text style={styles.title}>Home Screen</Text>\n  //       <Text style={styles.title}>Welcome: {auth.currentUser?.email}</Text>\n  //       <Button title=\"Logout\" onPress={handleSignOut}></Button>\n  //     </View>\n  //   </View>\n  // );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#e93b81',\n    paddingTop: 50,\n    paddingHorizontal: 12\n  },\n  column: {\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 24\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: '600',\n    color: '#fff'\n  },\n  text: {\n    fontSize: 16,\n    fontWeight: 'normal',\n    color: '#fff'\n  },\n  headTextContainer: {\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    paddingLeft: 35,\n  }\n});\n\nfunction TabBarIcon(props: {\n  name: React.ComponentProps<typeof FontAwesome>['name'];\n  color: string;\n}) {\n  return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n}\n\n"]},"metadata":{},"sourceType":"module"}