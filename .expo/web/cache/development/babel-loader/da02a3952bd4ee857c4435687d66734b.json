{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _MediaTypeInput;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { PermissionStatus, Platform } from 'expo-modules-core';\nimport { v4 } from 'uuid';\nimport { MediaTypeOptions } from \"./ImagePicker.types\";\nvar MediaTypeInput = (_MediaTypeInput = {}, _defineProperty(_MediaTypeInput, MediaTypeOptions.All, 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*'), _defineProperty(_MediaTypeInput, MediaTypeOptions.Images, 'image/*'), _defineProperty(_MediaTypeInput, MediaTypeOptions.Videos, 'video/mp4,video/quicktime,video/x-m4v,video/*'), _MediaTypeInput);\nexport default {\n  get name() {\n    return 'ExponentImagePicker';\n  },\n\n  launchImageLibraryAsync: function launchImageLibraryAsync(_ref) {\n    return function _callee() {\n      var _ref$mediaTypes, mediaTypes, _ref$allowsMultipleSe, allowsMultipleSelection, _ref$base, base64;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ref$mediaTypes = _ref.mediaTypes, mediaTypes = _ref$mediaTypes === void 0 ? MediaTypeOptions.Images : _ref$mediaTypes, _ref$allowsMultipleSe = _ref.allowsMultipleSelection, allowsMultipleSelection = _ref$allowsMultipleSe === void 0 ? false : _ref$allowsMultipleSe, _ref$base = _ref.base64, base64 = _ref$base === void 0 ? false : _ref$base;\n\n              if (Platform.isDOMAvailable) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", {\n                cancelled: true\n              });\n\n            case 3:\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(openFileBrowserAsync({\n                mediaTypes: mediaTypes,\n                allowsMultipleSelection: allowsMultipleSelection,\n                base64: base64\n              }));\n\n            case 5:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  launchCameraAsync: function launchCameraAsync(_ref2) {\n    return function _callee2() {\n      var _ref2$mediaTypes, mediaTypes, _ref2$allowsMultipleS, allowsMultipleSelection, _ref2$base, base64;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _ref2$mediaTypes = _ref2.mediaTypes, mediaTypes = _ref2$mediaTypes === void 0 ? MediaTypeOptions.Images : _ref2$mediaTypes, _ref2$allowsMultipleS = _ref2.allowsMultipleSelection, allowsMultipleSelection = _ref2$allowsMultipleS === void 0 ? false : _ref2$allowsMultipleS, _ref2$base = _ref2.base64, base64 = _ref2$base === void 0 ? false : _ref2$base;\n\n              if (Platform.isDOMAvailable) {\n                _context2.next = 3;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", {\n                cancelled: true\n              });\n\n            case 3:\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(openFileBrowserAsync({\n                mediaTypes: mediaTypes,\n                allowsMultipleSelection: allowsMultipleSelection,\n                capture: true,\n                base64: base64\n              }));\n\n            case 5:\n              return _context2.abrupt(\"return\", _context2.sent);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  getCameraPermissionsAsync: function getCameraPermissionsAsync() {\n    return function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", permissionGrantedResponse());\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  requestCameraPermissionsAsync: function requestCameraPermissionsAsync() {\n    return function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", permissionGrantedResponse());\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  getMediaLibraryPermissionsAsync: function getMediaLibraryPermissionsAsync(_writeOnly) {\n    return function _callee5() {\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", permissionGrantedResponse());\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  },\n  requestMediaLibraryPermissionsAsync: function requestMediaLibraryPermissionsAsync(_writeOnly) {\n    return function _callee6() {\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", permissionGrantedResponse());\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }();\n  }\n};\n\nfunction permissionGrantedResponse() {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true\n  };\n}\n\nfunction openFileBrowserAsync(_ref3) {\n  var mediaTypes = _ref3.mediaTypes,\n      _ref3$capture = _ref3.capture,\n      capture = _ref3$capture === void 0 ? false : _ref3$capture,\n      _ref3$allowsMultipleS = _ref3.allowsMultipleSelection,\n      allowsMultipleSelection = _ref3$allowsMultipleS === void 0 ? false : _ref3$allowsMultipleS,\n      base64 = _ref3.base64;\n  var mediaTypeFormat = MediaTypeInput[mediaTypes];\n  var input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', v4());\n\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n\n  document.body.appendChild(input);\n  return new Promise(function (resolve, reject) {\n    input.addEventListener('change', function _callee7() {\n      var img, imgs;\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!input.files) {\n                _context7.next = 12;\n                break;\n              }\n\n              if (allowsMultipleSelection) {\n                _context7.next = 8;\n                break;\n              }\n\n              _context7.next = 4;\n              return _regeneratorRuntime.awrap(readFile(input.files[0], {\n                base64: base64\n              }));\n\n            case 4:\n              img = _context7.sent;\n              resolve(_objectSpread({}, img));\n              _context7.next = 12;\n              break;\n\n            case 8:\n              _context7.next = 10;\n              return _regeneratorRuntime.awrap(Promise.all(Array.from(input.files).map(function (file) {\n                return readFile(file, {\n                  base64: base64\n                });\n              })));\n\n            case 10:\n              imgs = _context7.sent;\n              resolve({\n                cancelled: false,\n                selected: imgs\n              });\n\n            case 12:\n              document.body.removeChild(input);\n\n            case 13:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n    var event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\n\nfunction readFile(targetFile, options) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n\n    reader.onerror = function () {\n      reject(new Error(\"Failed to read the selected media because the operation failed.\"));\n    };\n\n    reader.onload = function (_ref4) {\n      var target = _ref4.target;\n      var uri = target.result;\n\n      var returnRaw = function returnRaw() {\n        return resolve({\n          uri: uri,\n          width: 0,\n          height: 0,\n          cancelled: false\n        });\n      };\n\n      if (typeof uri === 'string') {\n        var image = new Image();\n        image.src = uri;\n\n        image.onload = function () {\n          var _image$naturalWidth, _image$naturalHeight;\n\n          return resolve(_objectSpread({\n            uri: uri,\n            width: (_image$naturalWidth = image.naturalWidth) != null ? _image$naturalWidth : image.width,\n            height: (_image$naturalHeight = image.naturalHeight) != null ? _image$naturalHeight : image.height,\n            cancelled: false\n          }, options.base64 && {\n            base64: uri.substr(uri.indexOf(',') + 1)\n          }));\n        };\n\n        image.onerror = function () {\n          return returnRaw();\n        };\n      } else {\n        returnRaw();\n      }\n    };\n\n    reader.readAsDataURL(targetFile);\n  });\n}","map":{"version":3,"mappings":"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","names":["PermissionStatus","Platform","v4","MediaTypeOptions","MediaTypeInput","All","Images","Videos","name","launchImageLibraryAsync","mediaTypes","allowsMultipleSelection","base64","isDOMAvailable","cancelled","openFileBrowserAsync","launchCameraAsync","capture","getCameraPermissionsAsync","permissionGrantedResponse","requestCameraPermissionsAsync","getMediaLibraryPermissionsAsync","_writeOnly","requestMediaLibraryPermissionsAsync","status","GRANTED","expires","granted","canAskAgain","mediaTypeFormat","input","document","createElement","style","display","setAttribute","body","appendChild","Promise","resolve","reject","addEventListener","files","readFile","img","all","Array","from","map","file","imgs","selected","removeChild","event","MouseEvent","dispatchEvent","targetFile","options","reader","FileReader","onerror","Error","onload","target","uri","result","returnRaw","width","height","image","Image","src","naturalWidth","naturalHeight","substr","indexOf","readAsDataURL"],"sourceRoot":"","sources":["../src/ExponentImagePicker.web.ts"],"sourcesContent":["import { PermissionResponse, PermissionStatus, Platform } from 'expo-modules-core';\nimport { v4 } from 'uuid';\n\nimport {\n  ExpandImagePickerResult,\n  ImageInfo,\n  ImagePickerMultipleResult,\n  ImagePickerResult,\n  MediaTypeOptions,\n  OpenFileBrowserOptions,\n} from './ImagePicker.types';\n\nconst MediaTypeInput = {\n  [MediaTypeOptions.All]: 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*',\n  [MediaTypeOptions.Images]: 'image/*',\n  [MediaTypeOptions.Videos]: 'video/mp4,video/quicktime,video/x-m4v,video/*',\n};\n\nexport default {\n  get name(): string {\n    return 'ExponentImagePicker';\n  },\n\n  async launchImageLibraryAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false,\n  }): Promise<ImagePickerResult | ImagePickerMultipleResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { cancelled: true };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      base64,\n    });\n  },\n\n  async launchCameraAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false,\n  }): Promise<ImagePickerResult | ImagePickerMultipleResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { cancelled: true };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      capture: true,\n      base64,\n    });\n  },\n\n  /*\n   * Delegate to expo-permissions to request camera permissions\n   */\n  async getCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n  async requestCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n\n  /*\n   * Camera roll permissions don't need to be requested on web, so we always\n   * respond with granted.\n   */\n  async getMediaLibraryPermissionsAsync(_writeOnly: boolean) {\n    return permissionGrantedResponse();\n  },\n  async requestMediaLibraryPermissionsAsync(_writeOnly: boolean): Promise<PermissionResponse> {\n    return permissionGrantedResponse();\n  },\n};\n\nfunction permissionGrantedResponse(): PermissionResponse {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true,\n  };\n}\n\nfunction openFileBrowserAsync<T extends OpenFileBrowserOptions>({\n  mediaTypes,\n  capture = false,\n  allowsMultipleSelection = false,\n  base64,\n}: T): Promise<ExpandImagePickerResult<T>> {\n  const mediaTypeFormat = MediaTypeInput[mediaTypes];\n\n  const input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', v4());\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n  document.body.appendChild(input);\n\n  return new Promise((resolve, reject) => {\n    input.addEventListener('change', async () => {\n      if (input.files) {\n        if (!allowsMultipleSelection) {\n          const img: ImageInfo = await readFile(input.files[0], { base64 });\n          resolve({\n            ...img,\n          } as ExpandImagePickerResult<T>);\n        } else {\n          const imgs: ImageInfo[] = await Promise.all(\n            Array.from(input.files).map((file) => readFile(file, { base64 }))\n          );\n          resolve({\n            cancelled: false,\n            selected: imgs,\n          } as ExpandImagePickerResult<T>);\n        }\n      }\n      document.body.removeChild(input);\n    });\n\n    const event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\n\nfunction readFile(targetFile: Blob, options: { base64: boolean }): Promise<ImageInfo> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = () => {\n      reject(new Error(`Failed to read the selected media because the operation failed.`));\n    };\n    reader.onload = ({ target }) => {\n      const uri = (target as any).result;\n      const returnRaw = () =>\n        resolve({\n          uri,\n          width: 0,\n          height: 0,\n          cancelled: false,\n        });\n\n      if (typeof uri === 'string') {\n        const image = new Image();\n        image.src = uri;\n        image.onload = () =>\n          resolve({\n            uri,\n            width: image.naturalWidth ?? image.width,\n            height: image.naturalHeight ?? image.height,\n            cancelled: false,\n            // The blob's result cannot be directly decoded as Base64 without\n            // first removing the Data-URL declaration preceding the\n            // Base64-encoded data. To retrieve only the Base64 encoded string,\n            // first remove data:*/*;base64, from the result.\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\n            ...(options.base64 && { base64: uri.substr(uri.indexOf(',') + 1) }),\n          });\n        image.onerror = () => returnRaw();\n      } else {\n        returnRaw();\n      }\n    };\n\n    reader.readAsDataURL(targetFile);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}