{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Button, Text, Input } from 'react-native-elements';\nimport React, { useState } from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Picker } from '@react-native-community/picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function CreatePostScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      imagepath = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(\"Male\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      petGender = _useState4[0],\n      setGenderValue = _useState4[1];\n\n  var _useState5 = useState(\"Kid\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      petStage = _useState6[0],\n      setStageValue = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      petName = _useState8[0],\n      setPetName = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      petAge = _useState10[0],\n      setPetAge = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      petDescription = _useState12[0],\n      setPetDescription = _useState12[1];\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(ScrollView, {\n        children: [_jsx(Input, {\n          style: styles.input,\n          placeholder: \"Charlie\",\n          label: \"Pet Name:\",\n          onChangeText: function onChangeText(text) {\n            return setPetName(text);\n          }\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"0-100\",\n          label: \"Pet Age:\",\n          onChangeText: function onChangeText(text) {\n            return setPetAge(text);\n          }\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Pet Stages:\"\n          }), _jsxs(Picker, {\n            selectedValue: petGender,\n            style: {\n              height: 50,\n              width: 100,\n              borderColor: 'white',\n              fontSize: 12,\n              color: 'rgb(36, 36, 36)'\n            },\n            itemStyle: {\n              backgroundColor: \"grey\",\n              color: \"blue\",\n              fontFamily: \"Ebrima\",\n              fontSize: 12\n            },\n            onValueChange: function onValueChange(itemValue, itemIndex) {\n              setStageValue(itemValue);\n            },\n            children: [_jsx(Picker.Item, {\n              label: \"Baby\",\n              value: \"baby\"\n            }), _jsx(Picker.Item, {\n              label: \"Kid\",\n              value: \"kid\"\n            }), _jsx(Picker.Item, {\n              label: \"Adult\",\n              value: \"adult\"\n            })]\n          })]\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"Descript your pet here\",\n          label: \"Pet Description:\",\n          onChangeText: function onChangeText(text) {\n            return setPetDescription(text);\n          }\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Pet Gender:\"\n          }), _jsxs(Picker, {\n            selectedValue: petGender,\n            style: {\n              height: 50,\n              width: 100,\n              borderColor: 'white',\n              fontSize: 12,\n              color: 'rgb(36, 36, 36)'\n            },\n            itemStyle: {\n              backgroundColor: \"grey\",\n              color: \"blue\",\n              fontFamily: \"Ebrima\",\n              fontSize: 12\n            },\n            onValueChange: function onValueChange(itemValue, itemIndex) {\n              setGenderValue(itemValue);\n            },\n            children: [_jsx(Picker.Item, {\n              label: \"Male\",\n              value: \"male\"\n            }), _jsx(Picker.Item, {\n              label: \"Female\",\n              value: \"female\"\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.imagePickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Pet Image: \"\n          }), _jsx(View, {\n            style: styles.paddingView\n          }), _jsx(_Fragment, {}), imagepath != \"\" ? _jsxs(_Fragment, {\n            children: [_jsx(Text, {\n              children: \"Press Image to Pick again\"\n            }), _jsx(TouchableOpacity, {\n              onPress: pickImage,\n              children: _jsx(Image, {\n                style: styles.imageitem,\n                source: {\n                  uri: imagepath\n                }\n              })\n            })]\n          }) : _jsx(Button, {\n            title: \"Pick an image from camera roll\",\n            onPress: pickImage,\n            titleStyle: {\n              fontSize: 12\n            }\n          })]\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 20,\n    paddingRight: 60,\n    backgroundColor: 'white'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  input: {\n    fontSize: 12\n  },\n  pickerContainer: {\n    paddingHorizontal: 10\n  },\n  pickerLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'rgb(134, 147, 158)'\n  },\n  CardContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: 200,\n    borderRadius: 25,\n    fontSize: 12\n  },\n  contentContainer: {\n    width: '50%',\n    height: '100%',\n    paddingLeft: 10,\n    flex: 1\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  petgender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  desc: {\n    fontSize: 10,\n    color: '#999999'\n  },\n  askbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  askbuttonContainer: {\n    position: 'absolute',\n    left: 10,\n    bottom: 0\n  },\n  imagePickerContainer: {\n    flexDirection: 'column',\n    paddingHorizontal: 10\n  },\n  paddingView: {\n    paddingTop: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/CreatePostScreen.tsx"],"names":["Button","Text","Input","React","useState","ImagePicker","Picker","CreatePostScreen","imagepath","setImage","petGender","setGenderValue","petStage","setStageValue","petName","setPetName","petAge","setPetAge","petDescription","setPetDescription","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","styles","container","input","text","pickerContainer","pickerLabel","height","width","borderColor","fontSize","color","backgroundColor","fontFamily","itemValue","itemIndex","imagePickerContainer","paddingView","imageitem","StyleSheet","create","flex","alignItems","justifyContent","padding","paddingRight","title","fontWeight","separator","marginVertical","paddingHorizontal","CardContainer","flexDirection","flexWrap","borderRadius","borderWidth","aspectRatio","contentContainer","paddingLeft","petname","petgender","marginBottom","desc","askbutton","askbuttonContainer","position","left","bottom","paddingTop"],"mappings":";;;;;;;AAEA,SAASA,MAAT,EAAyCC,IAAzC,EAA+CC,KAA/C,QAAqE,uBAArE;AAEA,OAAOC,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AAGA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,SAASC,MAAT,QAAuB,gCAAvB;;;;AAGA,eAAe,SAASC,gBAAT,GAA4B;AACzC,kBAA8BH,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOI,SAAP;AAAA,MAAkBC,QAAlB;;AACA,mBAAoCL,QAAQ,CAAkB,MAAlB,CAA5C;AAAA;AAAA,MAAOM,SAAP;AAAA,MAAkBC,cAAlB;;AACA,mBAAkCP,QAAQ,CAAkB,KAAlB,CAA1C;AAAA;AAAA,MAAOQ,QAAP;AAAA,MAAiBC,aAAjB;;AACA,mBAA8BT,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOU,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA4BX,QAAQ,CAAkB,EAAlB,CAApC;AAAA;AAAA,MAAOY,MAAP;AAAA,MAAeC,SAAf;;AACA,oBAA4Cb,QAAQ,CAAC,EAAD,CAApD;AAAA;AAAA,MAAOc,cAAP;AAAA,MAAuBC,iBAAvB;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEGf,WAAW,CAACgB,uBAAZ,CAAoC;AACrDC,cAAAA,UAAU,EAAEjB,WAAW,CAACkB,gBAAZ,CAA6BC,GADY;AAErDC,cAAAA,aAAa,EAAE,IAFsC;AAGrDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH6C;AAIrDC,cAAAA,OAAO,EAAE;AAJ4C,aAApC,CAFH;;AAAA;AAEZC,YAAAA,MAFY;;AAQhB,gBAAI,CAACA,MAAM,CAACC,SAAZ,EAAuB;AACrBpB,cAAAA,QAAQ,CAACmB,MAAM,CAACE,GAAR,CAAR;AACD;;AAVe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAaA,SACE;AAAA,cAEE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,gBACE,MAAC,UAAD;AAAA,mBAGE,KAAC,KAAD;AAAO,UAAA,KAAK,EAAED,MAAM,CAACE,KAArB;AAA4B,UAAA,WAAW,EAAC,SAAxC;AAAkD,UAAA,KAAK,EAAC,WAAxD;AAAoE,UAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,mBAAInB,UAAU,CAACmB,IAAD,CAAd;AAAA;AAAtF,UAHF,EAIE,KAAC,KAAD;AAAO,UAAA,KAAK,EAAEH,MAAM,CAACE,KAArB;AAA4B,UAAA,WAAW,EAAC,OAAxC;AAAgD,UAAA,KAAK,EAAC,UAAtD;AAAiE,UAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,mBAAIjB,SAAS,CAACiB,IAAD,CAAb;AAAA;AAAnF,UAJF,EAKE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEH,MAAM,CAACI,eAApB;AAAA,qBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEJ,MAAM,CAACK,WAApB;AAAA;AAAA,YADF,EAEE,MAAC,MAAD;AACE,YAAA,aAAa,EAAE1B,SADjB;AAEE,YAAA,KAAK,EAAE;AAAE2B,cAAAA,MAAM,EAAE,EAAV;AAAcC,cAAAA,KAAK,EAAE,GAArB;AAA0BC,cAAAA,WAAW,EAAE,OAAvC;AAAgDC,cAAAA,QAAQ,EAAE,EAA1D;AAA8DC,cAAAA,KAAK,EAAE;AAArE,aAFT;AAGE,YAAA,SAAS,EAAE;AAAEC,cAAAA,eAAe,EAAE,MAAnB;AAA2BD,cAAAA,KAAK,EAAE,MAAlC;AAA0CE,cAAAA,UAAU,EAAE,QAAtD;AAAgEH,cAAAA,QAAQ,EAAE;AAA1E,aAHb;AAIE,YAAA,aAAa,EAAE,uBAACI,SAAD,EAAYC,SAAZ,EAA0B;AACvChC,cAAAA,aAAa,CAAC+B,SAAD,CAAb;AACD,aANH;AAAA,uBAOE,KAAC,MAAD,CAAQ,IAAR;AAAa,cAAA,KAAK,EAAC,MAAnB;AAA0B,cAAA,KAAK,EAAC;AAAhC,cAPF,EAQE,KAAC,MAAD,CAAQ,IAAR;AAAa,cAAA,KAAK,EAAC,KAAnB;AAAyB,cAAA,KAAK,EAAC;AAA/B,cARF,EASE,KAAC,MAAD,CAAQ,IAAR;AAAa,cAAA,KAAK,EAAC,OAAnB;AAA2B,cAAA,KAAK,EAAC;AAAjC,cATF;AAAA,YAFF;AAAA,UALF,EAmBE,KAAC,KAAD;AAAO,UAAA,KAAK,EAAEb,MAAM,CAACE,KAArB;AAA4B,UAAA,WAAW,EAAC,wBAAxC;AAAiE,UAAA,KAAK,EAAC,kBAAvE;AAA0F,UAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,mBAAIf,iBAAiB,CAACe,IAAD,CAArB;AAAA;AAA5G,UAnBF,EAoBE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEH,MAAM,CAACI,eAApB;AAAA,qBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEJ,MAAM,CAACK,WAApB;AAAA;AAAA,YADF,EAEE,MAAC,MAAD;AACE,YAAA,aAAa,EAAE1B,SADjB;AAEE,YAAA,KAAK,EAAE;AAAE2B,cAAAA,MAAM,EAAE,EAAV;AAAcC,cAAAA,KAAK,EAAE,GAArB;AAA0BC,cAAAA,WAAW,EAAE,OAAvC;AAAgDC,cAAAA,QAAQ,EAAE,EAA1D;AAA8DC,cAAAA,KAAK,EAAE;AAArE,aAFT;AAGE,YAAA,SAAS,EAAE;AAAEC,cAAAA,eAAe,EAAE,MAAnB;AAA2BD,cAAAA,KAAK,EAAE,MAAlC;AAA0CE,cAAAA,UAAU,EAAE,QAAtD;AAAgEH,cAAAA,QAAQ,EAAE;AAA1E,aAHb;AAIE,YAAA,aAAa,EAAE,uBAACI,SAAD,EAAYC,SAAZ,EAA0B;AACvClC,cAAAA,cAAc,CAACiC,SAAD,CAAd;AACD,aANH;AAAA,uBAOE,KAAC,MAAD,CAAQ,IAAR;AAAa,cAAA,KAAK,EAAC,MAAnB;AAA0B,cAAA,KAAK,EAAC;AAAhC,cAPF,EAQE,KAAC,MAAD,CAAQ,IAAR;AAAa,cAAA,KAAK,EAAC,QAAnB;AAA4B,cAAA,KAAK,EAAC;AAAlC,cARF;AAAA,YAFF;AAAA,UApBF,EAiCE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEb,MAAM,CAACe,oBAApB;AAAA,qBACE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEf,MAAM,CAACK,WAApB;AAAA;AAAA,YADF,EAEE,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEL,MAAM,CAACgB;AAApB,YAFF,EAGE,mBAHF,EAIGvC,SAAS,IAAI,EAAb,GACC;AAAA,uBACE,KAAC,IAAD;AAAA;AAAA,cADF,EAEE,KAAC,gBAAD;AAAkB,cAAA,OAAO,EAAEY,SAA3B;AAAA,wBACE,KAAC,KAAD;AAAO,gBAAA,KAAK,EAAEW,MAAM,CAACiB,SAArB;AACE,gBAAA,MAAM,EAAE;AAAElB,kBAAAA,GAAG,EAAEtB;AAAP;AADV;AADF,cAFF;AAAA,YADD,GASC,KAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,gCAAd;AAA+C,YAAA,OAAO,EAAEY,SAAxD;AACE,YAAA,UAAU,EAAE;AAAEoB,cAAAA,QAAQ,EAAE;AAAZ;AADd,YAbJ;AAAA,UAjCF;AAAA;AADF;AAFF,IADF;AA4DD;AAED,IAAMT,MAAM,GAAGkB,UAAU,CAACC,MAAX,CAAkB;AAC/BlB,EAAAA,SAAS,EAAE;AACTmB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,YAFH;AAGTC,IAAAA,cAAc,EAAE,YAHP;AAITC,IAAAA,OAAO,EAAE,EAJA;AAKTC,IAAAA,YAAY,EAAE,EALL;AAMTb,IAAAA,eAAe,EAAE;AANR,GADoB;AAS/Bc,EAAAA,KAAK,EAAE;AACLhB,IAAAA,QAAQ,EAAE,EADL;AAELiB,IAAAA,UAAU,EAAE;AAFP,GATwB;AAa/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,cAAc,EAAE,EADP;AAETtB,IAAAA,MAAM,EAAE,CAFC;AAGTC,IAAAA,KAAK,EAAE;AAHE,GAboB;AAkB/BL,EAAAA,KAAK,EAAE;AACLO,IAAAA,QAAQ,EAAE;AADL,GAlBwB;AAqB/BL,EAAAA,eAAe,EAAE;AACfyB,IAAAA,iBAAiB,EAAE;AADJ,GArBc;AAyB/BxB,EAAAA,WAAW,EAAE;AACXI,IAAAA,QAAQ,EAAE,EADC;AAEXiB,IAAAA,UAAU,EAAE,MAFD;AAGXhB,IAAAA,KAAK,EAAE;AAHI,GAzBkB;AA8B/BoB,EAAAA,aAAa,EAAE;AACbvB,IAAAA,KAAK,EAAE,MADM;AAEba,IAAAA,IAAI,EAAE,CAFO;AAGbW,IAAAA,aAAa,EAAE,KAHF;AAIbC,IAAAA,QAAQ,EAAE,MAJG;AAKbX,IAAAA,UAAU,EAAE,YALC;AAMbY,IAAAA,YAAY,EAAE,EAND;AAObV,IAAAA,OAAO,EAAE,EAPI;AAQbW,IAAAA,WAAW,EAAE,CARA;AASb1B,IAAAA,WAAW,EAAE,SATA;AAUboB,IAAAA,cAAc,EAAE;AAVH,GA9BgB;AA0C/BX,EAAAA,SAAS,EAAE;AACTkB,IAAAA,WAAW,EAAE,IADJ;AAET5B,IAAAA,KAAK,EAAE,GAFE;AAGT0B,IAAAA,YAAY,EAAE,EAHL;AAITxB,IAAAA,QAAQ,EAAE;AAJD,GA1CoB;AAgD/B2B,EAAAA,gBAAgB,EAAE;AAChB7B,IAAAA,KAAK,EAAE,KADS;AAEhBD,IAAAA,MAAM,EAAE,MAFQ;AAGhB+B,IAAAA,WAAW,EAAE,EAHG;AAIhBjB,IAAAA,IAAI,EAAE;AAJU,GAhDa;AAsD/BkB,EAAAA,OAAO,EAAE;AACPZ,IAAAA,UAAU,EAAE,MADL;AAEPjB,IAAAA,QAAQ,EAAE;AAFH,GAtDsB;AA0D/B8B,EAAAA,SAAS,EAAE;AACT9B,IAAAA,QAAQ,EAAE,EADD;AAET+B,IAAAA,YAAY,EAAE,EAFL;AAGTd,IAAAA,UAAU,EAAE,MAHH;AAIThB,IAAAA,KAAK,EAAE;AAJE,GA1DoB;AAgE/B+B,EAAAA,IAAI,EAAE;AACJhC,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,KAAK,EAAE;AAFH,GAhEyB;AAoE/BgC,EAAAA,SAAS,EAAE;AACT/B,IAAAA,eAAe,EAAE,SADR;AAETsB,IAAAA,YAAY,EAAE,CAFL;AAGTJ,IAAAA,iBAAiB,EAAE;AAHV,GApEoB;AAyE/Bc,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,QAAQ,EAAE,UADQ;AAElBC,IAAAA,IAAI,EAAE,EAFY;AAGlBC,IAAAA,MAAM,EAAE;AAHU,GAzEW;AA8E/B/B,EAAAA,oBAAoB,EAAE;AACpBgB,IAAAA,aAAa,EAAE,QADK;AAEpBF,IAAAA,iBAAiB,EAAE;AAFC,GA9ES;AAkF/Bb,EAAAA,WAAW,EAAE;AACX+B,IAAAA,UAAU,EAAE;AADD;AAlFkB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, View, Image, TouchableOpacity, ScrollView } from 'react-native';\nimport { SettingStackProps, petPostDataProps } from '../types';\nimport { Button, ButtonGroup, withTheme, Text, Input, Divider } from 'react-native-elements';\nimport { storage, db } from \"../firebase\";\nimport React, { useEffect, useState } from 'react';\nimport { ref, getDownloadURL } from \"firebase/storage\";\nimport { collection, query, where, onSnapshot, getDocs } from \"firebase/firestore\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { Picker } from '@react-native-community/picker';\nimport { PetCard } from '../components/PetCard';\n\nexport default function CreatePostScreen() {\n  const [imagepath, setImage] = useState(\"\");\n  const [petGender, setGenderValue] = useState<number | string>(\"Male\");\n  const [petStage, setStageValue] = useState<number | string>(\"Kid\");\n  const [petName, setPetName] = useState('');\n  const [petAge, setPetAge] = useState<number | string>('');\n  const [petDescription, setPetDescription] = useState('');\n\n  const pickImage = async () => {\n    // No permissions request is necessary for launching the image library\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  };\n\n  return (\n    <>\n\n      <View style={styles.container}>\n        <ScrollView>\n\n\n          <Input style={styles.input} placeholder=\"Charlie\" label='Pet Name:' onChangeText={text => setPetName(text)} />\n          <Input style={styles.input} placeholder=\"0-100\" label='Pet Age:' onChangeText={text => setPetAge(text)} />\n          <View style={styles.pickerContainer}>\n            <Text style={styles.pickerLabel} >Pet Stages:</Text>\n            <Picker\n              selectedValue={petGender}\n              style={{ height: 50, width: 100, borderColor: 'white', fontSize: 12, color: 'rgb(36, 36, 36)' }}\n              itemStyle={{ backgroundColor: \"grey\", color: \"blue\", fontFamily: \"Ebrima\", fontSize: 12 }}\n              onValueChange={(itemValue, itemIndex) => {\n                setStageValue(itemValue)\n              }}>\n              <Picker.Item label=\"Baby\" value=\"baby\" />\n              <Picker.Item label=\"Kid\" value=\"kid\" />\n              <Picker.Item label=\"Adult\" value=\"adult\" />\n            </Picker>\n          </View>\n          <Input style={styles.input} placeholder=\"Descript your pet here\" label='Pet Description:' onChangeText={text => setPetDescription(text)} />\n          <View style={styles.pickerContainer}>\n            <Text style={styles.pickerLabel} >Pet Gender:</Text>\n            <Picker\n              selectedValue={petGender}\n              style={{ height: 50, width: 100, borderColor: 'white', fontSize: 12, color: 'rgb(36, 36, 36)' }}\n              itemStyle={{ backgroundColor: \"grey\", color: \"blue\", fontFamily: \"Ebrima\", fontSize: 12 }}\n              onValueChange={(itemValue, itemIndex) => {\n                setGenderValue(itemValue)\n              }}>\n              <Picker.Item label=\"Male\" value=\"male\" />\n              <Picker.Item label=\"Female\" value=\"female\" />\n            </Picker>\n          </View>\n          <View style={styles.imagePickerContainer}>\n            <Text style={styles.pickerLabel} >Pet Image: </Text>\n            <View style={styles.paddingView} />\n            <></>\n            {imagepath != \"\" ?\n              <>\n                <Text>Press Image to Pick again</Text>\n                <TouchableOpacity onPress={pickImage}>\n                  <Image style={styles.imageitem}\n                    source={{ uri: imagepath }}\n                  />\n                </TouchableOpacity>\n              </> :\n              <Button title=\"Pick an image from camera roll\" onPress={pickImage}\n                titleStyle={{ fontSize: 12 }} />\n            }\n          </View>\n        </ScrollView>\n      </View>\n\n    </>\n    //imagepath={imagepath} petname={petName} petgender={petGender} petstages={petStage} desc={petDescription} \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 20,\n    paddingRight: 60,\n    backgroundColor: 'white'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  input: {\n    fontSize: 12\n  },\n  pickerContainer: {\n    paddingHorizontal: 10,\n\n  },\n  pickerLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'rgb(134, 147, 158)'\n  },\n  CardContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start', // if you want to fill rows left to right\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15,\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: 200,\n    borderRadius: 25,\n    fontSize: 12\n  },\n  contentContainer: {\n    width: '50%',\n    height: '100%',\n    paddingLeft: 10,\n    flex: 1,\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  petgender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  desc: {\n    fontSize: 10,\n    color: '#999999'\n  },\n  askbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  askbuttonContainer: {\n    position: 'absolute',\n    left: 10,\n    bottom: 0,\n  },\n  imagePickerContainer: {\n    flexDirection: 'column',\n    paddingHorizontal: 10\n  },\n  paddingView: {\n    paddingTop: 10\n  }\n\n\n});\n"]},"metadata":{},"sourceType":"module"}