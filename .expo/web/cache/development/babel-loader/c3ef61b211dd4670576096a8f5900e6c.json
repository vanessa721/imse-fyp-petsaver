{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Text, Input } from 'react-native-elements';\nimport { storage, db } from \"../firebase\";\nimport React, { useEffect, useState } from 'react';\nimport { ref, getDownloadURL } from \"firebase/storage\";\nimport { doc, onSnapshot } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CreatePostScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageUrl = _useState2[0],\n      setImageUrl = _useState2[1];\n\n  useEffect(function () {\n    getDownloadURL(ref(storage, 'gs://petsaver-1fa7d.appspot.com/petImages/cat.png')).then(function (url) {\n      setImageUrl(url);\n    }).catch(function (error) {});\n  }, []);\n  var unsub = onSnapshot(doc(db, \"cities\", \"SF\"), function (doc) {\n    var source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\";\n    console.log(source, \" data: \", doc.data());\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"CreatePostScreen\"\n    }), _jsx(View, {\n      style: styles.separator\n    }), _jsx(Input, {\n      style: styles.input,\n      placeholder: \"Email\"\n    }), _jsx(View, {\n      style: styles.CardContainer,\n      children: _jsx(Image, {\n        style: styles.imageitem,\n        source: {\n          uri: imageUrl\n        }\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  input: {\n    fontSize: 12\n  },\n  CardContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: 100,\n    borderRadius: 25\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/CreatePostScreen.tsx"],"names":["Text","Input","storage","db","React","useEffect","useState","ref","getDownloadURL","doc","onSnapshot","CreatePostScreen","navigation","imageUrl","setImageUrl","then","url","catch","error","unsub","source","metadata","hasPendingWrites","console","log","data","styles","container","title","separator","input","CardContainer","imageitem","uri","StyleSheet","create","flex","alignItems","justifyContent","fontSize","fontWeight","marginVertical","height","width","flexDirection","flexWrap","borderRadius","padding","borderWidth","borderColor","aspectRatio"],"mappings":"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","sourcesContent":["import { StyleSheet, View, Image } from 'react-native';\nimport { auth } from \"../firebase\";\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { SettingStackProps } from '../types';\nimport { Button, ButtonGroup, withTheme, Text, Input } from 'react-native-elements';\nimport { storage, db } from \"../firebase\";\nimport React, { useEffect, useState } from 'react';\nimport { ref, getDownloadURL } from \"firebase/storage\";\nimport { doc, onSnapshot } from \"firebase/firestore\";\n\nexport default function CreatePostScreen({ navigation }: SettingStackProps<'Setting'>) {\n  const [imageUrl, setImageUrl] = useState(\"\");\n  //gs://petsaver-1fa7d.appspot.com/petImages/cat.png\n  useEffect(() => {\n    getDownloadURL(ref(storage, 'gs://petsaver-1fa7d.appspot.com/petImages/cat.png'))\n      .then((url) => {\n        setImageUrl(url);\n      })\n      .catch((error) => {\n        // Handle any errors\n      });\n\n  }, []);\n\n\n\n  const unsub = onSnapshot(doc(db, \"cities\", \"SF\"), (doc) => {\n    const source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\";\n    console.log(source, \" data: \", doc.data());\n  });\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>CreatePostScreen</Text>\n      <View style={styles.separator} />\n      <Input style={styles.input} placeholder='Email' />\n      <View style={styles.CardContainer}>\n        <Image style={styles.imageitem}\n          source={{ uri: imageUrl }}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  input: {\n    fontSize: 12\n  },\n  CardContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start', // if you want to fill rows left to right\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15,\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: 100,\n    borderRadius: 25,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}