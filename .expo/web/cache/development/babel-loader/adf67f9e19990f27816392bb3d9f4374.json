{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Button, Text } from 'react-native-elements';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function PostDetailScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var petItem = route.params.petItem;\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.iconContainer,\n        children: _jsx(FontAwesome, {\n          name: \"arrow-left\",\n          size: 25,\n          color: \"white\"\n        })\n      }), petItem.imagepath != \"\" && _jsx(Image, {\n        style: styles.imageitem,\n        source: {\n          uri: petItem.imagepath\n        }\n      }), _jsxs(View, {\n        style: styles.contentContainer,\n        children: [_jsx(Text, {\n          style: styles.petname,\n          children: item.petname\n        }), _jsxs(Text, {\n          style: styles.petgender,\n          children: [item.petgender, \"  -  \", item.petstages, \" \"]\n        }), _jsxs(Text, {\n          style: styles.desc,\n          children: [item.desc, \" \"]\n        }), _jsx(Button, {\n          buttonStyle: styles.askbutton,\n          containerStyle: styles.askbuttonContainer,\n          titleStyle: {\n            fontWeight: 'bold',\n            fontSize: 11\n          },\n          title: \"Ask about me\",\n          onPress: function onPress() {\n            return navigation.navigate('PostDetail', {\n              petItem: item\n            });\n          }\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  iconContainer: {\n    padding: 20,\n    alignSelf: 'flex-start',\n    zIndex: 1,\n    position: 'absolute'\n  },\n  imageitem: {\n    zIndex: 0,\n    aspectRatio: 0.95,\n    width: '100%'\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/PostDetailScreen.tsx"],"names":["React","Button","Text","FontAwesome","PostDetailScreen","route","navigation","petItem","params","styles","container","iconContainer","imagepath","imageitem","uri","contentContainer","petname","item","petgender","petstages","desc","askbutton","askbuttonContainer","fontWeight","fontSize","navigate","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","height","padding","alignSelf","zIndex","position","aspectRatio","width"],"mappings":"AACA,OAAOA,KAAP,MAAuD,OAAvD;;;;AAEA,SAASC,MAAT,EAAyCC,IAAzC,QAA0E,uBAA1E;AAGA,SAASC,WAAT,QAA4B,oBAA5B;;;;AAQA,eAAe,SAASC,gBAAT,OAAkF;AAAA,MAAtDC,KAAsD,QAAtDA,KAAsD;AAAA,MAA/CC,UAA+C,QAA/CA,UAA+C;AAC/F,MAAQC,OAAR,GAAoBF,KAAK,CAACG,MAA1B,CAAQD,OAAR;AAEA,SACE;AAAA,cAEE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEE,MAAM,CAACC,SAApB;AAAA,iBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,aAApB;AAAA,kBACE,KAAC,WAAD;AACE,UAAA,IAAI,EAAC,YADP;AAEE,UAAA,IAAI,EAAE,EAFR;AAGE,UAAA,KAAK,EAAC;AAHR;AADF,QADF,EASGJ,OAAO,CAACK,SAAR,IAAqB,EAArB,IAA2B,KAAC,KAAD;AAAO,QAAA,KAAK,EAAEH,MAAM,CAACI,SAArB;AAC1B,QAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAEP,OAAO,CAACK;AAAf;AADkB,QAT9B,EAYE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACM,gBAApB;AAAA,mBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEN,MAAM,CAACO,OAApB;AAAA,oBAA8BC,IAAI,CAACD;AAAnC,UADF,EAEE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEP,MAAM,CAACS,SAApB;AAAA,qBAAgCD,IAAI,CAACC,SAArC,WAAqDD,IAAI,CAACE,SAA1D;AAAA,UAFF,EAGE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEV,MAAM,CAACW,IAApB;AAAA,qBAA2BH,IAAI,CAACG,IAAhC;AAAA,UAHF,EAIE,KAAC,MAAD;AAAQ,UAAA,WAAW,EAAEX,MAAM,CAACY,SAA5B;AACE,UAAA,cAAc,EAAEZ,MAAM,CAACa,kBADzB;AAEE,UAAA,UAAU,EAAE;AAAEC,YAAAA,UAAU,EAAE,MAAd;AAAsBC,YAAAA,QAAQ,EAAE;AAAhC,WAFd;AAGE,UAAA,KAAK,EAAC,cAHR;AAIE,UAAA,OAAO,EAAE,mBAAM;AACb,mBAAOlB,UAAU,CAACmB,QAAX,CAAoB,YAApB,EAAkC;AAAElB,cAAAA,OAAO,EAAEU;AAAX,aAAlC,CAAP;AACD;AANH,UAJF;AAAA,QAZF;AAAA;AAFF,IADF;AAgCD;AAED,IAAMR,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAC/BjB,EAAAA,SAAS,EAAE;AACTkB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,YAFH;AAGTC,IAAAA,cAAc,EAAE,YAHP;AAITC,IAAAA,eAAe,EAAE,OAJR;AAKTC,IAAAA,MAAM,EAAE;AALC,GADoB;AAQ/BrB,EAAAA,aAAa,EAAE;AACbsB,IAAAA,OAAO,EAAE,EADI;AAEbC,IAAAA,SAAS,EAAE,YAFE;AAGbC,IAAAA,MAAM,EAAE,CAHK;AAIbC,IAAAA,QAAQ,EAAE;AAJG,GARgB;AAc/BvB,EAAAA,SAAS,EAAE;AACTsB,IAAAA,MAAM,EAAE,CADC;AAETE,IAAAA,WAAW,EAAE,IAFJ;AAGTC,IAAAA,KAAK,EAAE;AAHE;AAdoB,CAAlB,CAAf","sourcesContent":["\nimport React, { useEffect, useState, useContext } from 'react';\nimport { StyleSheet, View, Image, TouchableOpacity, ScrollView, Platform, Pressable } from 'react-native';\nimport { Button, ButtonGroup, withTheme, Text, Input, Divider, FAB } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { storage, db, auth } from \"../firebase\";\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { collection, query, where, onSnapshot, getDocs, addDoc } from \"firebase/firestore\";\n\nimport { SettingStackProps, petPostDataProps } from '../types';\nimport Dropdown from '../components/dropdown'\n\nexport default function PostDetailScreen({ route, navigation }: { route: any, navigation: any }) {\n  const { petItem } = route.params;\n\n  return (\n    <>\n\n      <View style={styles.container}>\n        <View style={styles.iconContainer}>\n          <FontAwesome\n            name=\"arrow-left\"\n            size={25}\n            color=\"white\"\n          />\n        </View>\n\n        {petItem.imagepath != \"\" && <Image style={styles.imageitem}\n          source={{ uri: petItem.imagepath }}\n        />}\n        <View style={styles.contentContainer}>\n          <Text style={styles.petname}>{item.petname}</Text>\n          <Text style={styles.petgender}>{item.petgender}  -  {item.petstages} </Text>\n          <Text style={styles.desc}>{item.desc} </Text>\n          <Button buttonStyle={styles.askbutton}\n            containerStyle={styles.askbuttonContainer}\n            titleStyle={{ fontWeight: 'bold', fontSize: 11 }}\n            title=\"Ask about me\"\n            onPress={() => {\n              return navigation.navigate('PostDetail', { petItem: item });\n            }}\n          >\n          </Button>\n        </View>\n      </View >\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  iconContainer: {\n    padding: 20,\n    alignSelf: 'flex-start',\n    zIndex: 1,\n    position: 'absolute'\n  },\n  imageitem: {\n    zIndex: 0,\n    aspectRatio: 0.95,\n    width: '100%',\n  },\n\n});\n\n"]},"metadata":{},"sourceType":"module"}