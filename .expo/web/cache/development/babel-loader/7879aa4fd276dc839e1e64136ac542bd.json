{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Text, Input } from 'react-native-elements';\nimport { myauth } from \"../firebase\";\nimport React, { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var handleSignup = function handleSignup() {\n    myauth().createUserWithEmailAndPassword(email, password).then(function () {\n      console.log('User account created & signed in!');\n    }).catch(function (error) {\n      if (error.code === 'auth/email-already-in-use') {\n        console.log('That email address is already in use!');\n      }\n\n      if (error.code === 'auth/invalid-email') {\n        console.log('That email address is invalid!');\n      }\n\n      console.error(error);\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Login Screen\"\n    }), _jsxs(View, {\n      style: styles.inputcontainer,\n      children: [_jsx(Input, {\n        style: styles.input,\n        placeholder: \"Email\"\n      }), _jsx(Input, {\n        style: styles.input,\n        placeholder: \"Password\",\n        secureTextEntry: true\n      })]\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return Alert.alert('Simple Button pressed');\n      },\n      title: \"Submit\"\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return Alert.alert('Simple Button pressed');\n      },\n      title: \"Register\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputcontainer: {\n    width: '80%'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  input: {\n    fontSize: 12\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/LoginScreen.tsx"],"names":["Button","Text","Input","myauth","React","useState","LoginScreen","email","setEmail","password","setPassword","handleSignup","createUserWithEmailAndPassword","then","console","log","catch","error","code","styles","container","title","inputcontainer","input","Alert","alert","StyleSheet","create","flex","alignItems","justifyContent","width","fontSize","fontWeight"],"mappings":";;;;;AAGA,SAASA,MAAT,EAAyCC,IAAzC,EAA+CC,KAA/C,QAA4D,uBAA5D;AACA,SAASC,MAAT;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAKA,eAAe,SAASC,WAAT,GAAuB;AACpC,kBAA0BD,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOE,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCH,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOI,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBR,IAAAA,MAAM,GACHS,8BADH,CACkCL,KADlC,EACyCE,QADzC,EAEGI,IAFH,CAEQ,YAAM;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACD,KAJH,EAKGC,KALH,CAKS,UAACC,KAAD,EAA8B;AACnC,UAAIA,KAAK,CAACC,IAAN,KAAe,2BAAnB,EAAgD;AAC9CJ,QAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACD;;AACD,UAAIE,KAAK,CAACC,IAAN,KAAe,oBAAnB,EAAyC;AACvCJ,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD;;AACDD,MAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACD,KAbH;AAcD,GAfD;;AAiBA,SACE,MAAC,oBAAD;AAAsB,IAAA,KAAK,EAAEE,MAAM,CAACC,SAApC;AAA+C,IAAA,QAAQ,EAAC,SAAxD;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA,MADF,EAEE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACG,cAApB;AAAA,iBACE,KAAC,KAAD;AAAO,QAAA,KAAK,EAAEH,MAAM,CAACI,KAArB;AAA4B,QAAA,WAAW,EAAC;AAAxC,QADF,EAEE,KAAC,KAAD;AAAO,QAAA,KAAK,EAAEJ,MAAM,CAACI,KAArB;AAA4B,QAAA,WAAW,EAAC,UAAxC;AAAmD,QAAA,eAAe;AAAlE,QAFF;AAAA,MAFF,EAME,KAAC,MAAD;AACE,MAAA,OAAO,EAAE;AAAA,eAAMC,KAAK,CAACC,KAAN,CAAY,uBAAZ,CAAN;AAAA,OADX;AAEE,MAAA,KAAK,EAAC;AAFR,MANF,EASE,KAAC,MAAD;AACE,MAAA,OAAO,EAAE;AAAA,eAAMD,KAAK,CAACC,KAAN,CAAY,uBAAZ,CAAN;AAAA,OADX;AAEE,MAAA,KAAK,EAAC;AAFR,MATF;AAAA,IADF;AAeD;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BR,EAAAA,cAAc,EAAE;AACdS,IAAAA,KAAK,EAAE;AADO,GANe;AAS/BV,EAAAA,KAAK,EAAE;AACLW,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE;AAFP,GATwB;AAa/BV,EAAAA,KAAK,EAAE;AACLS,IAAAA,QAAQ,EAAE;AADL;AAbwB,CAAlB,CAAf","sourcesContent":["import { KeyboardAvoidingView, StyleSheet, TextInput, Alert, View } from 'react-native';\n\nimport EditScreenInfo from '../components/EditScreenInfo';\nimport { Button, ButtonGroup, withTheme, Text, Input } from 'react-native-elements';\nimport { myauth } from '../firebase'\nimport React, { useState } from 'react';\n\n\n\n\nexport default function LoginScreen() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSignup = () => {\n    myauth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(() => {\n        console.log('User account created & signed in!');\n      })\n      .catch((error: { code: string; }) => {\n        if (error.code === 'auth/email-already-in-use') {\n          console.log('That email address is already in use!');\n        }\n        if (error.code === 'auth/invalid-email') {\n          console.log('That email address is invalid!');\n        }\n        console.error(error);\n      });\n  }\n\n  return (\n    <KeyboardAvoidingView style={styles.container} behavior='padding'>\n      <Text style={styles.title}>Login Screen</Text>\n      <View style={styles.inputcontainer}>\n        <Input style={styles.input} placeholder='Email' />\n        <Input style={styles.input} placeholder='Password' secureTextEntry />\n      </View>\n      <Button\n        onPress={() => Alert.alert('Simple Button pressed')}\n        title=\"Submit\" />\n      <Button\n        onPress={() => Alert.alert('Simple Button pressed')}\n        title=\"Register\" />\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputcontainer: {\n    width: '80%'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  input: {\n    fontSize: 12\n  },\n});\n"]},"metadata":{},"sourceType":"module"}