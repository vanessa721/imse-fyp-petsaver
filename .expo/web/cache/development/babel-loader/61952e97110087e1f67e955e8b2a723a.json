{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { collection, onSnapshot, orderBy, query, where } from \"firebase/firestore\";\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { PetCard } from \"../components/PetCard\";\nimport { db } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function PetCardFlatList(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      petPostDataArray = _useState2[0],\n      setpetPostDataArray = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var getData = function getData() {\n    var q, unsubscribe;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (props.filter_column != '' && props.filter_value != '') {\n              q = query(collection(db, \"PetPost\"), orderBy('createdate', \"desc\"), where(props.filter_column, \"==\", props.filter_value));\n            } else {\n              q = query(collection(db, \"PetPost\"), orderBy('createdate', \"desc\"));\n            }\n\n            unsubscribe = onSnapshot(q, function (querySnapshot) {\n              setpetPostDataArray([]);\n              querySnapshot.forEach(function (doc) {\n                if (!doc.data()['adopterID']) {\n                  var newjson = {\n                    id: doc.id,\n                    imagepath: doc.data()['imagepath'],\n                    petname: doc.data()['petname'],\n                    petgender: doc.data()['petgender'],\n                    petstages: doc.data()['petstages'],\n                    desc: doc.data()['desc'],\n                    postcreator: doc.data()['postcreator'],\n                    petType: doc.data()['petType'],\n                    requestUsers: [],\n                    sterilisation: doc.data()['sterilisation'],\n                    vaccinated: doc.data()['vaccinated'],\n                    hvAddressProve: doc.data()['hvAddressProve'],\n                    hvIncomeProve: doc.data()['hvIncomeProve'],\n                    totalIncome: doc.data()['totalIncome'],\n                    apartmentType: doc.data()['apartmentType'],\n                    apartmentSize: doc.data()['apartmentSize'],\n                    hvExperience: doc.data()['hvExperience'],\n                    hvWindowScreen: doc.data()['hvWindowScreen'],\n                    numOfOtherPet: doc.data()['numOfOtherPet'],\n                    otherPetDescription: doc.data()['otherPetDescription'],\n                    hvSmoker: doc.data()['hvSmoker'],\n                    hvAllergySymptoms: doc.data()['hvAllergySymptoms'],\n                    hvRespiratoryDiseases: doc.data()['hvRespiratoryDiseases']\n                  };\n                  setpetPostDataArray(function (oldArray) {\n                    return [].concat(_toConsumableArray(oldArray), [newjson]);\n                  });\n                }\n              });\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getData();\n    setIsLoading(false);\n  }, []);\n  return _jsxs(_Fragment, {\n    children: [isLoading && _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#298e96\"\n    }), _jsx(_Fragment, {\n      children: _jsxs(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'flex-start'\n        },\n        children: [_jsx(View, {\n          style: styles.uppergadient,\n          children: _jsx(LinearGradient, {\n            colors: ['white', 'rgba(255,255,255,0)'],\n            style: {\n              height: 40\n            }\n          })\n        }), _jsx(FlatList, {\n          showsVerticalScrollIndicator: true,\n          showsHorizontalScrollIndicator: false,\n          data: petPostDataArray,\n          renderItem: function renderItem(item) {\n            return PetCard(item, props.navigation, props.petTypeFilter);\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          }\n        }), _jsx(View, {\n          style: styles.lowergadient,\n          children: _jsx(LinearGradient, {\n            colors: ['rgba(255,255,255,0)', 'rgba(255,255,255,1)'],\n            style: {\n              height: 40\n            }\n          })\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  uppergadient: {\n    flex: 1,\n    top: 0,\n    width: '100%',\n    height: 40,\n    zIndex: 10,\n    position: 'absolute'\n  },\n  lowergadient: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    height: 40\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/components/PetCardFlatList.tsx"],"names":["LinearGradient","collection","onSnapshot","orderBy","query","where","React","useEffect","useState","PetCard","db","PetCardFlatList","props","petPostDataArray","setpetPostDataArray","isLoading","setIsLoading","getData","filter_column","filter_value","q","unsubscribe","querySnapshot","forEach","doc","data","newjson","id","imagepath","petname","petgender","petstages","desc","postcreator","petType","requestUsers","sterilisation","vaccinated","hvAddressProve","hvIncomeProve","totalIncome","apartmentType","apartmentSize","hvExperience","hvWindowScreen","numOfOtherPet","otherPetDescription","hvSmoker","hvAllergySymptoms","hvRespiratoryDiseases","oldArray","flex","justifyContent","styles","uppergadient","height","item","navigation","petTypeFilter","lowergadient","StyleSheet","create","top","width","zIndex","position","backgroundColor","bottom"],"mappings":"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","sourcesContent":["import { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { collection, onSnapshot, orderBy, query, where } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ActivityIndicator, FlatList, StyleSheet, View } from 'react-native';\r\nimport { PetCard } from '../components/PetCard';\r\nimport { db } from \"../firebase\";\r\nimport { HomeStackParamList, petPostDataProps } from '../types';\r\n\r\n\r\n\r\nexport function PetCardFlatList(this: any, props: PetCardFlatListProps) {\r\n    const [petPostDataArray, setpetPostDataArray] = useState<petPostDataProps[]>([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const getData = async () => {\r\n        if (props.filter_column != '' && props.filter_value != '') {\r\n            var q = query(collection(db, \"PetPost\"), orderBy('createdate', \"desc\"),\r\n                where(props.filter_column, \"==\", props.filter_value));\r\n        } else {\r\n            var q = query(collection(db, \"PetPost\"), orderBy('createdate', \"desc\"));\r\n        }\r\n\r\n        const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n            setpetPostDataArray([])\r\n            querySnapshot.forEach((doc) => {\r\n                if (!doc.data()['adopterID']) {\r\n                    const newjson = {\r\n                        id: doc.id,\r\n                        imagepath: doc.data()['imagepath'],\r\n                        petname: doc.data()['petname'],\r\n                        petgender: doc.data()['petgender'],\r\n                        petstages: doc.data()['petstages'],\r\n                        desc: doc.data()['desc'],\r\n                        postcreator: doc.data()['postcreator'],\r\n                        petType: doc.data()['petType'],\r\n                        requestUsers: [],\r\n                        sterilisation: doc.data()['sterilisation'],\r\n                        vaccinated: doc.data()['vaccinated'],\r\n                        hvAddressProve: doc.data()['hvAddressProve'],\r\n                        hvIncomeProve: doc.data()['hvIncomeProve'],\r\n                        totalIncome: doc.data()['totalIncome'],\r\n                        apartmentType: doc.data()['apartmentType'],\r\n                        apartmentSize: doc.data()['apartmentSize'],\r\n                        hvExperience: doc.data()['hvExperience'],\r\n                        hvWindowScreen: doc.data()['hvWindowScreen'],\r\n                        numOfOtherPet: doc.data()['numOfOtherPet'],\r\n                        otherPetDescription: doc.data()['otherPetDescription'],\r\n                        hvSmoker: doc.data()['hvSmoker'],\r\n                        hvAllergySymptoms: doc.data()['hvAllergySymptoms'],\r\n                        hvRespiratoryDiseases: doc.data()['hvRespiratoryDiseases'],\r\n                    }\r\n                    setpetPostDataArray(oldArray => [...oldArray, newjson]);\r\n                }\r\n\r\n            });\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n        setIsLoading(false)\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <ActivityIndicator size=\"large\" color='#298e96' />}\r\n            <>\r\n\r\n                <View style={{ flex: 1, justifyContent: 'flex-start' }}>\r\n                    <View style={styles.uppergadient}>\r\n                        <LinearGradient\r\n                            colors={['white', 'rgba(255,255,255,0)']}\r\n                            style={{ height: 40 }}\r\n                        />\r\n                    </View>\r\n                    <FlatList\r\n                        showsVerticalScrollIndicator={true}\r\n                        showsHorizontalScrollIndicator={false}\r\n                        data={petPostDataArray}\r\n                        renderItem={(item) => PetCard(item, props.navigation, props.petTypeFilter)}\r\n                        keyExtractor={item => item.id}\r\n                    />\r\n                    <View style={styles.lowergadient}>\r\n                        <LinearGradient\r\n                            colors={['rgba(255,255,255,0)', 'rgba(255,255,255,1)']}\r\n                            style={{ height: 40 }}\r\n                        />\r\n                    </View>\r\n                </View>\r\n\r\n            </>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    uppergadient: {\r\n        flex: 1,\r\n        top: 0,\r\n        width: '100%',\r\n        height: 40,\r\n        zIndex: 10,\r\n        position: 'absolute'\r\n    },\r\n    lowergadient: {\r\n        flex: 1,\r\n        backgroundColor: 'transparent',\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        width: '100%',\r\n        height: 40\r\n    }\r\n});\r\n\r\ninterface PetCardFlatListProps {\r\n    filter_column: string,\r\n    filter_value: string | undefined,\r\n    petTypeFilter: string | undefined\r\n    navigation: NativeStackNavigationProp<HomeStackParamList, \"Home\">\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}