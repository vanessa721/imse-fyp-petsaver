{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"../firebase\";\nimport { collection, query, where, onSnapshot, orderBy, doc } from \"firebase/firestore\";\nimport React, { useEffect, useState } from 'react';\nimport { db } from \"../firebase\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { PetSocialMediaCard } from \"./PetSocialMediaCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function MyFavPetFlatList(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      petPostDataArray = _useState2[0],\n      setpetPostDataArray = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var getData = function getData() {\n    var _auth$currentUser;\n\n    var userId, unsub;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            userId = (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid;\n\n            if (userId) {\n              unsub = onSnapshot(doc(db, \"Users\", userId), function (doc) {\n                var _doc$data;\n\n                if (doc == undefined) return false;\n                if (!doc.data()) return false;\n\n                if ((_doc$data = doc.data()) != null && _doc$data.favorites) {\n                  var _doc$data2;\n\n                  var q = query(collection(db, \"PetPost\"), where('__name__', \"in\", (_doc$data2 = doc.data()) == null ? void 0 : _doc$data2.favorites), orderBy('createdate', \"desc\"));\n                  var unsubscribe = onSnapshot(q, function (querySnapshot) {\n                    setpetPostDataArray([]);\n                    querySnapshot.forEach(function (doc) {\n                      var newjson = {\n                        id: doc.id,\n                        imagepath: doc.data()['imagepath'],\n                        petname: doc.data()['petname'],\n                        petgender: doc.data()['petgender'],\n                        petstages: doc.data()['petstages'],\n                        desc: doc.data()['desc'],\n                        postcreator: doc.data()['postcreator'],\n                        petType: doc.data()['petType'],\n                        requestUsers: []\n                      };\n                      setpetPostDataArray(function (oldArray) {\n                        return [].concat(_toConsumableArray(oldArray), [newjson]);\n                      });\n                    });\n                  });\n                }\n              });\n            }\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getData();\n    setIsLoading(false);\n  }, []);\n  return _jsxs(_Fragment, {\n    children: [isLoading && _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#298e96\"\n    }), _jsx(View, {\n      style: styles.uppergadient,\n      children: _jsx(LinearGradient, {\n        colors: ['white', 'rgba(255,255,255,0)'],\n        style: {\n          height: 40\n        }\n      })\n    }), _jsx(FlatList, {\n      showsVerticalScrollIndicator: true,\n      showsHorizontalScrollIndicator: false,\n      data: petPostDataArray,\n      renderItem: function renderItem(item) {\n        return PetSocialMediaCard(item, props.navigation);\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    }), _jsx(View, {\n      style: styles.lowergadient,\n      children: _jsx(LinearGradient, {\n        colors: ['rgba(255,255,255,0)', 'rgba(255,255,255,1)'],\n        style: {\n          height: 40\n        }\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  uppergadient: {\n    flex: 1,\n    top: 20,\n    width: '100%',\n    height: 40,\n    zIndex: 10,\n    position: 'absolute'\n  },\n  lowergadient: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    height: 40\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/components/MyFavPetFlatList.tsx"],"names":["auth","collection","query","where","onSnapshot","orderBy","doc","React","useEffect","useState","db","LinearGradient","PetSocialMediaCard","MyFavPetFlatList","props","petPostDataArray","setpetPostDataArray","isLoading","setIsLoading","getData","userId","currentUser","uid","unsub","undefined","data","favorites","q","unsubscribe","querySnapshot","forEach","newjson","id","imagepath","petname","petgender","petstages","desc","postcreator","petType","requestUsers","oldArray","styles","uppergadient","height","item","navigation","lowergadient","StyleSheet","create","flex","top","width","zIndex","position","backgroundColor","bottom"],"mappings":"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","sourcesContent":["\r\nimport { StyleSheet, FlatList, ActivityIndicator, View } from 'react-native';\r\nimport { ref, getDownloadURL } from \"firebase/storage\";\r\nimport { auth } from \"../firebase\";\r\nimport { collection, query, where, onSnapshot, getDocs, orderBy, limit, doc } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport { MyFavParamList, petPostDataProps } from '../types';\r\nimport { storage, db } from \"../firebase\";\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { PetSocialMediaCard } from './PetSocialMediaCard';\r\n\r\nexport function MyFavPetFlatList(this: any, props: MyFavPetFlatList) {\r\n    const [petPostDataArray, setpetPostDataArray] = useState<petPostDataProps[]>([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    const getData = async () => {\r\n        var userId = auth.currentUser?.uid;\r\n        if (userId) {\r\n            const unsub = onSnapshot(doc(db, \"Users\", userId), (doc) => {\r\n                if (doc == undefined) return false;\r\n                if (!doc.data()) return false;\r\n                if (doc.data()?.favorites) {\r\n                    var q = query(collection(db, \"PetPost\"), where('__name__', \"in\", doc.data()?.favorites), orderBy('createdate', \"desc\"));\r\n                    const unsubscribe = onSnapshot(q, (querySnapshot) => {\r\n                        setpetPostDataArray([])\r\n                        querySnapshot.forEach((doc) => {\r\n                            const newjson = {\r\n                                id: doc.id,\r\n                                imagepath: doc.data()['imagepath'],\r\n                                petname: doc.data()['petname'],\r\n                                petgender: doc.data()['petgender'],\r\n                                petstages: doc.data()['petstages'],\r\n                                desc: doc.data()['desc'],\r\n                                postcreator: doc.data()['postcreator'],\r\n                                petType: doc.data()['petType'],\r\n                                requestUsers: [],\r\n                            }\r\n                            setpetPostDataArray(oldArray => [...oldArray, newjson]);\r\n\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n        setIsLoading(false)\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {isLoading && <ActivityIndicator size=\"large\" color='#298e96' />}\r\n            <View style={styles.uppergadient}>\r\n                <LinearGradient\r\n                    colors={['white', 'rgba(255,255,255,0)']}\r\n                    style={{ height: 40 }}\r\n                />\r\n            </View>\r\n            <FlatList\r\n                // contentContainerStyle={{ justifyContent: 'flex-start', flexDirection: 'column' }}\r\n                showsVerticalScrollIndicator={true}\r\n                showsHorizontalScrollIndicator={false}\r\n                data={petPostDataArray}\r\n                renderItem={(item) => PetSocialMediaCard(item, props.navigation)}\r\n                keyExtractor={item => item.id}\r\n            />\r\n            <View style={styles.lowergadient}>\r\n                <LinearGradient\r\n                    colors={['rgba(255,255,255,0)', 'rgba(255,255,255,1)']}\r\n                    style={{ height: 40 }}\r\n                />\r\n            </View>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    uppergadient: {\r\n        flex: 1,\r\n        //backgroundColor: 'white',\r\n        top: 20,\r\n        width: '100%',\r\n        height: 40,\r\n        zIndex: 10,\r\n        position: 'absolute'\r\n    },\r\n    lowergadient: {\r\n        flex: 1,\r\n        backgroundColor: 'transparent',\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        width: '100%',\r\n        height: 40\r\n    }\r\n});\r\n\r\ninterface MyFavPetFlatList {\r\n    navigation: NativeStackNavigationProp<MyFavParamList, \"MyFav\">\r\n}\r\n"]},"metadata":{},"sourceType":"module"}