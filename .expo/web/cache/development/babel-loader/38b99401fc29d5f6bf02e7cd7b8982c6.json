{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { collection, doc, onSnapshot, query, where } from \"firebase/firestore\";\nimport { default as React, useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-elements';\nimport { AdoptedPetCard } from \"../components/AdoptedPetCard\";\nimport { auth, db } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function MyFavScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      petPostDataArray = _useState2[0],\n      setpetPostDataArray = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var getData = function getData() {\n    var _auth$currentUser;\n\n    var userId, unsub;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            userId = (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid;\n\n            if (userId) {\n              unsub = onSnapshot(doc(db, \"Users\", userId), function (doc) {\n                var _doc$data;\n\n                if (doc == undefined) return false;\n                if (!doc.data()) return false;\n                setpetPostDataArray([]);\n\n                if ((_doc$data = doc.data()) != null && _doc$data.favorites) {\n                  var _doc$data2;\n\n                  var q = query(collection(db, \"PetPost\"), where('__name__', \"in\", (_doc$data2 = doc.data()) == null ? void 0 : _doc$data2.favorites));\n                  var unsubscribe = onSnapshot(q, function (querySnapshot) {\n                    querySnapshot.forEach(function (doc) {\n                      var newjson = {\n                        id: doc.id,\n                        imagepath: doc.data()['imagepath'],\n                        petname: doc.data()['petname'],\n                        petgender: doc.data()['petgender'],\n                        petstages: doc.data()['petstages'],\n                        desc: doc.data()['desc'],\n                        postcreator: doc.data()['postcreator'],\n                        petType: doc.data()['petType'],\n                        requestUsers: []\n                      };\n                      setpetPostDataArray(function (oldArray) {\n                        return [].concat(_toConsumableArray(oldArray), [newjson]);\n                      });\n                    });\n                  });\n                }\n\n                var q = query(collection(db, \"PetPost\"), where('adoptorID', \"==\", userId));\n                var unsubscribe2 = onSnapshot(q, function (querySnapshot) {\n                  querySnapshot.forEach(function (doc) {\n                    var newjson = {\n                      id: doc.id,\n                      imagepath: doc.data()['imagepath'],\n                      petname: doc.data()['petname'],\n                      petgender: doc.data()['petgender'],\n                      petstages: doc.data()['petstages'],\n                      desc: doc.data()['desc'],\n                      postcreator: doc.data()['postcreator'],\n                      petType: doc.data()['petType'],\n                      requestUsers: []\n                    };\n                    setpetPostDataArray(function (oldArray) {\n                      return [].concat(_toConsumableArray(oldArray), [newjson]);\n                    });\n                  });\n                });\n                var q = query(collection(db, \"PetPost\"), where('postcreator', \"==\", userId));\n                var unsubscribe3 = onSnapshot(q, function (querySnapshot) {\n                  querySnapshot.forEach(function (doc) {\n                    var newjson = {\n                      id: doc.id,\n                      imagepath: doc.data()['imagepath'],\n                      petname: doc.data()['petname'],\n                      petgender: doc.data()['petgender'],\n                      petstages: doc.data()['petstages'],\n                      desc: doc.data()['desc'],\n                      postcreator: doc.data()['postcreator'],\n                      petType: doc.data()['petType'],\n                      requestUsers: []\n                    };\n                    setpetPostDataArray(function (oldArray) {\n                      return [].concat(_toConsumableArray(oldArray), [newjson]);\n                    });\n                  });\n                });\n              });\n            }\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getData();\n    setIsLoading(false);\n  }, []);\n  return _jsxs(_Fragment, {\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"My Favourite\"\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(View, {\n        style: styles.uppergadient,\n        children: _jsx(LinearGradient, {\n          colors: ['white', 'rgba(255,255,255,0)'],\n          style: {\n            height: 40\n          }\n        })\n      }), _jsx(FlatList, {\n        showsVerticalScrollIndicator: true,\n        showsHorizontalScrollIndicator: false,\n        data: petPostDataArray,\n        renderItem: function renderItem(item) {\n          return AdoptedPetCard(item, navigation);\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      }), _jsx(View, {\n        style: styles.lowergadient,\n        children: _jsx(LinearGradient, {\n          colors: ['rgba(255,255,255,0)', 'rgba(255,255,255,1)'],\n          style: {\n            height: 40\n          }\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  header: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#298e96',\n    backgroundColor: 'white',\n    padding: 20,\n    paddingTop: 40,\n    paddingBottom: 0\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    paddingBottom: 0,\n    backgroundColor: 'white',\n    justifyContent: 'flex-start'\n  },\n  uppergadient: {\n    flex: 1,\n    top: 20,\n    width: '100%',\n    height: 40,\n    zIndex: 10,\n    position: 'absolute'\n  },\n  lowergadient: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    height: 40\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/MyFavScreen.tsx"],"names":["LinearGradient","collection","doc","onSnapshot","query","where","default","React","useEffect","useState","Text","AdoptedPetCard","auth","db","MyFavScreen","navigation","petPostDataArray","setpetPostDataArray","isLoading","setIsLoading","getData","userId","currentUser","uid","unsub","undefined","data","favorites","q","unsubscribe","querySnapshot","forEach","newjson","id","imagepath","petname","petgender","petstages","desc","postcreator","petType","requestUsers","oldArray","unsubscribe2","unsubscribe3","styles","header","container","uppergadient","height","item","lowergadient","StyleSheet","create","fontSize","fontWeight","color","backgroundColor","padding","paddingTop","paddingBottom","flex","justifyContent","top","width","zIndex","position","bottom"],"mappings":"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","sourcesContent":["import { LinearGradient } from 'expo-linear-gradient';\nimport { collection, doc, onSnapshot, query, where } from \"firebase/firestore\";\nimport { default as React, useEffect, useState } from 'react';\nimport { FlatList, StyleSheet, View } from 'react-native';\nimport { Text } from 'react-native-elements';\nimport { AdoptedPetCard } from '../components/AdoptedPetCard';\nimport { auth, db } from \"../firebase\";\nimport { MyFavStackProps, petPostDataProps } from '../types';\n\n\nexport default function MyFavScreen({ navigation }: MyFavStackProps<'MyFav'>) {\n  const [petPostDataArray, setpetPostDataArray] = useState<any>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const getData = async () => {\n    var userId = auth.currentUser?.uid;\n    if (userId) {\n      const unsub = onSnapshot(doc(db, \"Users\", userId), (doc) => {\n        if (doc == undefined) return false;\n        if (!doc.data()) return false;\n        setpetPostDataArray([])\n        if (doc.data()?.favorites) {\n          var q = query(collection(db, \"PetPost\"), where('__name__', \"in\", doc.data()?.favorites));\n          const unsubscribe = onSnapshot(q, (querySnapshot) => {\n\n            querySnapshot.forEach((doc) => {\n              const newjson = {\n                id: doc.id,\n                imagepath: doc.data()['imagepath'],\n                petname: doc.data()['petname'],\n                petgender: doc.data()['petgender'],\n                petstages: doc.data()['petstages'],\n                desc: doc.data()['desc'],\n                postcreator: doc.data()['postcreator'],\n                petType: doc.data()['petType'],\n                requestUsers: [],\n              }\n              setpetPostDataArray((oldArray: any) => [...oldArray, newjson]);\n\n            });\n          });\n        }\n        var q = query(collection(db, \"PetPost\"), where('adoptorID', \"==\", userId));\n        const unsubscribe2 = onSnapshot(q, (querySnapshot) => {\n\n          querySnapshot.forEach((doc) => {\n            const newjson = {\n              id: doc.id,\n              imagepath: doc.data()['imagepath'],\n              petname: doc.data()['petname'],\n              petgender: doc.data()['petgender'],\n              petstages: doc.data()['petstages'],\n              desc: doc.data()['desc'],\n              postcreator: doc.data()['postcreator'],\n              petType: doc.data()['petType'],\n              requestUsers: [],\n            }\n            setpetPostDataArray((oldArray: any) => [...oldArray, newjson]);\n          });\n        });\n        var q = query(collection(db, \"PetPost\"), where('postcreator', \"==\", userId));\n        const unsubscribe3 = onSnapshot(q, (querySnapshot) => {\n\n          querySnapshot.forEach((doc) => {\n            const newjson = {\n              id: doc.id,\n              imagepath: doc.data()['imagepath'],\n              petname: doc.data()['petname'],\n              petgender: doc.data()['petgender'],\n              petstages: doc.data()['petstages'],\n              desc: doc.data()['desc'],\n              postcreator: doc.data()['postcreator'],\n              petType: doc.data()['petType'],\n              requestUsers: [],\n            }\n            setpetPostDataArray((oldArray: any) => [...oldArray, newjson]);\n          });\n        });\n      });\n    }\n  }\n\n  useEffect(() => {\n    getData()\n    setIsLoading(false)\n  }, []);\n  return (<>\n    <Text style={styles.header}>My Favourite</Text>\n    <View style={styles.container}>\n\n      <View style={styles.uppergadient}>\n        <LinearGradient\n          colors={['white', 'rgba(255,255,255,0)']}\n          style={{ height: 40 }}\n        />\n      </View>\n      <FlatList\n        showsVerticalScrollIndicator={true}\n        showsHorizontalScrollIndicator={false}\n        data={petPostDataArray}\n        renderItem={(item) => AdoptedPetCard(item, navigation)}\n        keyExtractor={item => item.id}\n      />\n      <View style={styles.lowergadient}>\n        <LinearGradient\n          colors={['rgba(255,255,255,0)', 'rgba(255,255,255,1)']}\n          style={{ height: 40 }}\n        />\n      </View>\n    </View>\n  </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    color: '#298e96',\n    backgroundColor: 'white',\n    padding: 20,\n    paddingTop: 40,\n    paddingBottom: 0,\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    paddingBottom: 0,\n    backgroundColor: 'white',\n    justifyContent: 'flex-start'\n  },\n  uppergadient: {\n    flex: 1,\n    //backgroundColor: 'white',\n    top: 20,\n    width: '100%',\n    height: 40,\n    zIndex: 10,\n    position: 'absolute'\n  },\n  lowergadient: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    height: 40\n  }\n});\n"]},"metadata":{},"sourceType":"module"}