{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport default function useIsKeyboardShown() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isKeyboardShown = _React$useState2[0],\n      setIsKeyboardShown = _React$useState2[1];\n\n  React.useEffect(function () {\n    var handleKeyboardShow = function handleKeyboardShow() {\n      return setIsKeyboardShown(true);\n    };\n\n    var handleKeyboardHide = function handleKeyboardHide() {\n      return setIsKeyboardShown(false);\n    };\n\n    var subscriptions;\n\n    if (Platform.OS === 'ios') {\n      subscriptions = [Keyboard.addListener('keyboardWillShow', handleKeyboardShow), Keyboard.addListener('keyboardWillHide', handleKeyboardHide)];\n    } else {\n      subscriptions = [Keyboard.addListener('keyboardDidShow', handleKeyboardShow), Keyboard.addListener('keyboardDidHide', handleKeyboardHide)];\n    }\n\n    return function () {\n      subscriptions.forEach(function (s) {\n        return s.remove();\n      });\n    };\n  }, []);\n  return isKeyboardShown;\n}","map":{"version":3,"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAGA,eAAe,SAASC,kBAAT,GAA8B;AAC3C,wBAA8CD,KAAK,CAACE,QAANF,CAAe,KAAfA,CAA9C;AAAA;AAAA,MAAOG,eAAP;AAAA,MAAwBC,kBAAxB;;AAEAJ,OAAK,CAACK,SAANL,CAAgB,YAAM;AACpB,QAAMM,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,aAAMF,kBAAkB,CAAC,IAAD,CAAxB;AAAA,KAA3B;;AACA,QAAMG,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,aAAMH,kBAAkB,CAAC,KAAD,CAAxB;AAAA,KAA3B;;AAEA,QAAII,aAAJ;;AAEA,QAAIC,QAAQ,CAACC,EAATD,KAAgB,KAApB,EAA2B;AACzBD,mBAAa,GAAG,CACdG,QAAQ,CAACC,WAATD,CAAqB,kBAArBA,EAAyCL,kBAAzCK,CADc,EAEdA,QAAQ,CAACC,WAATD,CAAqB,kBAArBA,EAAyCJ,kBAAzCI,CAFc,CAAhBH;AADF,WAKO;AACLA,mBAAa,GAAG,CACdG,QAAQ,CAACC,WAATD,CAAqB,iBAArBA,EAAwCL,kBAAxCK,CADc,EAEdA,QAAQ,CAACC,WAATD,CAAqB,iBAArBA,EAAwCJ,kBAAxCI,CAFc,CAAhBH;AAID;;AAED,WAAO,YAAM;AACXA,mBAAa,CAACK,OAAdL,CAAuBM,WAAD;AAAA,eAAOA,CAAC,CAACC,MAAFD,EAAP;AAAA,OAAtBN;AADF;AAlBF,KAqBG,EArBHR;AAuBA,SAAOG,eAAP;AACD","names":["React","useIsKeyboardShown","useState","isKeyboardShown","setIsKeyboardShown","useEffect","handleKeyboardShow","handleKeyboardHide","subscriptions","Platform","OS","Keyboard","addListener","forEach","s","remove"],"sources":["useIsKeyboardShown.tsx"],"sourcesContent":["import * as React from 'react';\nimport { EmitterSubscription, Keyboard, Platform } from 'react-native';\n\nexport default function useIsKeyboardShown() {\n  const [isKeyboardShown, setIsKeyboardShown] = React.useState(false);\n\n  React.useEffect(() => {\n    const handleKeyboardShow = () => setIsKeyboardShown(true);\n    const handleKeyboardHide = () => setIsKeyboardShown(false);\n\n    let subscriptions: EmitterSubscription[];\n\n    if (Platform.OS === 'ios') {\n      subscriptions = [\n        Keyboard.addListener('keyboardWillShow', handleKeyboardShow),\n        Keyboard.addListener('keyboardWillHide', handleKeyboardHide),\n      ];\n    } else {\n      subscriptions = [\n        Keyboard.addListener('keyboardDidShow', handleKeyboardShow),\n        Keyboard.addListener('keyboardDidHide', handleKeyboardHide),\n      ];\n    }\n\n    return () => {\n      subscriptions.forEach((s) => s.remove());\n    };\n  }, []);\n\n  return isKeyboardShown;\n}\n"]},"metadata":{},"sourceType":"module"}