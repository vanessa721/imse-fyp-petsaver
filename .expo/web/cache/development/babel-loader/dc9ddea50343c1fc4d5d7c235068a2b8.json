{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"colors\", \"locations\", \"startPoint\", \"endPoint\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport normalizeColor from 'react-native-web/src/modules/normalizeColor';\nexport default function NativeLinearGradient(_ref) {\n  var colors = _ref.colors,\n      locations = _ref.locations,\n      startPoint = _ref.startPoint,\n      endPoint = _ref.endPoint,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      layout = _React$useState2[0],\n      setLayout = _React$useState2[1];\n\n  var _ref2 = layout != null ? layout : {},\n      _ref2$width = _ref2.width,\n      width = _ref2$width === void 0 ? 1 : _ref2$width,\n      _ref2$height = _ref2.height,\n      height = _ref2$height === void 0 ? 1 : _ref2$height;\n\n  var pseudoAngle = React.useMemo(function () {\n    var getControlPoints = function getControlPoints() {\n      var correctedStartPoint = [0, 0];\n\n      if (Array.isArray(startPoint)) {\n        correctedStartPoint = [startPoint[0] != null ? startPoint[0] : 0.0, startPoint[1] != null ? startPoint[1] : 0.0];\n      }\n\n      var correctedEndPoint = [0.0, 1.0];\n\n      if (Array.isArray(endPoint)) {\n        correctedEndPoint = [endPoint[0] != null ? endPoint[0] : 0.0, endPoint[1] != null ? endPoint[1] : 1.0];\n      }\n\n      return [correctedStartPoint, correctedEndPoint];\n    };\n\n    var _getControlPoints = getControlPoints(),\n        _getControlPoints2 = _slicedToArray(_getControlPoints, 2),\n        start = _getControlPoints2[0],\n        end = _getControlPoints2[1];\n\n    start[0] *= width;\n    end[0] *= width;\n    start[1] *= height;\n    end[1] *= height;\n    var py = end[1] - start[1];\n    var px = end[0] - start[0];\n    return 90 + Math.atan2(py, px) * 180 / Math.PI;\n  }, [width, height, startPoint, endPoint]);\n  var gradientColors = React.useMemo(function () {\n    return colors.map(function (color, index) {\n      var hexColor = normalizeColor(color);\n      var output = hexColor;\n\n      if (locations && locations[index]) {\n        var location = Math.max(0, Math.min(1, locations[index]));\n        var percentage = location * 100;\n        output += \" \" + percentage + \"%\";\n      }\n\n      return output;\n    });\n  }, [colors, locations]);\n  var colorStyle = gradientColors.join(',');\n  var backgroundImage = \"linear-gradient(\" + pseudoAngle + \"deg, \" + colorStyle + \")\";\n  return React.createElement(View, _objectSpread(_objectSpread({}, props), {}, {\n    style: [props.style, {\n      backgroundImage: backgroundImage\n    }],\n    onLayout: function onLayout(event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          x = _event$nativeEvent$la.x,\n          y = _event$nativeEvent$la.y,\n          width = _event$nativeEvent$la.width,\n          height = _event$nativeEvent$la.height;\n      var oldLayout = layout != null ? layout : {\n        x: 0,\n        y: 0,\n        width: 1,\n        height: 1\n      };\n\n      if (x !== oldLayout.x || y !== oldLayout.y || width !== oldLayout.width || height !== oldLayout.height) {\n        setLayout({\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        });\n      }\n\n      if (props.onLayout) {\n        props.onLayout(event);\n      }\n    }\n  }));\n}","map":{"version":3,"mappings":"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","names":["React","normalizeColor","NativeLinearGradient","colors","locations","startPoint","endPoint","props","useState","layout","setLayout","width","height","pseudoAngle","useMemo","getControlPoints","correctedStartPoint","Array","isArray","correctedEndPoint","start","end","py","px","Math","atan2","PI","gradientColors","map","color","index","hexColor","output","location","max","min","percentage","colorStyle","join","backgroundImage","View","style","onLayout","event","nativeEvent","x","y","oldLayout"],"sourceRoot":"","sources":["../src/NativeLinearGradient.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport { LayoutRectangle, View } from 'react-native';\nimport normalizeColor from 'react-native-web/src/modules/normalizeColor';\n\nimport { NativeLinearGradientPoint, NativeLinearGradientProps } from './NativeLinearGradient.types';\n\nexport default function NativeLinearGradient({\n  colors,\n  locations,\n  startPoint,\n  endPoint,\n  ...props\n}: NativeLinearGradientProps): React.ReactElement {\n  const [layout, setLayout] = React.useState<LayoutRectangle | null>(null);\n\n  const { width = 1, height = 1 } = layout ?? {};\n\n  const pseudoAngle = React.useMemo(() => {\n    const getControlPoints = (): NativeLinearGradientPoint[] => {\n      let correctedStartPoint: NativeLinearGradientPoint = [0, 0];\n      if (Array.isArray(startPoint)) {\n        correctedStartPoint = [\n          startPoint[0] != null ? startPoint[0] : 0.0,\n          startPoint[1] != null ? startPoint[1] : 0.0,\n        ];\n      }\n      let correctedEndPoint: NativeLinearGradientPoint = [0.0, 1.0];\n      if (Array.isArray(endPoint)) {\n        correctedEndPoint = [\n          endPoint[0] != null ? endPoint[0] : 0.0,\n          endPoint[1] != null ? endPoint[1] : 1.0,\n        ];\n      }\n      return [correctedStartPoint, correctedEndPoint];\n    };\n\n    const [start, end] = getControlPoints();\n    start[0] *= width;\n    end[0] *= width;\n    start[1] *= height;\n    end[1] *= height;\n    const py = end[1] - start[1];\n    const px = end[0] - start[0];\n\n    return 90 + (Math.atan2(py, px) * 180) / Math.PI;\n  }, [width, height, startPoint, endPoint]);\n\n  const gradientColors = React.useMemo(() => {\n    return colors.map((color: number, index: number): string => {\n      const hexColor = normalizeColor(color);\n      let output = hexColor;\n      if (locations && locations[index]) {\n        const location = Math.max(0, Math.min(1, locations[index]));\n        // Convert 0...1 to 0...100\n        const percentage = location * 100;\n        output += ` ${percentage}%`;\n      }\n      return output;\n    });\n  }, [colors, locations]);\n\n  const colorStyle = gradientColors.join(',');\n  const backgroundImage = `linear-gradient(${pseudoAngle}deg, ${colorStyle})`;\n  // TODO(Bacon): In the future we could consider adding `backgroundRepeat: \"no-repeat\"`. For more\n  // browser support.\n  return (\n    <View\n      {...props}\n      style={[\n        props.style,\n        // @ts-ignore: [ts] Property 'backgroundImage' does not exist on type 'ViewStyle'.\n        { backgroundImage },\n      ]}\n      onLayout={(event) => {\n        const { x, y, width, height } = event.nativeEvent.layout;\n        const oldLayout = layout ?? { x: 0, y: 0, width: 1, height: 1 };\n        // don't set new layout state unless the layout has actually changed\n        if (\n          x !== oldLayout.x ||\n          y !== oldLayout.y ||\n          width !== oldLayout.width ||\n          height !== oldLayout.height\n        ) {\n          setLayout({ x, y, width, height });\n        }\n\n        if (props.onLayout) {\n          props.onLayout(event);\n        }\n      }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}