{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Picker } from '@react-native-community/picker';\nimport { Button, Text, Input } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport { storage, db, auth } from \"../firebase\";\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function CreatePostScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      imagepath = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      downloadURL = _useState4[0],\n      setDownloadURL = _useState4[1];\n\n  var _useState5 = useState(\"Male\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      petGender = _useState6[0],\n      setGenderValue = _useState6[1];\n\n  var _useState7 = useState(\"Kid\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      petStage = _useState8[0],\n      setStageValue = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      petName = _useState10[0],\n      setPetName = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      petAge = _useState12[0],\n      setPetAge = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      petDescription = _useState14[0],\n      setPetDescription = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      uploading = _useState16[0],\n      setUploading = _useState16[1];\n\n  var _useState17 = useState(0),\n      _useState18 = _slicedToArray(_useState17, 2),\n      transferred = _useState18[0],\n      setTransferred = _useState18[1];\n\n  var pickImageByLibrary = function pickImageByLibrary() {\n    var result;\n    return _regeneratorRuntime.async(function pickImageByLibrary$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickImageByCamera = function pickImageByCamera() {\n    var result;\n    return _regeneratorRuntime.async(function pickImageByCamera$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadImage = function uploadImage() {\n    var _auth$currentUser;\n\n    var userId, imagename, storageRef, blob, snapshot, snapshotDownloadURL, docRef;\n    return _regeneratorRuntime.async(function uploadImage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setUploading(true);\n            userId = (_auth$currentUser = auth.currentUser) == null ? void 0 : _auth$currentUser.uid;\n            console.log('userId: ', userId);\n            imagename = Date.now() + '-' + getRandomString(5) + '-' + userId;\n            storageRef = storage_ref(storage, 'petImages/' + imagename + '.png');\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n              var xhr = new XMLHttpRequest();\n\n              xhr.onload = function () {\n                resolve(xhr.response);\n              };\n\n              xhr.onerror = function () {\n                reject(new TypeError(\"Network request failed\"));\n              };\n\n              xhr.responseType = \"blob\";\n              xhr.open(\"GET\", imagepath, true);\n              xhr.send(null);\n            }));\n\n          case 7:\n            blob = _context3.sent;\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(uploadBytes(storageRef, blob));\n\n          case 10:\n            snapshot = _context3.sent;\n            _context3.next = 13;\n            return _regeneratorRuntime.awrap(getDownloadURL(snapshot.ref));\n\n          case 13:\n            snapshotDownloadURL = _context3.sent;\n            setDownloadURL(snapshotDownloadURL);\n            console.log('File available at', snapshotDownloadURL);\n            _context3.prev = 16;\n            _context3.next = 19;\n            return _regeneratorRuntime.awrap(addDoc(collection(db, \"PetPost\"), {\n              imagepath: snapshotDownloadURL,\n              petname: petName,\n              petgender: petGender,\n              petstages: petStage,\n              desc: petDescription\n            }));\n\n          case 19:\n            docRef = _context3.sent;\n            console.log(\"Document written with ID: \", docRef.id);\n            _context3.next = 26;\n            break;\n\n          case 23:\n            _context3.prev = 23;\n            _context3.t0 = _context3[\"catch\"](16);\n            console.error(\"Error adding document:  \", _context3.t0);\n\n          case 26:\n            setUploading(false);\n\n          case 27:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[16, 23]], Promise);\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsxs(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        showsHorizontalScrollIndicator: false,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: [_jsx(Input, {\n          style: styles.input,\n          placeholder: \"Charlie\",\n          label: \"Pet Name:\",\n          onChangeText: function onChangeText(text) {\n            return setPetName(text);\n          }\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"0-100\",\n          label: \"Pet Age:\",\n          onChangeText: function onChangeText(text) {\n            return setPetAge(text);\n          }\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Pet Stages:\"\n          }), _jsxs(Picker, {\n            selectedValue: petGender,\n            style: {\n              height: 50,\n              width: 100,\n              borderColor: 'white',\n              fontSize: 12,\n              color: 'rgb(36, 36, 36)'\n            },\n            itemStyle: {\n              backgroundColor: \"grey\",\n              color: \"blue\",\n              fontFamily: \"Ebrima\",\n              fontSize: 12\n            },\n            onValueChange: function onValueChange(itemValue, itemIndex) {\n              setStageValue(itemValue);\n            },\n            children: [_jsx(Picker.Item, {\n              label: \"Baby\",\n              value: \"baby\"\n            }), _jsx(Picker.Item, {\n              label: \"Kid\",\n              value: \"kid\"\n            }), _jsx(Picker.Item, {\n              label: \"Adult\",\n              value: \"adult\"\n            })]\n          })]\n        }), _jsx(Input, {\n          style: styles.input,\n          placeholder: \"Descript your pet here\",\n          label: \"Pet Description:\",\n          onChangeText: function onChangeText(text) {\n            return setPetDescription(text);\n          }\n        }), _jsxs(View, {\n          style: styles.pickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Pet Gender:\"\n          }), _jsxs(Picker, {\n            selectedValue: petGender,\n            style: {\n              height: 50,\n              width: 100,\n              borderColor: 'white',\n              fontSize: 12,\n              color: 'rgb(36, 36, 36)'\n            },\n            itemStyle: {\n              backgroundColor: \"grey\",\n              color: \"blue\",\n              fontFamily: \"Ebrima\",\n              fontSize: 12\n            },\n            onValueChange: function onValueChange(itemValue, itemIndex) {\n              setGenderValue(itemValue);\n            },\n            children: [_jsx(Picker.Item, {\n              label: \"Male\",\n              value: \"male\"\n            }), _jsx(Picker.Item, {\n              label: \"Female\",\n              value: \"female\"\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.imagePickerContainer,\n          children: [_jsx(Text, {\n            style: styles.pickerLabel,\n            children: \"Pet Image: \"\n          }), _jsx(View, {\n            style: styles.paddingView\n          }), _jsx(_Fragment, {}), imagepath != \"\" ? _jsxs(_Fragment, {\n            children: [_jsx(Text, {\n              style: {\n                fontSize: 10\n              },\n              children: \"Press Image to Pick again\"\n            }), _jsx(TouchableOpacity, {\n              onPress: pickImageByLibrary,\n              children: _jsx(Image, {\n                style: styles.imageitem,\n                source: {\n                  uri: imagepath\n                }\n              })\n            })]\n          }) : _jsxs(_Fragment, {\n            children: [_jsx(Button, {\n              title: \"Select an image\",\n              onPress: pickImageByLibrary,\n              titleStyle: {\n                fontSize: 12\n              },\n              buttonStyle: {\n                width: '50%',\n                backgroundColor: 'rgba(200, 200, 200, 1)'\n              }\n            }), _jsx(Button, {\n              title: \"Open camera\",\n              onPress: pickImageByCamera,\n              titleStyle: {\n                fontSize: 12\n              },\n              buttonStyle: {\n                width: '50%',\n                backgroundColor: 'rgba(200, 200, 200, 1)'\n              }\n            })]\n          })]\n        }), _jsx(Button, {\n          title: \"Submit\",\n          onPress: uploadImage,\n          loading: uploading,\n          buttonStyle: {\n            backgroundColor: 'rgba(111, 202, 186, 1)',\n            borderRadius: 5,\n            margin: 10,\n            marginTop: 30\n          },\n          titleStyle: {\n            fontSize: 12\n          }\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 20,\n    paddingRight: 60,\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  input: {\n    fontSize: 12\n  },\n  pickerContainer: {\n    paddingHorizontal: 10\n  },\n  pickerLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'rgb(134, 147, 158)'\n  },\n  CardContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: 200,\n    borderRadius: 25,\n    fontSize: 12\n  },\n  contentContainer: {\n    width: '50%',\n    height: '100%',\n    paddingLeft: 10,\n    flex: 1\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  petgender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  desc: {\n    fontSize: 10,\n    color: '#999999'\n  },\n  askbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  askbuttonContainer: {\n    position: 'absolute',\n    left: 10,\n    bottom: 0\n  },\n  imagePickerContainer: {\n    flexDirection: 'column',\n    paddingHorizontal: 10\n  },\n  paddingView: {\n    paddingTop: 10\n  }\n});\n\nfunction getRandomString(length) {\n  var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var result = '';\n\n  for (var i = 0; i < length; i++) {\n    result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\n  }\n\n  return result;\n}","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/CreatePostScreen.tsx"],"names":["React","useState","Picker","Button","Text","Input","ImagePicker","storage","db","auth","ref","storage_ref","getDownloadURL","uploadBytes","collection","addDoc","CreatePostScreen","imagepath","setImage","downloadURL","setDownloadURL","petGender","setGenderValue","petStage","setStageValue","petName","setPetName","petAge","setPetAge","petDescription","setPetDescription","uploading","setUploading","transferred","setTransferred","pickImageByLibrary","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","pickImageByCamera","launchCameraAsync","uploadImage","userId","currentUser","uid","console","log","imagename","Date","now","getRandomString","storageRef","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","TypeError","responseType","open","send","blob","snapshot","snapshotDownloadURL","petname","petgender","petstages","desc","docRef","id","error","styles","container","height","width","input","text","pickerContainer","pickerLabel","borderColor","fontSize","color","backgroundColor","fontFamily","itemValue","itemIndex","imagePickerContainer","paddingView","imageitem","borderRadius","margin","marginTop","StyleSheet","create","flex","alignItems","justifyContent","padding","paddingRight","title","fontWeight","separator","marginVertical","paddingHorizontal","CardContainer","flexDirection","flexWrap","borderWidth","aspectRatio","contentContainer","paddingLeft","marginBottom","askbutton","askbuttonContainer","position","left","bottom","paddingTop","length","randomChars","i","charAt","Math","floor","random"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState, useContext } from 'react';\nimport { StyleSheet, View, Image, TouchableOpacity, ScrollView, Platform } from 'react-native';\nimport { Picker } from '@react-native-community/picker';\nimport { Button, ButtonGroup, withTheme, Text, Input, Divider } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\n\nimport { storage, db, auth } from \"../firebase\";\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { collection, query, where, onSnapshot, getDocs, addDoc } from \"firebase/firestore\";\n\nimport { SettingStackProps, petPostDataProps } from '../types';\n\nexport default function CreatePostScreen() {\n  const [imagepath, setImage] = useState(\"\");\n  const [downloadURL, setDownloadURL] = useState(\"\");\n  const [petGender, setGenderValue] = useState<number | string>(\"Male\");\n  const [petStage, setStageValue] = useState<number | string>(\"Kid\");\n  const [petName, setPetName] = useState('');\n  const [petAge, setPetAge] = useState<number | string>('');\n  const [petDescription, setPetDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [transferred, setTransferred] = useState(0);\n\n  const pickImageByLibrary = async () => {\n    // No permissions request is necessary for launching the image library\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  };\n  const pickImageByCamera = async () => {\n    // No permissions request is necessary for launching the image library\n    let result = await ImagePicker.launchCameraAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  };\n\n  const uploadImage = async () => {\n    setUploading(true)\n\n    const userId = auth.currentUser?.uid;\n    console.log('userId: ', userId);\n    const imagename = Date.now() + '-' + getRandomString(5) + '-' + userId\n    const storageRef = storage_ref(storage, 'petImages/' + imagename + '.png');\n\n    const blob: Blob = await new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.onload = function () {\n        resolve(xhr.response);\n      };\n      xhr.onerror = function () {\n        reject(new TypeError(\"Network request failed\"));\n      };\n      xhr.responseType = \"blob\";\n      xhr.open(\"GET\", imagepath, true);\n      xhr.send(null);\n    });\n    const snapshot = await uploadBytes(storageRef, blob);\n    const snapshotDownloadURL = await getDownloadURL(snapshot.ref);\n    setDownloadURL(snapshotDownloadURL);\n    console.log('File available at', snapshotDownloadURL);\n\n    try {\n      const docRef = await addDoc(collection(db, \"PetPost\"), {\n        imagepath: snapshotDownloadURL,\n        petname: petName,\n        petgender: petGender,\n        petstages: petStage,\n        desc: petDescription\n      });\n      console.log(\"Document written with ID: \", docRef.id);\n    } catch (e) {\n      console.error(\"Error adding document:  \", e);\n    }\n\n    setUploading(false)\n  }\n\n  return (\n    <>\n      <View style={styles.container}>\n        <ScrollView showsVerticalScrollIndicator={false}\n          showsHorizontalScrollIndicator={false}\n          style={{ height: \"100%\", width: \"100%\" }}>\n          <Input style={styles.input} placeholder=\"Charlie\" label='Pet Name:' onChangeText={text => setPetName(text)} />\n          <Input style={styles.input} placeholder=\"0-100\" label='Pet Age:' onChangeText={text => setPetAge(text)} />\n          <View style={styles.pickerContainer}>\n            <Text style={styles.pickerLabel} >Pet Stages:</Text>\n            <Picker\n              selectedValue={petGender}\n              style={{ height: 50, width: 100, borderColor: 'white', fontSize: 12, color: 'rgb(36, 36, 36)' }}\n              itemStyle={{ backgroundColor: \"grey\", color: \"blue\", fontFamily: \"Ebrima\", fontSize: 12 }}\n              onValueChange={(itemValue, itemIndex) => {\n                setStageValue(itemValue)\n              }}>\n              <Picker.Item label=\"Baby\" value=\"baby\" />\n              <Picker.Item label=\"Kid\" value=\"kid\" />\n              <Picker.Item label=\"Adult\" value=\"adult\" />\n            </Picker>\n          </View>\n          <Input style={styles.input} placeholder=\"Descript your pet here\" label='Pet Description:' onChangeText={text => setPetDescription(text)} />\n          <View style={styles.pickerContainer}>\n            <Text style={styles.pickerLabel} >Pet Gender:</Text>\n            <Picker\n              selectedValue={petGender}\n              style={{ height: 50, width: 100, borderColor: 'white', fontSize: 12, color: 'rgb(36, 36, 36)' }}\n              itemStyle={{ backgroundColor: \"grey\", color: \"blue\", fontFamily: \"Ebrima\", fontSize: 12 }}\n              onValueChange={(itemValue, itemIndex) => {\n                setGenderValue(itemValue)\n              }}>\n              <Picker.Item label=\"Male\" value=\"male\" />\n              <Picker.Item label=\"Female\" value=\"female\" />\n            </Picker>\n          </View>\n          <View style={styles.imagePickerContainer}>\n            <Text style={styles.pickerLabel} >Pet Image: </Text>\n            <View style={styles.paddingView} />\n            <></>\n            {imagepath != \"\" ?\n              <>\n                <Text style={{ fontSize: 10 }}>Press Image to Pick again</Text>\n                <TouchableOpacity onPress={pickImageByLibrary}>\n                  <Image style={styles.imageitem}\n                    source={{ uri: imagepath }}\n                  />\n                </TouchableOpacity>\n              </> :\n              <>\n                <Button title=\"Select an image\" onPress={pickImageByLibrary}\n                  titleStyle={{ fontSize: 12 }} buttonStyle={{ width: '50%', backgroundColor: 'rgba(200, 200, 200, 1)', }} />\n                <Button title=\"Open camera\" onPress={pickImageByCamera}\n                  titleStyle={{ fontSize: 12 }} buttonStyle={{ width: '50%', backgroundColor: 'rgba(200, 200, 200, 1)', }} />\n              </>\n            }\n          </View>\n          <Button title=\"Submit\" onPress={uploadImage}\n            loading={uploading}\n            buttonStyle={{\n              backgroundColor: 'rgba(111, 202, 186, 1)',\n              borderRadius: 5,\n              margin: 10, marginTop: 30\n            }}\n\n            titleStyle={{ fontSize: 12 }} />\n        </ScrollView>\n      </View>\n    </>\n    //imagepath={imagepath} petname={petName} petgender={petGender} petstages={petStage} desc={petDescription} \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 20,\n    paddingRight: 60,\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  input: {\n    fontSize: 12\n  },\n  pickerContainer: {\n    paddingHorizontal: 10,\n\n  },\n  pickerLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'rgb(134, 147, 158)'\n  },\n  CardContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start', // if you want to fill rows left to right\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15,\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: 200,\n    borderRadius: 25,\n    fontSize: 12\n  },\n  contentContainer: {\n    width: '50%',\n    height: '100%',\n    paddingLeft: 10,\n    flex: 1,\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  petgender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  desc: {\n    fontSize: 10,\n    color: '#999999'\n  },\n  askbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  askbuttonContainer: {\n    position: 'absolute',\n    left: 10,\n    bottom: 0,\n  },\n  imagePickerContainer: {\n    flexDirection: 'column',\n    paddingHorizontal: 10\n  },\n  paddingView: {\n    paddingTop: 10\n  }\n});\n\n\nfunction getRandomString(length: number) {\n  var randomChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var result = '';\n  for (var i = 0; i < length; i++) {\n    result += randomChars.charAt(Math.floor(Math.random() * randomChars.length));\n  }\n  return result;\n}"]},"metadata":{},"sourceType":"module"}