{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { collection, doc, getDocs, onSnapshot, orderBy, query } from \"firebase/firestore\";\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { PetSocialMediaCard } from \"../components/PetSocialMediaCard\";\nimport { db } from \"../firebase\";\nimport { Avatar, Text } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function PetSocialMediaScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      ownerName = _useState2[0],\n      setOwnerName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ownerImagepath = _useState4[0],\n      setOwnerImage = _useState4[1];\n\n  var _useState5 = useState(route.params.petPostDataItem.item),\n      _useState6 = _slicedToArray(_useState5, 2),\n      petPostDataItem = _useState6[0],\n      setPetPostDataItem = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      socialMediaDataArray = _useState8[0],\n      setSocialMediaDataArray = _useState8[1];\n\n  var getOwnerDetail = function getOwnerDetail() {\n    var unsub;\n    return _regeneratorRuntime.async(function getOwnerDetail$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (petPostDataItem.postcreator) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 2:\n            unsub = onSnapshot(doc(db, \"Users\", petPostDataItem.postcreator), function (doc) {\n              var _doc$data, _doc$data2;\n\n              if (doc == undefined) return false;\n              if (!doc.data()) return false;\n              setOwnerName((_doc$data = doc.data()) == null ? void 0 : _doc$data.username);\n              setOwnerImage((_doc$data2 = doc.data()) == null ? void 0 : _doc$data2.userIconUri);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getData = function getData() {\n    var socialMediaPostRef, q, querySnapshot;\n    return _regeneratorRuntime.async(function getData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            socialMediaPostRef = collection(db, \"PetPost/\" + petPostDataItem.id + '/socialMediaPost');\n            q = query(socialMediaPostRef, orderBy('createdate', 'desc'));\n            setSocialMediaDataArray([]);\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(getDocs(q));\n\n          case 5:\n            querySnapshot = _context2.sent;\n            querySnapshot.forEach(function (docSnap) {\n              var newjson = {\n                id: docSnap.id,\n                imagepath: docSnap.data()['imagepath'],\n                caption: docSnap.data()['caption'],\n                createdate: docSnap.data()['createdate']\n              };\n              console.log(\"newjson: \", newjson);\n              setSocialMediaDataArray(function (oldArray) {\n                return [].concat(_toConsumableArray(oldArray), [newjson]);\n              });\n            });\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getData();\n    getOwnerDetail();\n  }, []);\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.iconContainer,\n        children: [petPostDataItem.imagepath != \"\" && petPostDataItem.imagepath != undefined ? _jsx(Avatar, {\n          size: 100,\n          rounded: true,\n          source: {\n            uri: petPostDataItem.imagepath\n          }\n        }) : _jsx(Avatar, {\n          size: 100,\n          rounded: true,\n          title: petPostDataItem.petname ? petPostDataItem.petname[0] : \"\",\n          containerStyle: {\n            backgroundColor: '#aaaaaa'\n          }\n        }), _jsxs(View, {\n          style: styles.iconDescriptionContainer,\n          children: [_jsx(Text, {\n            style: styles.petname,\n            children: petPostDataItem.petname\n          }), _jsxs(Text, {\n            style: styles.petgender,\n            children: [petPostDataItem.petgender, \"  -  \", petPostDataItem.petstages, \" \"]\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.contentContainer,\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 14,\n            marginTop: 12,\n            fontWeight: 'bold'\n          },\n          children: \"Recent Post\"\n        }), _jsx(View, {\n          style: styles.uppergadient,\n          children: _jsx(LinearGradient, {\n            colors: ['white', 'rgba(255,255,255,0)'],\n            style: {\n              height: 40\n            }\n          })\n        }), _jsx(ScrollView, {\n          contentContainerStyle: styles.flexContainer,\n          children: _jsx(FlatList, {\n            showsVerticalScrollIndicator: true,\n            showsHorizontalScrollIndicator: false,\n            data: socialMediaDataArray,\n            renderItem: function renderItem(item) {\n              return PetSocialMediaCard(item, navigation);\n            },\n            keyExtractor: function keyExtractor(item) {\n              return item.id;\n            },\n            numColumns: 2\n          })\n        }), _jsx(View, {\n          style: styles.lowergadient,\n          children: _jsx(LinearGradient, {\n            colors: ['rgba(255,255,255,0)', 'rgba(255,255,255,1)'],\n            style: {\n              height: 40\n            }\n          })\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    height: \"100%\",\n    flexDirection: 'column'\n  },\n  iconContainer: {\n    padding: 20,\n    alignSelf: 'flex-start',\n    zIndex: 1,\n    flexDirection: 'row'\n  },\n  iconDescriptionContainer: {\n    marginLeft: 20,\n    alignSelf: 'flex-start'\n  },\n  flexContainer: {\n    width: '100%'\n  },\n  contentContainer: {\n    width: '100%',\n    height: '100%',\n    padding: 30,\n    flex: 1,\n    borderRadius: 25,\n    backgroundColor: 'white',\n    top: -30\n  },\n  uppergadient: {\n    flex: 1,\n    top: 20,\n    width: '100%',\n    height: 40,\n    zIndex: 10,\n    position: 'absolute'\n  },\n  lowergadient: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    height: 40\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  petgender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/PetSocialMediaScreen.tsx"],"names":["LinearGradient","collection","doc","getDocs","onSnapshot","orderBy","query","React","useEffect","useState","PetSocialMediaCard","db","Avatar","Text","PetSocialMediaScreen","route","navigation","ownerName","setOwnerName","ownerImagepath","setOwnerImage","params","petPostDataItem","item","setPetPostDataItem","socialMediaDataArray","setSocialMediaDataArray","getOwnerDetail","postcreator","unsub","undefined","data","username","userIconUri","getData","socialMediaPostRef","id","q","querySnapshot","forEach","docSnap","newjson","imagepath","caption","createdate","console","log","oldArray","styles","container","iconContainer","uri","petname","backgroundColor","iconDescriptionContainer","petgender","petstages","contentContainer","fontSize","marginTop","fontWeight","uppergadient","height","flexContainer","lowergadient","StyleSheet","create","flex","flexDirection","padding","alignSelf","zIndex","marginLeft","width","borderRadius","top","position","bottom","marginBottom","color"],"mappings":"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","sourcesContent":["import { LinearGradient } from 'expo-linear-gradient';\nimport { collection, doc, getDocs, onSnapshot, orderBy, query } from \"firebase/firestore\";\nimport React, { useEffect, useState } from 'react';\nimport { FlatList, ScrollView, StyleSheet, View } from 'react-native';\nimport { PetSocialMediaCard } from '../components/PetSocialMediaCard';\nimport { SocialMediaFlatList } from '../components/SocialMediaFlatList';\nimport { db } from \"../firebase\";\nimport { Card, Avatar, Text, Input, Icon, SearchBar, Button, Badge } from 'react-native-elements';\n\nimport { socialMediaDataProps } from '../types';\n\n\n\n\nexport default function PetSocialMediaScreen({ route, navigation }: { route: any, navigation: any }) {\n  const [ownerName, setOwnerName] = useState<string | undefined>('');\n  const [ownerImagepath, setOwnerImage] = useState(\"\");\n\n  const [petPostDataItem, setPetPostDataItem] = useState(route.params.petPostDataItem.item)\n  const [socialMediaDataArray, setSocialMediaDataArray] = useState<socialMediaDataProps[]>([]);\n\n  const getOwnerDetail = async () => {\n    if (!petPostDataItem.postcreator) return false;\n\n    const unsub = onSnapshot(doc(db, \"Users\", petPostDataItem.postcreator), (doc) => {\n      if (doc == undefined) return false;\n      if (!doc.data()) return false;\n      setOwnerName(doc.data()?.username)\n      setOwnerImage(doc.data()?.userIconUri)\n    });\n  }\n\n  const getData = async () => {\n\n    var socialMediaPostRef = collection(db, \"PetPost/\" + petPostDataItem.id + '/socialMediaPost');\n\n    const q = query(socialMediaPostRef, orderBy('createdate', 'desc'));\n    setSocialMediaDataArray([])\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach((docSnap) => {\n      const newjson = {\n        id: docSnap.id,\n        imagepath: docSnap.data()['imagepath'],\n        caption: docSnap.data()['caption'],\n        createdate: docSnap.data()['createdate'],\n      }\n      console.log(\"newjson: \", newjson)\n      setSocialMediaDataArray(oldArray => [...oldArray, newjson]);\n    });\n\n  }\n\n\n  useEffect(() => {\n    getData()\n    getOwnerDetail();\n  }, []);\n\n  return (\n    <>\n      <View style={styles.container}>\n        <View style={styles.iconContainer}>\n          {(petPostDataItem.imagepath != \"\" && petPostDataItem.imagepath != undefined) ?\n\n            <Avatar\n              size={100}\n              rounded\n              source={{ uri: petPostDataItem.imagepath }}\n            />\n            : <Avatar\n              size={100}\n              rounded\n              title={petPostDataItem.petname ? petPostDataItem.petname[0] : \"\"}\n              containerStyle={{ backgroundColor: '#aaaaaa' }}\n            />\n          }\n          <View style={styles.iconDescriptionContainer}>\n            <Text style={styles.petname}>{petPostDataItem.petname}</Text>\n            <Text style={styles.petgender}>{petPostDataItem.petgender}  -  {petPostDataItem.petstages} </Text>\n          </View>\n        </View>\n\n        <View style={styles.contentContainer}>\n          <Text style={{ fontSize: 14, marginTop: 12, fontWeight: 'bold' }}>Recent Post</Text>\n          <View style={styles.uppergadient}>\n            <LinearGradient\n              colors={['white', 'rgba(255,255,255,0)']}\n              style={{ height: 40 }}\n            />\n          </View>\n          <ScrollView\n            contentContainerStyle={styles.flexContainer}>\n            <FlatList\n              showsVerticalScrollIndicator={true}\n              showsHorizontalScrollIndicator={false}\n              data={socialMediaDataArray}\n              renderItem={(item) => PetSocialMediaCard(item, navigation)}\n              keyExtractor={item => item.id}\n              numColumns={2}\n            />\n\n          </ScrollView>\n          <View style={styles.lowergadient}>\n            <LinearGradient\n              colors={['rgba(255,255,255,0)', 'rgba(255,255,255,1)']}\n              style={{ height: 40 }}\n            />\n          </View>\n        </View>\n\n      </View >\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    height: \"100%\",\n    flexDirection: 'column'\n  },\n  iconContainer: {\n    padding: 20,\n    alignSelf: 'flex-start',\n    zIndex: 1,\n    flexDirection: 'row'\n  },\n  iconDescriptionContainer: {\n    marginLeft: 20,\n    alignSelf: 'flex-start'\n  },\n  flexContainer: {\n    width: '100%'\n    // flex: 1,\n    // flexDirection: 'row',\n    // flexWrap: 'wrap',\n    // alignItems: 'flex-start'\n  },\n  contentContainer: {\n    width: '100%',\n    height: '100%',\n    padding: 30,\n\n    flex: 1,\n    borderRadius: 25,\n    backgroundColor: 'white',\n    top: -30\n  },\n  uppergadient: {\n    flex: 1,\n    //backgroundColor: 'white',\n    top: 20,\n    width: '100%',\n    height: 40,\n    zIndex: 10,\n    position: 'absolute'\n  },\n  lowergadient: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n    height: 40\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  petgender: {\n    fontSize: 10, marginBottom: 12, fontWeight: 'bold', color: '#888888'\n  },\n\n\n});\n\n\n\n"]},"metadata":{},"sourceType":"module"}