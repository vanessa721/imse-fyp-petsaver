{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Text, Input } from 'react-native-elements';\nimport { auth } from \"../firebase\";\nimport React, { useEffect, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  useEffect(function () {\n    var unsubscribe = auth.OnAuthStateChanged(function (user) {\n      if (user) {\n        navigation.navigate('Home');\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var handleRegister = function handleRegister() {\n    auth.createUserWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n      var user = userCredential.user;\n      Alert.alert(user.email + \" create account\");\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n  };\n\n  var handleLogin = function handleLogin() {\n    auth.signInWithEmailAndPassword(auth, email, password).then(function (userCredential) {\n      var user = userCredential.user;\n      Alert.alert(user.email + \" Signed in\");\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Login Screen\"\n    }), _jsxs(View, {\n      style: styles.inputcontainer,\n      children: [_jsx(Input, {\n        style: styles.input,\n        placeholder: \"Email\",\n        onChangeText: function onChangeText(text) {\n          return setEmail(text);\n        }\n      }), _jsx(Input, {\n        style: styles.input,\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return setPassword(text);\n        }\n      })]\n    }), _jsx(Button, {\n      onPress: handleLogin,\n      title: \"Login\"\n    }), _jsx(Button, {\n      onPress: handleRegister,\n      title: \"Register\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputcontainer: {\n    width: '80%'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  input: {\n    fontSize: 12\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/LoginScreen.tsx"],"names":["Button","Text","Input","auth","React","useEffect","useState","LoginScreen","navigation","email","setEmail","password","setPassword","unsubscribe","OnAuthStateChanged","user","navigate","handleRegister","createUserWithEmailAndPassword","then","userCredential","Alert","alert","catch","error","errorCode","code","errorMessage","message","handleLogin","signInWithEmailAndPassword","styles","container","title","inputcontainer","input","text","StyleSheet","create","flex","alignItems","justifyContent","width","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import { KeyboardAvoidingView, StyleSheet, TextInput, Alert, View } from 'react-native';\r\nimport { Button, ButtonGroup, withTheme, Text, Input } from 'react-native-elements';\r\nimport { auth } from '../firebase';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\nexport default function LoginScreen({ navigation }: { navigation: any }) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.OnAuthStateChanged((user: any) => {\r\n      if (user) {\r\n        navigation.navigate('Home');\r\n      }\r\n    })\r\n    return unsubscribe;\r\n  }, [])\r\n\r\n  const handleRegister = () => {\r\n    auth.\r\n      createUserWithEmailAndPassword(auth, email, password)\r\n      .then((userCredential: { user: any; }) => {\r\n        const user = userCredential.user;\r\n        Alert.alert(user.email + \" create account\")\r\n      })\r\n      .catch((error: { code: any; message: any; }) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n      });\r\n  }\r\n\r\n  const handleLogin = () => {\r\n    auth.\r\n      signInWithEmailAndPassword(auth, email, password)\r\n      .then((userCredential: { user: any; }) => {\r\n        const user = userCredential.user;\r\n        Alert.alert(user.email + \" Signed in\")\r\n      })\r\n      .catch((error: { code: any; message: any; }) => {\r\n        const errorCode = error.code;\r\n        const errorMessage = error.message;\r\n      });\r\n  }\r\n\r\n  return (\r\n    <KeyboardAvoidingView style={styles.container} behavior='padding'>\r\n      <Text style={styles.title}>Login Screen</Text>\r\n      <View style={styles.inputcontainer}>\r\n        <Input style={styles.input} placeholder='Email' onChangeText={text => setEmail(text)} />\r\n        <Input style={styles.input} placeholder='Password' secureTextEntry onChangeText={text => setPassword(text)} />\r\n      </View>\r\n      <Button\r\n        onPress={handleLogin}\r\n        title=\"Login\" />\r\n      <Button\r\n        onPress={handleRegister}\r\n        title=\"Register\" />\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputcontainer: {\r\n    width: '80%'\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  input: {\r\n    fontSize: 12\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}