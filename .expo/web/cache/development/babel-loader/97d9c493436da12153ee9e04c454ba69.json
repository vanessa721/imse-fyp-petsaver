{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useImperativeHandle, useMemo, useRef } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dropdown from \"../Dropdown\";\nimport { styles } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CountrySelectConponent = React.forwardRef(function (props, currentRef) {\n  var data = props.data,\n      value = props.value,\n      valueField = props.valueField,\n      labelField = props.labelField,\n      imageField = props.imageField,\n      selectedTextStyle = props.selectedTextStyle,\n      imageStyle = props.imageStyle;\n  var ref = useRef(null);\n  useImperativeHandle(currentRef, function () {\n    return {\n      open: eventOpen,\n      close: eventClose\n    };\n  });\n\n  var eventOpen = function eventOpen() {\n    ref.current.open();\n  };\n\n  var eventClose = function eventClose() {\n    ref.current.close();\n  };\n\n  var _renderItem = function _renderItem(item) {\n    return _jsxs(View, {\n      style: styles.item,\n      children: [_jsx(Image, {\n        source: item[imageField],\n        style: [styles.image, imageStyle]\n      }), _jsx(Text, {\n        style: [styles.selectedTextStyle, selectedTextStyle],\n        children: item[labelField]\n      })]\n    });\n  };\n\n  var selectItem = useMemo(function () {\n    var index = data.findIndex(function (e) {\n      return e[valueField] === value;\n    });\n    return data[index];\n  }, [value, data]);\n  return _jsx(Dropdown, _objectSpread(_objectSpread({\n    ref: ref\n  }, props), {}, {\n    renderItem: _renderItem,\n    renderLeftIcon: function renderLeftIcon() {\n      if (selectItem != null && selectItem.image) {\n        return _jsx(Image, {\n          source: selectItem.image,\n          style: [styles.image, imageStyle]\n        });\n      } else {\n        return null;\n      }\n    }\n  }));\n});\nexport default CountrySelectConponent;","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/node_modules/react-native-element-dropdown/src/SelectCountry/index.tsx"],"names":["React","useImperativeHandle","useMemo","useRef","Dropdown","styles","CountrySelectConponent","forwardRef","props","currentRef","data","value","valueField","labelField","imageField","selectedTextStyle","imageStyle","ref","open","eventOpen","close","eventClose","current","_renderItem","item","image","selectItem","index","findIndex","e"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,mBAAhB,EAAqCC,OAArC,EAA8CC,MAA9C,QAA4D,OAA5D;;;;AAEA,OAAOC,QAAP;AAEA,SAASC,MAAT;;;AAOA,IAAMC,sBAAsB,GAAGN,KAAK,CAACO,UAAN,CAAiB,UAACC,KAAD,EAAeC,UAAf,EAA8B;AAC5E,MAAQC,IAAR,GAA2FF,KAA3F,CAAQE,IAAR;AAAA,MAAcC,KAAd,GAA2FH,KAA3F,CAAcG,KAAd;AAAA,MAAqBC,UAArB,GAA2FJ,KAA3F,CAAqBI,UAArB;AAAA,MAAiCC,UAAjC,GAA2FL,KAA3F,CAAiCK,UAAjC;AAAA,MAA6CC,UAA7C,GAA2FN,KAA3F,CAA6CM,UAA7C;AAAA,MAAyDC,iBAAzD,GAA2FP,KAA3F,CAAyDO,iBAAzD;AAAA,MAA4EC,UAA5E,GAA2FR,KAA3F,CAA4EQ,UAA5E;AACA,MAAMC,GAAQ,GAAGd,MAAM,CAAC,IAAD,CAAvB;AAEAF,EAAAA,mBAAmB,CAACQ,UAAD,EAAa,YAAM;AACpC,WAAO;AAAES,MAAAA,IAAI,EAAEC,SAAR;AAAmBC,MAAAA,KAAK,EAAEC;AAA1B,KAAP;AACD,GAFkB,CAAnB;;AAIA,MAAMF,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBF,IAAAA,GAAG,CAACK,OAAJ,CAAYJ,IAAZ;AACD,GAFD;;AAIA,MAAMG,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBJ,IAAAA,GAAG,CAACK,OAAJ,CAAYF,KAAZ;AACD,GAFD;;AAKA,MAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAe;AACjC,WACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEnB,MAAM,CAACmB,IAApB;AAAA,iBACE,KAAC,KAAD;AAAO,QAAA,MAAM,EAAEA,IAAI,CAACV,UAAD,CAAnB;AAAiC,QAAA,KAAK,EAAE,CAACT,MAAM,CAACoB,KAAR,EAAeT,UAAf;AAAxC,QADF,EAEE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACX,MAAM,CAACU,iBAAR,EAA2BA,iBAA3B,CAAb;AAAA,kBACGS,IAAI,CAACX,UAAD;AADP,QAFF;AAAA,MADF;AAQD,GATD;;AAWA,MAAMa,UAAU,GAAGxB,OAAO,CAAC,YAAM;AAC/B,QAAMyB,KAAK,GAAGjB,IAAI,CAACkB,SAAL,CAAe,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACjB,UAAD,CAAD,KAAkBD,KAAtB;AAAA,KAAhB,CAAd;AACA,WAAOD,IAAI,CAACiB,KAAD,CAAX;AACD,GAHyB,EAGvB,CAAChB,KAAD,EAAQD,IAAR,CAHuB,CAA1B;AAKA,SACE,KAAC,QAAD;AACE,IAAA,GAAG,EAAEO;AADP,KAEMT,KAFN;AAGE,IAAA,UAAU,EAAEe,WAHd;AAIE,IAAA,cAAc,EAAE,0BAAM;AACpB,UAAIG,UAAJ,YAAIA,UAAU,CAAED,KAAhB,EAAuB;AACrB,eAAO,KAAC,KAAD;AAAO,UAAA,MAAM,EAAEC,UAAU,CAACD,KAA1B;AAAiC,UAAA,KAAK,EAAE,CAACpB,MAAM,CAACoB,KAAR,EAAeT,UAAf;AAAxC,UAAP;AACD,OAFD,MAEO;AACL,eAAO,IAAP;AACD;AACF;AAVH,KADF;AAcD,CA/C8B,CAA/B;AAiDA,eAAeV,sBAAf","sourcesContent":["import React, { useImperativeHandle, useMemo, useRef } from 'react';\nimport { Image, View, Text, ImageStyle } from 'react-native';\nimport Dropdown from '../Dropdown';\nimport { IProps } from '../Dropdown/type';\nimport { styles } from './styles';\n\ninterface Props extends IProps {\n  imageField: string;\n  imageStyle?: ImageStyle;\n}\n\nconst CountrySelectConponent = React.forwardRef((props: Props, currentRef) => {\n  const { data, value, valueField, labelField, imageField, selectedTextStyle, imageStyle } = props;\n  const ref: any = useRef(null);\n\n  useImperativeHandle(currentRef, () => {\n    return { open: eventOpen, close: eventClose };\n  });\n\n  const eventOpen = () => {\n    ref.current.open();\n  }\n\n  const eventClose = () => {\n    ref.current.close();\n  }\n\n\n  const _renderItem = (item: any) => {\n    return (\n      <View style={styles.item}>\n        <Image source={item[imageField]} style={[styles.image, imageStyle]} />\n        <Text style={[styles.selectedTextStyle, selectedTextStyle]}>\n          {item[labelField]}\n        </Text>\n      </View>\n    );\n  };\n\n  const selectItem = useMemo(() => {\n    const index = data.findIndex(e => e[valueField] === value);\n    return data[index];\n  }, [value, data]);\n\n  return (\n    <Dropdown\n      ref={ref}\n      {...props}\n      renderItem={_renderItem}\n      renderLeftIcon={() => {\n        if (selectItem?.image) {\n          return <Image source={selectItem.image} style={[styles.image, imageStyle]} />;\n        } else {\n          return null;\n        }\n      }}\n    />\n  );\n});\n\nexport default CountrySelectConponent;\n"]},"metadata":{},"sourceType":"module"}