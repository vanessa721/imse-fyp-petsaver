{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, Text, Avatar, ListItem } from 'react-native-elements';\nimport { db } from \"../firebase\";\nimport { onSnapshot, doc, updateDoc } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar assetsObject = require(\"../assets/asset.tsx\");\n\nexport default function PetRequestDetailScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var petPostDataItem = route.params.petPostDataItem;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      ownerName = _useState2[0],\n      setOwnerName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ownerImagepath = _useState4[0],\n      setOwnerImage = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      requestUserList = _useState6[0],\n      setRequstUserList = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedButtonIndex = _useState8[0],\n      setSelectedButtonIndex = _useState8[1];\n\n  var getRequestDetail = function getRequestDetail(requestID) {\n    var unsub;\n    return _regeneratorRuntime.async(function getRequestDetail$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"Get data: \", requestID);\n\n            if (requestID) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 3:\n            unsub = onSnapshot(doc(db, \"Users\", requestID), function (doc) {\n              var _doc$data, _doc$data2, _doc$data3, _doc$data4, _doc$data5;\n\n              console.log(\"Current data: \", doc.data());\n              if (doc == undefined) return false;\n              if (!doc.data()) return false;\n              var newjson = {\n                userId: doc.id,\n                userName: (_doc$data = doc.data()) == null ? void 0 : _doc$data.username,\n                userImage: (_doc$data2 = doc.data()) == null ? void 0 : _doc$data2.imagepath,\n                userDesc: (_doc$data3 = doc.data()) == null ? void 0 : _doc$data3.desc,\n                userEmail: (_doc$data4 = doc.data()) == null ? void 0 : _doc$data4.email,\n                userAge: (_doc$data5 = doc.data()) == null ? void 0 : _doc$data5.userAge\n              };\n              setRequstUserList(function (oldArray) {\n                return [].concat(_toConsumableArray(oldArray), [newjson]);\n              });\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var setPetAdopter = function setPetAdopter(swipeableIndex) {\n    var requestUserID, petPostRef;\n    return _regeneratorRuntime.async(function setPetAdopter$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            requestUserID = requestUserList[swipeableIndex].userId;\n            _context2.prev = 1;\n\n            if (!(!requestUserID || petPostDataItem.item.id)) {\n              _context2.next = 5;\n              break;\n            }\n\n            console.error(\"requestUserID or petPostDataItem.id not found:  \", requestUserID);\n            return _context2.abrupt(\"return\", false);\n\n          case 5:\n            petPostRef = doc(db, 'PetPost', petPostDataItem.item.id);\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(updateDoc(petPostRef, {\n              adopterID: requestUserID\n            }));\n\n          case 8:\n            console.log(\"Document written with ID: \", petPostRef.id);\n            _context2.next = 14;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.error(\"Error adding document:  \", _context2.t0);\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 11]], Promise);\n  };\n\n  useEffect(function () {\n    console.log(\"petPostDataItem:\", petPostDataItem.item.requestUsers);\n\n    if (petPostDataItem.item.requestUsers) {\n      petPostDataItem.item.requestUsers.forEach(function (requestID, index) {\n        getRequestDetail(requestID);\n      });\n    }\n  }, []);\n  var list = [{\n    name: 'Amy Farha',\n    avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n    subtitle: 'Vice President'\n  }, {\n    name: 'Chris Jackson',\n    avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg',\n    subtitle: 'Vice Chairman'\n  }];\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {}), _jsx(View, {\n        children: requestUserList.map(function (l, i) {\n          return _jsxs(ListItem.Swipeable, {\n            bottomDivider: true,\n            leftContent: _jsx(Button, {\n              title: \"Reject\",\n              icon: {\n                name: 'close',\n                color: 'white'\n              },\n              buttonStyle: {\n                height: '100%',\n                backgroundColor: 'red'\n              },\n              onPress: function onPress() {\n                console.log('Reject', i);\n              }\n            }),\n            leftStyle: {\n              height: '100%',\n              backgroundColor: 'red',\n              justifyContent: 'center'\n            },\n            rightContent: _jsx(Button, {\n              title: \"Accpet\",\n              icon: {\n                name: 'check',\n                color: 'white'\n              },\n              buttonStyle: {\n                minHeight: '100%',\n                backgroundColor: 'green'\n              },\n              onPress: function onPress() {\n                console.log('Accept', i);\n                setPetAdopter(i);\n              }\n            }),\n            rightStyle: {\n              height: '100%',\n              backgroundColor: 'green',\n              justifyContent: 'center'\n            },\n            children: [_jsx(Avatar, {\n              source: {\n                uri: l.userImage ? l.userImage : assetsObject[\"blankIcon\"]\n              },\n              rounded: true\n            }), _jsxs(ListItem.Content, {\n              children: [_jsxs(ListItem.Title, {\n                children: [l.userEmail, \" \"]\n              }), _jsx(ListItem.Subtitle, {\n                children: l.userName\n              }), _jsx(ListItem.Subtitle, {\n                children: l.userDesc\n              })]\n            })]\n          }, i);\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  iconContainer: {\n    padding: 20,\n    alignSelf: 'flex-start',\n    zIndex: 1,\n    position: 'absolute'\n  },\n  iconContainer2: {\n    padding: 20,\n    alignSelf: 'flex-end',\n    zIndex: 1,\n    position: 'absolute'\n  },\n  imageitem: {\n    zIndex: 0,\n    aspectRatio: 1.1,\n    width: '100%'\n  },\n  contentContainer: {\n    width: '100%',\n    height: '100%',\n    padding: 30,\n    flex: 1,\n    borderRadius: 25,\n    backgroundColor: 'white',\n    top: -30\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 30\n  },\n  petgender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  desc: {\n    fontSize: 10,\n    color: '#999999'\n  },\n  contactbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15,\n    marginRight: 30\n  },\n  contactbuttonContainer: {\n    marginHorizontal: 30\n  },\n  footerContainer: {\n    position: 'absolute',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    bottom: 0,\n    width: '100%',\n    height: '10%'\n  },\n  ownerContainer: {\n    marginLeft: 30,\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  ownerDetailContainer: {\n    marginLeft: 10,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/PetRequestDetailScreen.tsx"],"names":["React","useEffect","useState","Button","Text","Avatar","ListItem","db","onSnapshot","doc","updateDoc","assetsObject","require","PetRequestDetailScreen","route","navigation","petPostDataItem","params","ownerName","setOwnerName","ownerImagepath","setOwnerImage","requestUserList","setRequstUserList","selectedButtonIndex","setSelectedButtonIndex","getRequestDetail","requestID","console","log","unsub","data","undefined","newjson","userId","id","userName","username","userImage","imagepath","userDesc","desc","userEmail","email","userAge","oldArray","setPetAdopter","swipeableIndex","requestUserID","item","error","petPostRef","adopterID","requestUsers","forEach","index","list","name","avatar_url","subtitle","styles","container","map","l","i","color","height","backgroundColor","justifyContent","minHeight","uri","StyleSheet","create","iconContainer","padding","alignSelf","zIndex","position","iconContainer2","imageitem","aspectRatio","width","contentContainer","flex","borderRadius","top","petname","fontWeight","fontSize","petgender","marginBottom","contactbutton","paddingHorizontal","marginRight","contactbuttonContainer","marginHorizontal","footerContainer","flexDirection","alignItems","bottom","ownerContainer","marginLeft","ownerDetailContainer"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState, useContext } from 'react';\nimport { StyleSheet, View, Image, TouchableOpacity, ScrollView, Platform, Pressable } from 'react-native';\nimport { Button, ButtonGroup, withTheme, Text, Input, Divider, Avatar, ListItem, Icon } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as FileSystem from 'expo-file-system';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { storage, db, auth } from \"../firebase\";\nimport { ref as storage_ref, getDownloadURL, uploadBytes } from \"firebase/storage\";\nimport { collection, query, where, onSnapshot, getDocs, addDoc, doc, setDoc, updateDoc } from \"firebase/firestore\";\n\nimport { SettingStackProps, petPostDataProps } from '../types';\nimport Dropdown from '../components/dropdown';\nconst assetsObject = require('../assets/asset.tsx')\n\nexport default function PetRequestDetailScreen({ route, navigation }: { route: any, navigation: any }) {\n  const { petPostDataItem } = route.params;\n  const [ownerName, setOwnerName] = useState<string | undefined>('');\n  const [ownerImagepath, setOwnerImage] = useState(\"\");\n  const [requestUserList, setRequstUserList] = useState<any>([])\n  const [selectedButtonIndex, setSelectedButtonIndex] = useState<any>([]);\n\n  const getRequestDetail = async (requestID: string) => {\n    console.log(\"Get data: \", requestID);\n    if (!requestID) return false;\n\n    const unsub = onSnapshot(doc(db, \"Users\", requestID), (doc) => {\n      console.log(\"Current data: \", doc.data());\n      if (doc == undefined) return false;\n      if (!doc.data()) return false;\n\n      const newjson = {\n        userId: doc.id,\n        userName: doc.data()?.username,\n        userImage: doc.data()?.imagepath,\n        userDesc: doc.data()?.desc,\n        userEmail: doc.data()?.email,\n        userAge: doc.data()?.userAge,\n      }\n      setRequstUserList((oldArray: any) => [...oldArray, newjson]);\n    });\n  }\n\n  const setPetAdopter = async (swipeableIndex: number) => {\n    var requestUserID = requestUserList[swipeableIndex].userId\n    try {\n      if (!requestUserID || petPostDataItem.item.id) {\n        console.error(\"requestUserID or petPostDataItem.id not found:  \", requestUserID);\n        return false;\n      }\n\n      const petPostRef = doc(db, 'PetPost', petPostDataItem.item.id);\n      await updateDoc(petPostRef, {\n        adopterID: requestUserID\n      });\n      console.log(\"Document written with ID: \", petPostRef.id);\n\n    } catch (e) {\n      console.error(\"Error adding document:  \", e);\n    }\n  }\n\n  useEffect(() => {\n    console.log(\"petPostDataItem:\", petPostDataItem.item.requestUsers)\n    if (petPostDataItem.item.requestUsers) {\n      petPostDataItem.item.requestUsers.forEach((requestID: string, index: any) => {\n        getRequestDetail(requestID);\n      })\n    }\n  }, []);\n\n  const list = [\n    {\n      name: 'Amy Farha',\n      avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',\n      subtitle: 'Vice President'\n    },\n    {\n      name: 'Chris Jackson',\n      avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg',\n      subtitle: 'Vice Chairman'\n    }\n  ];\n\n  return (\n    <>\n      <View style={styles.container}>\n        <Text></Text>\n        <View>\n          {\n            requestUserList.map((l: any, i: number) => (\n              <ListItem.Swipeable key={i} bottomDivider\n                leftContent={\n                  <Button\n                    title=\"Reject\"\n                    icon={{ name: 'close', color: 'white' }}\n                    buttonStyle={{ height: '100%', backgroundColor: 'red' }}\n                    onPress={() => {\n                      console.log('Reject', i)\n                    }\n                    }\n                  />\n                }\n                leftStyle={{ height: '100%', backgroundColor: 'red', justifyContent: 'center' }}\n                rightContent={\n                  <Button\n                    title=\"Accpet\"\n                    icon={{ name: 'check', color: 'white' }}\n                    buttonStyle={{ minHeight: '100%', backgroundColor: 'green' }}\n                    onPress={() => {\n                      console.log('Accept', i)\n                      setPetAdopter(i)\n                    }\n                    }\n                  />\n                }\n                rightStyle={{ height: '100%', backgroundColor: 'green', justifyContent: 'center' }}\n\n              >\n                <Avatar source={{ uri: l.userImage ? l.userImage : assetsObject[\"blankIcon\"] }} rounded />\n                <ListItem.Content>\n                  <ListItem.Title>{l.userEmail} </ListItem.Title>\n                  <ListItem.Subtitle>{l.userName}</ListItem.Subtitle>\n                  <ListItem.Subtitle>{l.userDesc}</ListItem.Subtitle>\n                </ListItem.Content>\n              </ListItem.Swipeable>\n            ))\n          }\n        </View>\n      </View >\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    // alignItems: 'flex-start',\n    // justifyContent: 'flex-start',\n    backgroundColor: 'white',\n    height: \"100%\"\n  },\n  iconContainer: {\n    padding: 20,\n    alignSelf: 'flex-start',\n    zIndex: 1,\n    position: 'absolute'\n  },\n  iconContainer2: {\n    padding: 20,\n    alignSelf: 'flex-end',\n    zIndex: 1,\n    position: 'absolute'\n  },\n  imageitem: {\n    zIndex: 0,\n    aspectRatio: 1.1,\n    width: '100%',\n  },\n  contentContainer: {\n    width: '100%',\n    height: '100%',\n    padding: 30,\n    flex: 1,\n    borderRadius: 25,\n    backgroundColor: 'white',\n    top: -30\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 30\n  },\n  petgender: {\n    fontSize: 10, marginBottom: 12, fontWeight: 'bold', color: '#888888'\n  },\n  desc: {\n    fontSize: 10, color: '#999999'\n  },\n  contactbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15,\n    marginRight: 30\n  },\n  contactbuttonContainer: {\n    marginHorizontal: 30\n  },\n  footerContainer: {\n    position: 'absolute',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    bottom: 0,\n    width: '100%',\n    height: '10%',\n  },\n  ownerContainer: {\n    marginLeft: 30,\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n  },\n  ownerDetailContainer: {\n    marginLeft: 10,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n\n\n});\n\n"]},"metadata":{},"sourceType":"module"}