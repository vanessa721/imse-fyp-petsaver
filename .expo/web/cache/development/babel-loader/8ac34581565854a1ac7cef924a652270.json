{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Button, Text, Input } from 'react-native-elements';\nimport React, { useState } from 'react';\nimport * as ImagePicker from 'expo-image-picker';\nimport { Picker } from '@react-native-community/picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function CreatePostScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      imagepath = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(\"Male\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      petGender = _useState4[0],\n      setGenderValue = _useState4[1];\n\n  var _useState5 = useState(\"Kid\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      petStage = _useState6[0],\n      setStageValue = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      petName = _useState8[0],\n      setPetName = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      petAge = _useState10[0],\n      setPetAge = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      petDescription = _useState12[0],\n      setPetDescription = _useState12[1];\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Input, {\n        style: styles.input,\n        placeholder: \"Charlie\",\n        label: \"Pet Name:\",\n        onChangeText: function onChangeText(text) {\n          return setPetName(text);\n        }\n      }), _jsx(Input, {\n        style: styles.input,\n        placeholder: \"0-100\",\n        label: \"Pet Age:\",\n        onChangeText: function onChangeText(text) {\n          return setPetAge(text);\n        }\n      }), _jsxs(View, {\n        style: styles.pickerContainer,\n        children: [_jsx(Text, {\n          style: styles.pickerLabel,\n          children: \"Pet Stages:\"\n        }), _jsxs(Picker, {\n          selectedValue: petGender,\n          style: {\n            height: 50,\n            width: 100,\n            borderColor: 'white',\n            fontSize: 16,\n            color: 'rgb(36, 36, 36)'\n          },\n          onValueChange: function onValueChange(itemValue, itemIndex) {\n            setStageValue(itemValue);\n          },\n          children: [_jsx(Picker.Item, {\n            label: \"Baby\",\n            value: \"baby\"\n          }), _jsx(Picker.Item, {\n            label: \"Kid\",\n            value: \"kid\"\n          }), _jsx(Picker.Item, {\n            label: \"Adult\",\n            value: \"adult\"\n          })]\n        })]\n      }), _jsx(Input, {\n        style: styles.input,\n        placeholder: \"Descript your pet here\",\n        label: \"Pet Description:\",\n        onChangeText: function onChangeText(text) {\n          return setPetDescription(text);\n        }\n      }), _jsxs(View, {\n        style: styles.pickerContainer,\n        children: [_jsx(Text, {\n          style: styles.pickerLabel,\n          children: \"Pet Gender:\"\n        }), _jsxs(Picker, {\n          selectedValue: petGender,\n          style: {\n            height: 50,\n            width: 100,\n            borderColor: 'white',\n            fontSize: 16,\n            color: 'rgb(36, 36, 36)'\n          },\n          onValueChange: function onValueChange(itemValue, itemIndex) {\n            setGenderValue(itemValue);\n          },\n          children: [_jsx(Picker.Item, {\n            label: \"Male\",\n            value: \"male\"\n          }), _jsx(Picker.Item, {\n            label: \"Female\",\n            value: \"female\"\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.CardContainer,\n        children: [imagepath != \"\" ? _jsx(Image, {\n          style: styles.imageitem,\n          source: {\n            uri: imagepath\n          }\n        }) : _jsx(Button, {\n          title: \"Pick an image from camera roll\",\n          onPress: pickImage,\n          style: styles.imageitem\n        }), _jsxs(View, {\n          style: styles.contentContainer,\n          children: [_jsx(Text, {\n            style: styles.petname,\n            children: petName\n          }), _jsxs(Text, {\n            style: styles.petgender,\n            children: [petGender, \"  -  \", petStage, \" \"]\n          }), _jsxs(Text, {\n            style: styles.desc,\n            children: [petDescription, \" \"]\n          }), _jsx(Button, {\n            buttonStyle: styles.askbutton,\n            containerStyle: styles.askbuttonContainer,\n            titleStyle: {\n              fontWeight: 'bold',\n              fontSize: 11\n            },\n            title: \"Ask about me\"\n          })]\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 20,\n    backgroundColor: 'white'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  },\n  input: {\n    fontSize: 12\n  },\n  pickerContainer: {\n    paddingHorizontal: 10\n  },\n  pickerLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'rgb(134, 147, 158)'\n  },\n  CardContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start',\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: 100,\n    borderRadius: 25\n  },\n  contentContainer: {\n    width: '50%',\n    height: '100%',\n    paddingLeft: 10,\n    flex: 1\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  petgender: {\n    fontSize: 10,\n    marginBottom: 12,\n    fontWeight: 'bold',\n    color: '#888888'\n  },\n  desc: {\n    fontSize: 10,\n    color: '#999999'\n  },\n  askbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  askbuttonContainer: {\n    position: 'absolute',\n    left: 10,\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["C:/Users/ZZ00UI738/Documents/van fyp/petsaver/screens/CreatePostScreen.tsx"],"names":["Button","Text","Input","React","useState","ImagePicker","Picker","CreatePostScreen","imagepath","setImage","petGender","setGenderValue","petStage","setStageValue","petName","setPetName","petAge","setPetAge","petDescription","setPetDescription","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","styles","container","input","text","pickerContainer","pickerLabel","height","width","borderColor","fontSize","color","itemValue","itemIndex","CardContainer","imageitem","contentContainer","petname","petgender","desc","askbutton","askbuttonContainer","fontWeight","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","title","separator","marginVertical","paddingHorizontal","flexDirection","flexWrap","borderRadius","borderWidth","aspectRatio","paddingLeft","marginBottom","position","left","bottom"],"mappings":"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","sourcesContent":["import { StyleSheet, View, Image } from 'react-native';\nimport { SettingStackProps, petPostDataProps } from '../types';\nimport { Button, ButtonGroup, withTheme, Text, Input } from 'react-native-elements';\nimport { storage, db } from \"../firebase\";\nimport React, { useEffect, useState } from 'react';\nimport { ref, getDownloadURL } from \"firebase/storage\";\nimport { collection, query, where, onSnapshot, getDocs } from \"firebase/firestore\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { Picker } from '@react-native-community/picker';\nimport { PetCard } from '../components/PetCard';\n\nexport default function CreatePostScreen() {\n  const [imagepath, setImage] = useState(\"\");\n  const [petGender, setGenderValue] = useState<number | string>(\"Male\");\n  const [petStage, setStageValue] = useState<number | string>(\"Kid\");\n  const [petName, setPetName] = useState('');\n  const [petAge, setPetAge] = useState<number | string>('');\n  const [petDescription, setPetDescription] = useState('');\n\n  const pickImage = async () => {\n    // No permissions request is necessary for launching the image library\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n    if (!result.cancelled) {\n      setImage(result.uri);\n    }\n  };\n\n  return (\n    <>\n      <View style={styles.container}>\n\n        <Input style={styles.input} placeholder=\"Charlie\" label='Pet Name:' onChangeText={text => setPetName(text)} />\n        <Input style={styles.input} placeholder=\"0-100\" label='Pet Age:' onChangeText={text => setPetAge(text)} />\n        <View style={styles.pickerContainer}>\n          <Text style={styles.pickerLabel} >Pet Stages:</Text>\n          <Picker\n            selectedValue={petGender}\n            style={{ height: 50, width: 100, borderColor: 'white', fontSize: 16, color: 'rgb(36, 36, 36)' }}\n            onValueChange={(itemValue, itemIndex) => {\n              setStageValue(itemValue)\n            }}>\n            <Picker.Item label=\"Baby\" value=\"baby\" />\n            <Picker.Item label=\"Kid\" value=\"kid\" />\n            <Picker.Item label=\"Adult\" value=\"adult\" />\n          </Picker>\n        </View>\n        <Input style={styles.input} placeholder=\"Descript your pet here\" label='Pet Description:' onChangeText={text => setPetDescription(text)} />\n        <View style={styles.pickerContainer}>\n          <Text style={styles.pickerLabel} >Pet Gender:</Text>\n          <Picker\n            selectedValue={petGender}\n            style={{ height: 50, width: 100, borderColor: 'white', fontSize: 16, color: 'rgb(36, 36, 36)' }}\n            onValueChange={(itemValue, itemIndex) => {\n              setGenderValue(itemValue)\n            }}>\n            <Picker.Item label=\"Male\" value=\"male\" />\n            <Picker.Item label=\"Female\" value=\"female\" />\n          </Picker>\n        </View>\n\n        <View style={styles.CardContainer}>\n          {imagepath != \"\" ? <Image style={styles.imageitem}\n            source={{ uri: imagepath }}\n          /> :\n            <Button title=\"Pick an image from camera roll\" onPress={pickImage} style={styles.imageitem} />\n          }\n          <View style={styles.contentContainer}>\n            <Text style={styles.petname}>{petName}</Text>\n            <Text style={styles.petgender}>{petGender}  -  {petStage} </Text>\n            <Text style={styles.desc}>{petDescription} </Text>\n            <Button buttonStyle={styles.askbutton}\n              containerStyle={styles.askbuttonContainer}\n              titleStyle={{ fontWeight: 'bold', fontSize: 11 }}\n              title=\"Ask about me\">\n            </Button>\n          </View>\n        </View>\n      </View>\n\n    </>\n    //imagepath={imagepath} petname={petName} petgender={petGender} petstages={petStage} desc={petDescription} \n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    padding: 20,\n    backgroundColor: 'white'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%',\n  },\n  input: {\n    fontSize: 12\n  },\n  pickerContainer: {\n    paddingHorizontal: 10,\n\n  },\n  pickerLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'rgb(134, 147, 158)'\n  },\n  CardContainer: {\n    width: '100%',\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'flex-start', // if you want to fill rows left to right\n    borderRadius: 25,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#dddddd',\n    marginVertical: 15,\n  },\n  imageitem: {\n    aspectRatio: 0.95,\n    width: 100,\n    borderRadius: 25,\n  },\n  contentContainer: {\n    width: '50%',\n    height: '100%',\n    paddingLeft: 10,\n    flex: 1,\n  },\n  petname: {\n    fontWeight: 'bold',\n    fontSize: 20\n  },\n  petgender: { fontSize: 10, marginBottom: 12, fontWeight: 'bold', color: '#888888' },\n  desc: { fontSize: 10, color: '#999999' },\n  askbutton: {\n    backgroundColor: '#0b9298',\n    borderRadius: 5,\n    paddingHorizontal: 15\n  },\n  askbuttonContainer: {\n    position: 'absolute',\n    left: 10,\n    bottom: 0,\n  }\n\n});\n"]},"metadata":{},"sourceType":"module"}